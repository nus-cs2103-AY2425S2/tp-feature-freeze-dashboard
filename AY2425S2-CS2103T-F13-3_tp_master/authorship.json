[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"deannapoh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/java/hirehive/address/Main.java) and [`MainApp`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/java/hirehive/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete n/Alice`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/UpdatedArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"deannapoh"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/java/hirehive/address/ui/Ui.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/java/hirehive/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"deannapoh"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/java/hirehive/address/logic/Logic.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete n/Alice\")` API call as an example.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete n/Alice` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"deannapoh"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/java/hirehive/address/model/Model.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"deannapoh"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-F13-3/tp/blob/master/src/main/java/hirehive/address/storage/Storage.java)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"**Target user**: HR and recruitment manager for a small company","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"**User profile**:","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"**Value proposition**: help the HR manager to effortlessly manage job candidates, interview notes, recruitment status and past communications in one place at a glance, simplifying recruitment with an intuitive, organized, and scalable solution.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"| Priority | As a …​    | I want to …​                 | So that I can…​                                                     |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"|--------|------------|------------------------------|---------------------------------------------------------------------|","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"| `* * *` | HR manager | look at the information of the interviewees       | so that I can review their qualifications for the role              |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"| `* * *` | HR manager | be able to add a new applicant’s information and contact details             | I can keep track of potential candidates.                           |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"| `* * *` | HR manager | delete the information of an applicant              | I know which applicants do not qualify for an interview.            |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `* * *` | HR manager | be able to tag candidates with custom labels such as “Shortlisted” or “Rejected”      | I can send out information more easily.                             |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"| `* * *` | HR manager | be able to tag applicants based on their stages of application (into applicants/candidates/interviewees) | I know their progress in the interviews.                            |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"| `* * *` | HR manager | save my candidate\u0027s information into my local storage         | I can access it again in the future                                 |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `* *`  | HR manager | be able to sort the interviewees based on the date of their interview       | it is more convenient for me to keep track of who I am interviewing |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"| `* *`  | HR manager | be able to add interview notes to an interviewee profile        | I can keep track of my opinions of them                             |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"| `* *`  | HR manager | be able to search for an interviewee’s name        | I can quickly find their contact details                            |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"| `* *`  | HR manager | be able to see a list of all potential applicants        | I can get an overview of how many candidates are applying           |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"| `* *`  | HR manager | sort candidates by their custom labels/tags       | I can group them together and send them the correct information.    |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"| `* *`  | HR manager | receive reminders for upcoming interviews     | I never miss a scheduled interview                                  |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `*`    | HR manager | attach resumes and cover letters to each applicant’s profile     | I can quickly review their qualifications.                          |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"| `*`    | HR manager | be able to automatically schedule interviews on applicants’ available timings   | I am less likely to make mistakes during arrangement                |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"| `*` | HR manager | filter the applicants based on certain characteristics | I can efficiently decide who qualifies for an interview             |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"| `* *` | HR manager | be able to see the count of applicants by the respective stages of application | I can fill the job vacancies adequately. |","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `HireHive` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"**Use case: UC01: - Add a person**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"deannapoh"},"content":"1. User chooses to add a person.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"deannapoh"},"content":"2. User enters the details of the person.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"deannapoh"},"content":"3. HireHive adds the person.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"deannapoh"},"content":"4. HireHive saves the details of the added person.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"deannapoh"},"content":"5. HireHive displays the added person.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"deannapoh"},"content":"* 2a. HireHive detects an invalid input in the entered details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"deannapoh"},"content":"  * 2a1. HireHive shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"deannapoh"},"content":"  * 2a2. User enters new data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"deannapoh"},"content":"  * Steps 2a1-2a2 are repeated until the user adds a valid input for the parameters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"deannapoh"},"content":"  * Use case resumes from step 3.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"deannapoh"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"deannapoh"},"content":"* 2b. HireHive detects that the person already exists.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"deannapoh"},"content":"  * 2b1. HireHive shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"deannapoh"},"content":"  * 2b2. User enters new data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"deannapoh"},"content":"  * Steps 2b1-2b2 are repeated until a person with a unique phone number is entered.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"deannapoh"},"content":"  * Use case resumes from step 3.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"deannapoh"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"deannapoh"},"content":"* 2c. HireHive detects an empty input for one of the parameters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"deannapoh"},"content":"  * 2c1. HireHive shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"deannapoh"},"content":"  * 2c2. User enters new data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"deannapoh"},"content":"  * Steps 2c1-2c2 are repeated until the user adds a valid input for all the parameters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"deannapoh"},"content":"  * Use case resumes from step 3.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"**Use case: UC02 - List all persons**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"deannapoh"},"content":"1. User requests to list persons.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"deannapoh"},"content":"2. HireHive shows a list of persons.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"deannapoh"},"content":"* 1a. The list is empty.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"deannapoh"},"content":"    * 1a1. HireHive displays an empty list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Use case: UC03 - Delete a person**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"1.  User requests to \u003cins\u003elist persons (UC02)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"2. User requests to delete a specific person in the list","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"3. HireHive deletes the person","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"    * 3a1. HireHive shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Use case: UC04 - Tag a person**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"1. User requests to \u003cins\u003elist persons (UC02)\u003c/ins\u003e.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"2. User requests to tag a person with a number of tags.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"3. HireHive tags the person with the tags","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"    * 3a1. HireHive shows an error message.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"deannapoh"},"content":"**Use case: UC05 - Edit a person**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"deannapoh"},"content":"Preconditions: The list is not empty ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"deannapoh"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"deannapoh"},"content":"1. User requests to edit a person","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"deannapoh"},"content":"2. User enters the index and parameter of the person to be edited.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"deannapoh"},"content":"3. HireHive edits the person at that index by replacing the old data at the specified parameter with what was input by the user.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"deannapoh"},"content":"4. HireHive saves the details of the edited person. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"deannapoh"},"content":"5. HireHive displays the person with their new details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"deannapoh"},"content":"   Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"deannapoh"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"deannapoh"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"deannapoh"},"content":"* 2a. HireHive detects an invalid index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"deannapoh"},"content":"   * 2a1. HireHive shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"deannapoh"},"content":"   * 2a2. User enters new data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"deannapoh"},"content":"   * Steps 2a1-2a2 are repeated until the user inputs a valid index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"deannapoh"},"content":"   * Use case resumes from step 3.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"deannapoh"},"content":"* 2b. HireHive detects an invalid parameter.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"deannapoh"},"content":"   * 2b1. HireHive shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"deannapoh"},"content":"   * 2b2. User enters new data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"deannapoh"},"content":"   * Steps 2b1-2b2 are repeated until the user inputs a valid parameter.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"deannapoh"},"content":"   * Use case resumes from step 3.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"deannapoh"},"content":"* 2c. HireHive detects an empty input. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"deannapoh"},"content":"  * 2c1. HireHive shows an error message. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"deannapoh"},"content":"  * 2c2. User enters new data. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"deannapoh"},"content":"  * Steps 2c1-2c2 are repeated until the user inputs valid inputs for both index and parameter.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"deannapoh"},"content":"  * Use case resumes from step 3.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"deannapoh"},"content":"* 2d. User tries to edit the phone number parameter of a person at a valid index.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"deannapoh"},"content":"  * 2d1. HireHive detects an existing person with the same phone number","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"deannapoh"},"content":"  * 2d2. HireHive shows an error message. ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"deannapoh"},"content":"  * 2d3. User enters new data","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"deannapoh"},"content":"  * Steps 2d1-2d3 are repeated until the user inputs a unique phone number.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"deannapoh"},"content":"  * Use case resumes from step 2.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"deannapoh"},"content":"**Use case: UC06 - Find a person**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"deannapoh"},"content":"Preconditions: The list is not empty","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"deannapoh"},"content":"**MSS**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"deannapoh"},"content":"1. User requests to find persons whose names contain certain keyword(s). ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"deannapoh"},"content":"2. User enters the keyword(s).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"deannapoh"},"content":"3. HireHive displays the persons whose names have those keyword(s).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"deannapoh"},"content":"   Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"deannapoh"},"content":"**Extensions**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"deannapoh"},"content":"* 2a. HireHive detects an empty keyword.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"deannapoh"},"content":"    * 2a1. HireHive shows an error message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"deannapoh"},"content":"    * 2a2. User enters new data.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"deannapoh"},"content":"    * Steps 2a1-2a2 are repeated until the user inputs at least 1 keyword.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"deannapoh"},"content":"    * Use case resumes from step 3.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"deannapoh"},"content":"* 2b. Nobody\u0027s names have those keyword(s).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"deannapoh"},"content":"  * 2b1. HireHive displays an empty list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"deannapoh"},"content":"  * Use case ends.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"4. Operations by the system should return responses in under 2 seconds.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"5. Data should be backed up or stored in alternative formats, in the event that the default format which the data is loaded from becomes corrupted.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"6. Data must be saved immediately upon change to ensure data persistence.","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"* **Applicants**: Anyone who submits an application to the company","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"* **Candidates**: Applicants who are potentially qualified for the job","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"* **Interviewees**: Candidates that accept an interview offer","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"* **Offered**: Interviewees that receive job offers","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"* **Rejected**: Interviewees that did not receive job offers","lastModifiedDate":"2025-03-07","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Viewing help","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. Viewing help page","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"   1. Prerequisites: Application must be running.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"   2. Test case: `help` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"      Expected: A \u0027Help\u0027 window pops up, with the link to the user guide, that can be copied.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"   3. Test case: `help 1` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"      Expected: A \u0027Help\u0027 window pops up, with the link to the user guide, that can be copied.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"### Adding a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"1. Adding a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"   1. Prerequisites: Application must be running.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"   2. Test case: `add n/Betsy Crowe e/betsycrowe@example.com a/Ang Mo Kio Street 22 p/87654321 r/senior consulting analyst` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"       Expected: A person with name \"Betsy Crowe\", email \"betsycrowe@example.com\", address \"Ang Mo Kio Street 22\", phone number \"87654321\", applying for the \"senior consulting analyst\" role is added to the bottom of the existing list. Added person is given an index that follows immediately after the last assigned index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"   3. Test case: `add n/John Doe a/Bishan Street 20 p/98765432 r/senior consulting intern` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"      Expected: No person is added. Error details shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"   4. Test case: `add n/John Doe e/john@gmail.com a/Bishan Street 20 p/98765432 r/senior consulting intern t/applicant` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"      Expected: No person is added. Error details shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"   5. Test case: `add n/John Doe e/john@gmail.com a/Bishan Street 20 p/98765432 r/senior consulting intern i/Likes to talk` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"      Expected: No person is added. Error details shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"   6. Test case: `add n/小丽 e/john@gmail.com a/Bishan Street 20 p/98765432 r/senior consulting intern` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"      Expected: No person is added. Error details shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Listing persons","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. Listing all the persons in HireHive","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"   1. Prerequisites: List is not empty","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"   2. Test case: `list` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Expected: All the persons in the list are listed. Topmost person in the list is the oldest person who was added to the list, while the bottom-most person was the person who was most recently added to the list. Index of persons should start from 1 and increase from top to bottom of the list. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"   3. Test case: `list help` \u003cbr\u003e ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"       Expected: All the persons in the list are listed. Topmost person in the list is the oldest person who was added to the list, while the bottom-most person was the person who was most recently added to the list. Index of persons should start from 1 and increase from top to bottom of the list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Sorting persons","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. Sorting all the persons shown in the list. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Prerequisites: Multiple persons in the list, with some persons having interview dates","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"   2. Test case: `sort` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"      Expected: All the persons in the list are sorted.Those with interview dates are sorted in chronological order, while those without interview dates are pushed to the back of the list, in the original order they were in previously. New index given based on the newly sorted order of the list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"   3. Test case: `list help` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"      Expected: All the persons in the list are sorted.Those with interview dates are sorted in chronological order, while those without interview dates are pushed to the back of the list, in the original order they were in previously. New index given based on the newly sorted order of the list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. Deleting a person by index","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"1. Deleting a person by name","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using `list` command. Multiple persons in the list ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"   2. Test case: `delete n/Alice` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"      Expected: Contact with the name \"Alice\" is deleted from the list. Details of the deleted contact shown in status message. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"   3. Test case: `delete n/john doe` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"      Expected: Contact with the name \"John Doe\" is deleted from the list. Details of the deleted contact shown in status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"   4. Test case: `delete n/nonexistent name` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"      Expected: Error message is shown, stating that no such contact exists in the list","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"   5. Test case: `delete john` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"      Expected: Error message for invalid command format is displayed in status message with example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"### Tagging a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"1. Tagging a person by name, with tag","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"   1. Prerequisites: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"   2. Test case: `tag n/alice t/candidate` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Alice Yeoh\" is tagged as \"Candidate\". Details of the tagged contact shown in the ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"      status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"   3. Test case: `tag n/alice t/CANDIDATE` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Alice Yeoh\" is tagged as \"Candidate\". Details of the tagged contact shown in the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"      status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"   4. Test case: `tag n/alice t/cAnDiDaTe` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Alice Yeoh\" is tagged as \"Candidate\". Details of the tagged contact shown in the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"      status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"-"},"content":"   5. Test case: `tag n/ALICE t/candidate` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Alice Yeoh\" is tagged as \"Candidate\". Details of the tagged contact shown in the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"      status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"   6. Test case: `tag n/aLiCe t/CANDIDATE` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Alice Yeoh\" is tagged as \"Candidate\". Details of the tagged contact shown in the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"      status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"   7. Test case: `tag n/alice t/test` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"      Expected: Error message for invalid command format shown in status message with command format and example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"2. Tagging a person by index, with tag","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"   1. Prerequisites: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"   2. Test case: `tag 1 t/interviewee` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"      Expected: First contact is tagged as \"Interviewee\". Details of the tagged contact shown in the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"      status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"   3. Test case: `tag 1 t/INTERVIEWEE` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"      Expected: First contact is tagged as \"Interviewee\". Details of the tagged contact shown in the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"      status message. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"   4. Test case: `tag 1 t/iNtErViEwEe` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"      Expected: First contact is tagged as \"Interviewee\". Details of the tagged contact shown in the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"      status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"   5. Test case: `tag 1 t/test` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"      Expected: Error message for invalid command format shown in status message with command format and example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"3. Tagging a person by name, with offset","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Prerequisites: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"   2. Test case: `tag +1 n/bernice` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Bernice Yu\" is tagged as \"Offered\". Details of the tagged contact shown ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"      in the status message (if tag was \"Interviewee\"). ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"   3. Test case `tag -2 n/charlotte` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Charlotte Oliveiro\" is tagged as \"Rejected\". Details of the tagged contact shown","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"      in the status message (if tag was \"Candidate\"). ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"### Show persons with upcoming interviews","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"1. Show persons with upcoming interviews","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"   1. Prerequisites: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"   2. Test case: `remind 100` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"      Expected: Only the contact with name \"David Li\" and interview date \"06/07/2025\" is shown in the list. Success ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"      message shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"   3. Test case: `remind -1` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"      Expected: Error message for invalid command format shown in status message with command format and example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"### Scheduling interview date","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"1. Scheduling an interview date for a person by name","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"   1. Prerequisites: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"-"},"content":"   2. Test case: `schedule n/alice d/04/05/2025` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"      Expected: Contact with name \"Alice Yeoh\" has interview date scheduled as \"04/05/2025\". Details of the scheduled ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"      contact shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"-"},"content":"   3. Test case: `schedule n/alice d/test` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"-"},"content":"      Expected: Error message for invalid command format shown in status message with command format and example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"-"},"content":"2. Scheduling an interview date for a person by index","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"   1. Prerequisites: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"   2. Test case: `schedule 1 d/04/05/2025` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"      Expected: First contact has interview date scheduled as \"04/05/2025\". Details of the scheduled","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"      contact shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"   3. Test case: `schedule 1 d/test` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"      Expected: Expected: Error message for invalid command format shown in status message with command format and example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"3. Automatically scheduling the next interview date","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"   1. Prerequisites: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"-"},"content":"   2. Test case: `schedule 1`\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"-"},"content":"      Expected: First contact will be updated to tomorrow\u0027s date.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"   3. Test case: `schedule n/alice` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"-"},"content":"      Expected: Alice\u0027s contact will be updated to tomorrow\u0027s date","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"-"},"content":"### Filtering out applicants with tag","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"1. Filtering out all applicants with specified tag, and the remaining list contains applicants without that tag","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"   1. Prerequisities: Use the same persons list as when you first ran HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"   2. Test case: `filterout t/interviewee` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"      Expected: All contacts without the interviewee tag will be displayed on the list","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"   3. Test case: `filterout t/Applicant` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"      Expected: All contacts without the Applicant tag will be displayed on the list","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"   4. Test case: `filterout t/testing` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"-"},"content":"      Expected: Error message for invalid command format shown in status message with command format and example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"-"},"content":"   5. Test case `filterout candidate` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"-"},"content":"      Expected: Error message for invalid command format shown in status message with command format and example.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"### Clearing all entries","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"1. Clearing all entries in HireHive","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"    1. Prerequisites: List contains people.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"    2. Test case: `clear` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"       Expected: All the persons in the list are cleared. List is now empty.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"    3. Test case: `Clear` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"       Expected: Nothing is cleared. Error details shown in the status message.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"### Exiting the program ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"1. Exiting the program","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"   1. Prerequisites: Program was originally running.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"   2. Test case: `exit` \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"      Expected: Program exits and closes. ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"### Adding note of a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"Prerequisite: use the initial persons list loaded when first running HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"1. Test case: `newnote n/Bernice Yu i/20 years old` \u003cbr\u003e Expected output: \"Added and displaying note of: Bernice Yu; Phone: 99272758; Email: berniceyu@example.com; Address: Blk 30 Lorong 3 Serangoon Gardens, #07-18; Role: HR manager; Date: 01/03/2025; Tag: INTERVIEWEE \u003cbr\u003e Success: Applicant data has been saved.\" Additionally, popup window shows \"20 years old\" in white font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"2. Test case: `newnote n/BeRnIcE i/19 years old` \u003cbr\u003e Expected output: same as test case 1, but popup window shows \"19 years old\" in white font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"3. Test case: `newnote n/  Bernice  i/18 years old` \u003cbr\u003e Expected output: same as test case 1, but popup window shows \"18 years old\" in white font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"4. Test case: `newnote n/Yu i/` \u003cbr\u003e Expected output: same as test case 1, but popup window shows \"Currently empty...\" in yellow font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"5. Test case: `newnote n/bErNiCe yU i/Currently empty...` \u003cbr\u003e Expected output: same as test case 1, but popup window shows \"Currently empty...\" in white font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"### Displaying note of a person","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"Prerequisite: use the initial persons list loaded when first running HireHive.jar","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"1. Test case: `displaynote n/Alice Yeoh` \u003cbr\u003e Expected output: \"Displaying note of: Alice Yeoh; Phone: 87438807; Email: alexyeoh@example.com; Address: Blk 30 Geylang Street 29, #06-40; Role: UI designer; Date: ; Tag: APPLICANT\" Additionally, popup window shows \"20 years old\" in white font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"2. Test case: `displaynote n/BeRnIcE yU` \u003cbr\u003e Expected output: \"Displaying note of: Bernice Yu; Phone: 99272758; Email: berniceyu@example.com; Address: Blk 30 Lorong 3 Serangoon Gardens, #07-18; Role: HR manager; Date: 01/03/2025; Tag: INTERVIEWEE\" Additionally, popup window shows \"Currently empty...\" in yellow font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"3. Test case: `displaynote n/Irfan` \u003cbr\u003e Expected output: \"Displaying note of: Irfan Ibrahim; Phone: 92492021; Email: irfan@example.com; Address: Blk 47 Tampines Street 20, #17-35; Role: Software Engineer; Date: 06/03/2025; Tag: REJECTED\" Additionally, popup window shows \"30 years old\" in white font.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"-"},"content":"4. Test case: `newnote n/raHIM i/` \u003cbr\u003e Expected output: same as test case 3.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"-"},"content":"### Loading data","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"-"},"content":"1. Sample data is loaded","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"-"},"content":"   1. Test case: On first launch of `HireHive.jar`, this should automatically load the sample data. \u003cbr\u003e Expected output: \"Success: Sample applicant data has been loaded successfully.\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"-"},"content":"   2. Test case: Delete `addressbook.json` under folder `data` if it exists, then launch `HireHive.jar`. \u003cbr\u003e Expected output: same as test case i.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"-"},"content":"2. Saved data is loaded","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"-"},"content":"   1. Test case: perform a command that modifies data e.g. `delete 1`, then `exit` the application. Relaunch `HireHive.jar`. \u003cbr\u003e Expected output: \"Success: Applicant data has been loaded successfully.\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"-"},"content":"3. No data is loaded due to corruption of data","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"-"},"content":"   1. Prerequisite: Launch `HireHive.jar` at least once and exit.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"-"},"content":"   2. Test case: Delete `addressbook.json` under folder `data` if it exists, then copy `config.json` into the same folder. Rename `config.json` to `addressbook.json`. \u003cbr\u003e Expected output: \"Error: Unable to load applicant data. Invalid data format in saved file.\"","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"deannapoh":99,"-":612}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Welcome to HireHive!","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Tired of drowning in resumes and losing track of candidates? Meet HireHive— your **personal, all-in-one** hiring assistant designed to simplify the hiring process so you can focus on what matters most - finding the best talent.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"We combine the speed of keyboard commands with an intuitive visual interface to help you:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"- Find top talent faster with **lightning-fast** keyboard shortcuts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"- Stay effortlessly organized with all **[applicant](#glossary) details in one place**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"- Make better hiring decisions with **structured interview notes**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Ready to revolutionise your hiring? Let\u0027s begin!","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"- [Features](#features)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  - [View help: `help`](#view-help-help)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  - [Add an applicant: `add`](#add-an-applicant-add)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  - [Edit an applicant: `edit`](#edit-an-applicant-edit)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  - [Tag an applicant: `tag`](#tag-an-applicant-tag)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  - [Filter applicants by tag: `filter`](#filter-applicants-by-tag-filter)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  - [Filtering out applicants with tag: `filterout`](#filtering-out-applicants-with-tag-filterout)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"  - [Add note to applicant: `newnote`](#add-notes-to-person-newnote)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"  - [Display note of applicant: `displaynote`](#display-note-of-person-displaynote)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"  - [Schedule interview dates: `schedule`](#schedule-interview-dates-for-applicants--schedule)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"deannapoh"},"content":"  - [Remind you of upcoming interviews: `remind`](#show-applicants-with-upcoming-interviews-remind)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  - [Find applicants by name `find`](#find-applicants-by-name-find)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  - [List all applicants: `list`](#list-all-applicants-list)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  - [Sort applicants `sort`](#sort-applicants-sort)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  - [Delete an applicant: `delete`](#delete-an-applicant-delete)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"  - [Clear all entries: `clear`](#clear-all-entries--clear)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"  - [Exit the program: `exit`](#exit-the-program--exit)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"  - [Save the data](#save-the-data)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"  - [Edit the data file](#edit-the-data-file)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"- [FAQ](#faq)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"- [Known Issues](#known-issues)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. To use Hirehive, you need Java `17` or above installed in your computer.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"   - For **Mac users:** Ensure you have the precise version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"2. Download the latest HireHive `.jar` file from [here](https://github.com/AY2425S2-CS2103T-F13-3/tp/releases).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"3. Copy the downloaded file to a folder where you would like to store HireHive (e.g. \"Documents\" or \"Desktop\" or a new folder \"HireHive\") .","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"4. Run HireHive","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"   - Find the folder that you stored HireHive previously (e.g. \"Documents\" or \"Desktop\" or \"HireHive\").","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"   - Right-click on the folder and choose:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"     - For **Mac users**: \"New terminal at Folder\".","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     - For **Windows users**: \"Open in terminal\".","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"   - Type `java -jar hirehive.jar` command in the opened terminal and press Enter to run the HireHive application.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"   - A [GUI](#glossary) similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui-2.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"5. To use HireHive, you can type a command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"   * `list` : Lists all applicants.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 r/intern`: Adds an applicant named `John Doe` to HireHive, with his relevant information","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"   * `edit 3 n/Josef` : Edits the name of the 3rd applicant in the list to Josef","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"   * `find John Doe`: Searches for John Doe in the current list.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"   * `tag n/John Doe t/interviewee` : Tags John Doe with the \u0027interviewee\u0027 tag","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"   * `delete n/John Doe` : Deletes the applicant `John Doe` from the current list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"  * `exit` : Exits the app.","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"6. You can refer to the [Features](#features) section below for details of each command.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"| Action                                                             | Format, Examples                                                                                                                                                         |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"deannapoh"},"content":"|--------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"deannapoh"},"content":"| **[Help](#view-help-help)**                                        | `help`                                                                                                                                                                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"deannapoh"},"content":"| **[Add](#add-an-applicant-add)**                                   | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS r/ROLE` \u003cbr\u003e e.g., `add n/James Ho p/87654321 e/jamesho@example.com a/123, Clementi Rd, 1234665 r/software engineer intern` |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"deannapoh"},"content":"| **[Edit](#edit-an-applicant-edit)**                                | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG] [i/NOTE] [d/DATE]`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                              |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"deannapoh"},"content":"| **[Tag](#tag-an-applicant-tag)**                                   | `tag n/NAME [t/TAG]...​`                                                                                                                                                 |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"deannapoh"},"content":"| **[Filter](#filter-applicants-by-tag-filter)**                     | `filter t/TAG` \u003cbr\u003e e.g., `filter t/Applicant`                                                                                                                           |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"deannapoh"},"content":" **[Filter out](#filtering-out-applicants-with-tag-filterout)**     | `filterout t/TAG` \u003cbr\u003e e.g., `filterout t/Applicant`                                                                                                                     |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"deannapoh"},"content":"| **[NewNote](#add-notes-to-person-newnote)**                        | `newnote n/NAME i/NOTE` \u003cbr\u003e e.g., `newnote n/John Doe i/25 years old`                                                                                                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"deannapoh"},"content":"| **[DisplayNote](#display-note-of-person-displaynote)**             | `displaynote n/NAME` \u003cbr\u003e e.g., `displaynote n/John Doe`                                                                                                                 ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"deannapoh"},"content":"| **[Schedule](#schedule-interview-dates-for-applicants--schedule)** | 1. `schedule n/NAME [d/DATE]` \u003cbr\u003e e.g. schedule n/John Doe d/17/04/2025 \u003cbr\u003e 2. `schedule INDEX [d/DATE]` \u003cbr\u003e e.g. schedule 2 d/17/04/2025 \u003cbr\u003e                        |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"deannapoh"},"content":"| **[Reminder](#show-applicants-with-upcoming-interviews-remind)**   | `remind DAYS`  \u003cbr\u003e e.g. remind 3                                                                                                                                        |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"deannapoh"},"content":"| **[Find](#find-applicants-by-name-find)**                          | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                               |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"deannapoh"},"content":"| **[List](#list-all-applicants-list)**                              | `list`                                                                                                                                                                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"deannapoh"},"content":" **[Sort](#sort-applicants-sort)**                                  | `sort`                                                                                                                                                                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"deannapoh"},"content":"| **[Delete](#delete-an-applicant-delete)**                          | `delete n/NAME`\u003cbr\u003e e.g., `delete n/John Doe`                                                                                                                            |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"deannapoh"},"content":"| **[Clear](#clear-all-entries--clear)**                             | `clear`                                                                                                                                                                  |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"deannapoh"},"content":"| **[Exit](#exit-the-program--exit)**                                | `exit`                                                                                                                                                                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the  parameters to be supplied by you.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"deannapoh"},"content":"  e.g `n/NAME [i/NOTE]` can be used as `n/John Doe i/27 years old` or as `n/John Doe`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/interviewee`, `t/shortlisted` etc.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit`, `list` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"### View help: `help`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"Shows a message explaining how you can access the help page that can assist you in understanding the different features of HireHive and how they work.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Add an applicant: `add`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"deannapoh"},"content":"You can add a new applicant to HireHive when someone new applies to your company!","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS r/ROLE`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"deannapoh"},"content":"* NAME: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"deannapoh"},"content":"  - Names should only contain **English letters**, **spaces**, and the following symbols: **, ( ) / . @ - \u0027**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"deannapoh"},"content":"    - Example: `Ali s/o Mohammed`, `Rachel-Natalie`, `Si Min, Rachel O\u0027 Connor` are allowed names. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"deannapoh"},"content":"  - Names **should not be blank or start with a symbol**. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"deannapoh"},"content":"    - Example: `@Natalie` is not allowed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"deannapoh"},"content":"  - Please **do not use numbers** in names.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"deannapoh"},"content":"    - Example: `R4chel` is not allowed","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"deannapoh"},"content":"  - Names are **[case-insensitive](#glossary)**, and is displayed as how you type it.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"deannapoh"},"content":"* PHONE_NUMBER: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"deannapoh"},"content":"  - Please input a phone number that **start with 9/8/6** and is **exactly 8 digits** long.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"deannapoh"},"content":"  - Please **do not use spaces** ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"deannapoh"},"content":"  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"deannapoh"},"content":"* EMAIL:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"deannapoh"},"content":"  - Emails should be of the format **local-part@domain** and adhere to the following constraints:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"deannapoh"},"content":"    1. local-part: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"deannapoh"},"content":"       - The local-part should only contain **[alphanumeric](#glossary) characters** and the special characters: **+_.-**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"deannapoh"},"content":"       - The local-part **should not start or end with any special characters**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"deannapoh"},"content":"    2. domain:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"deannapoh"},"content":"       - The domain name is made up of domain labels that may or may not be separated by periods. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"deannapoh"},"content":"       - The domain name must:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"deannapoh"},"content":"           - end with a domain label **at least 2 characters** long, and","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"deannapoh"},"content":"           - have each domain label **start and end with [alphanumeric](#glossary) characters**, and","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"deannapoh"},"content":"           - have each domain label consist of [alphanumeric](#glossary) characters, separated only by hyphens, if any.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"deannapoh"},"content":"* ADDRESS: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"deannapoh"},"content":"  - Addresses can take any values, and it should not be blank","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"deannapoh"},"content":"* ROLE: ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"deannapoh"},"content":"  - Roles should only **contain [alphanumeric](#glossary) characters and spaces**, and it should not be blank. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"**:information_source: Note!**\u003cbr\u003e ","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"deannapoh"},"content":"- Every applicant in HireHive should **contain **[unique](#glossary)** phone numbers**!","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"deannapoh"},"content":"  - i.e. HireHive ensures that there are no applicants in HireHive that have the same phone number!","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"deannapoh"},"content":"  - More specifically, applicants can share the same name, email, address and role, but **not phone numbers**!","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"deannapoh"},"content":"    - Example: `add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 r/Software Engineer` and ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"deannapoh"},"content":"      `add n/John Doe p/88888888 e/johnd@example.com a/311, Clementi Ave 2, #02-25 r/Software Engineer` are treated as 2 different applicants and both applicants can be added!","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"There is no need to manually add a tag as the \u0027Applicant\u0027 tag is automatically assigned when you add a new applicant to HireHive.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Ang Mo Kio Street 22 p/87654321 r/senior consulting analyst`: Adds an applicant with the name `Betsy Crowe`, who has `betsycrowe@example.com` as their email, `87654321` as their phone number, and is applying for the `senior consulting analyst` role.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"![help message](images/Ui-AddCommand.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Edit an applicant: `edit`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"If you have accidentally mistyped some details, you can edit the information of an existing applicant in HireHive!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG] [r/ROLE] [i/NOTE] [d/DATE]`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"* The provided values will replace the existing information in the respective fields.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"### Tag an applicant: `tag`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"You can change the tag to a specific person from HireHive to easily differentiate between all your applicants!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"Format:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"Command | Description","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"`tag n/NAME t/TAG` | Tags by name.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"`tag INDEX t/TAG` | Tags by index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"`tag OFFSET n/NAME` | Offset tag of named person.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"* Tagging by name will partially match to **exactly one person** in the list ([case-insensitive](#glossary)).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * If multiple matches are found, a list of all matching names will be displayed. You can then enter the **full name**","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"    of the person you want to delete.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"* Tagging by index must have a **positive** index number","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"* Tags must be one of the following values:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"  1. Rejected","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"  2. Applicant","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"  3. Candidate","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"  4. Interviewee","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"  5. Offered","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"* The tag written in the command must match one of the values above ([case-insensitive](#glossary)) e.g. `t/applicant`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"* To tag with offset, the offset takes in `+` or `-`, followed by a number for the offset amount, e.g. `+1`, `-2`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * The tag, which represents the hiring stage the specific person is at, will progress/regress the hiring stage by","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"    the offset amount","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"  * The order for the hiring stages is Rejected \u003e Applicant \u003e Candidate \u003e Interviewee \u003e Offered","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  * The tag will not regress pass Rejected and progress pass Offered","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"* `tag n/John Doe t/Applicant` will tag John Doe as \"Applicant\" in HireHive","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"* `tag 1 t/Candidate` will tag the 1st person as \"Candidate\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"* `tag +1 n/John Doe` for a John Doe person with tag \"Applicant\" will tag them as \"Candidate\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Filter applicants by tag: `filter`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"Lists down all your entries of a given tag.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"Format: `filter t/TAG`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"* The search is [case-insensitive](#glossary). e.g `applicant` will match `Applicant`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Reject` will not match `Rejected`","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Filtering out applicants with tag: `filterout`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"You can view all your applicants in a list **except** for those with the specified tag, for easier tracking of applicants!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"Format: `filterout t/TAG`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"*The search is [case-insensitive](#glossary). e.g `applicant` will match `Applicant`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"* `filterout t/offered` will filter out all applicants that were already offered the job, the remaining list will display applicants without the \"Offered\" tag.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"### Add notes to person: `newnote`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"You can add information about the applicant into a note with this command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"Format: `newnote n/NAME i/NOTE`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"* Adds the note if the given name partially matches **exactly one** person in the list ([case-insensitive](#glossary))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"* If multiple matches are found, a list of all matching names will be displayed. You should then retry the command but using the **full name** of the desired person.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"* NOTE has a limit of 500 characters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"* After adding, a popup window will appear containing the given input.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"* If the input is empty or consists only of whitespace, then the popup window displays a default message \"Currently empty...\" in yellow.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"You can remove the contents of the note by leaving the NOTE field blank.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"* `newnote n/John Doe i/25 years old` adds a note to John Doe that says \"25 years old\"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"* `newnote n/John Doe i/` removes any existing content in John Doe\u0027s note","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"### Display note of person: `displaynote`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"You can display the note of a person with this command.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"Format: `displaynote n/NAME`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"* Displays the note if the given name partially matches **exactly one** person in the list ([case-insensitive](#glossary))","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"* If multiple matches are found, a list of all matching names will be displayed. You should then retry the command but using the **full name** of the desired person.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"* A popup window will appear containing the person\u0027s note.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"* If the input is empty or consists only of whitespace, then the popup window displays a default message \"Currently empty...\" in yellow.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"* `displaynote n/John Doe` shows John Doe\u0027s note","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Schedule interview dates for applicants : `schedule`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"Automatically or manually schedule your next interview with a potential candidate.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"Format:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"Command | Description","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"`schedule n/NAME [d/DATE]` | Schedule interview date by name.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"`schedule INDEX [d/DATE]` | Schedule interview date by index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"* The date format is DD/MM/YYYY (date/month/year) e.g. \"04/04/2025\"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"* If date is left empty, the next day that does not have an interview after the current day will be used to schedule the meeting instead.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"* Scheduling interview date by index must have a **positive** index number","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"deannapoh"},"content":"### Show applicants with upcoming interviews: `remind`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"deannapoh"},"content":"Easily remind yourself of your upcoming interviews by listing down all applicants with interviews in the given days\u0027 time.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"deannapoh"},"content":"Format: `remind DAYS`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"deannapoh"},"content":"* The number of days given must be non-negative, i.e. greater or equal to 0","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"deannapoh"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"### Find applicants by name: `find`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"You can search for persons whose names contain any of the given keywords!","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"* The search is [case-insensitive](#glossary). e.g `hans` will match `Hans`","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"### List all applicants: `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"Shows you a list of all the applicants in HireHive so that you can look at an overview of all the applicants if needed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Sort applicants: `sort`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"Sorts the applicants displayed on your screen by interview date, in chronological order so that you can conveniently view upcoming interviews.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"Format: `sort`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Delete an applicant: `delete`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"You can delete a specific person from HireHive if their contact is no longer required.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"Format: ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"Command | Description","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"`delete n/NAME` | Delete by name.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"`delete INDEX` | Delete by index.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"* Deleting by name will partially match to **exactly one person** in the list ([case-insensitive](#glossary)). ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"  - If multiple matches are found, a list of all matching names will be displayed. You can then enter the **full name** of the person you want to delete.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"* Deleting by index must have a **positive** index number","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"* `delete n/John Doe` deletes John Doe\u0027s contact from HireHive","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"* `delete 2` deletes the second applicant in the list from HireHive","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"![delete message](images/Ui-DeleteCommand.png)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"### Clear all entries : `clear`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"Clears all entries from HireHive.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"**:information_source: Note!**\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"This action is **irreversible**! Please use this command with caution!","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"deannapoh"},"content":"**:information_source: Note!**\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"deannapoh"},"content":"If you `clear` the data in HireHive and exit the app immediately, when you re-run HireHive, you might initially see an error message on your screen. But not to worry! You may ignore this message and continue using HireHive as per normal.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Exit the program : `exit`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"You can use this command to exit the program once you are done using it.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Save the data","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"HireHive data is saved in the [hard disk](#glossary) automatically after any command that changes the data. If successfully saved, the output following the command will display the success message. There is no need to save manually.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Edit the data file","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"HireHive data are saved automatically as a [JSON](#glossary) file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, HireHive will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause HireHive to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous HireHive home folder.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the [GUI](#glossary) will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"2. If you **minimize the Help Window and then run the `help` command** (or use the `Help` menu, or the keyboard [shortcut](#glossary) `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"## Glossary","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"Term | Description","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"**Graphical User Interface (GUI)** | A form of user interface that allows users to interact with electronic devices through graphical icons and visual indicators such as secondary notation.","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"**Applicant** | A person who makes a formal application for something, especially a job.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"**Unique** | Only 1 specific instance of it exists.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"**Case-insensitive** | Uppercase and lowercase letters are treated the same and hence equivalent.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"deannapoh"},"content":"**Alphanumeric** | consisting of both letters (A to Z) and numbers (0 to 9).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"**Hard disk** | The storage device used by a computer. These can be used as primary or secondary storage.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"**JSON** | Acronym for _JavaScript Object Notation,_ an open standard file format and data interchange format that uses human-readable text to store and transmit data objects consisting of name–value pairs and arrays (or other serializable values).","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"**Shortcut** | A key or combination of keys that you can press on a computer keyboard to quickly perform a specific action.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"[Back to top](#welcome-to-hirehive)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-03-31","isFullCredit":false}],"authorContributionMap":{"deannapoh":72,"-":407}},{"path":"src/main/java/hirehive/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.commons.util;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return sentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a 0 or positive integer","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static boolean isPositiveInteger(String s) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ditzchann"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ditzchann"},"content":"     * Returns true if {@code s} represents a string or a valid integer","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ditzchann"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ditzchann"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ditzchann"},"content":"    public static boolean isValidStringOrInteger(String s) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ditzchann"},"content":"        requireNonNull(s);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ditzchann"},"content":"        if (s.matches(\"-?\\\\d+\")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ditzchann"},"content":"            try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ditzchann"},"content":"                long num \u003d Long.parseLong(s);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Ditzchann"},"content":"                return num \u003e\u003d Integer.MIN_VALUE \u0026\u0026 num \u003c\u003d Integer.MAX_VALUE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Ditzchann"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Ditzchann"},"content":"                return false;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Ditzchann"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ditzchann"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Ditzchann"},"content":"            return true;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Ditzchann"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Ditzchann"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"-":81,"Ditzchann":18}},{"path":"src/main/java/hirehive/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.commons.core.index.Index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.EditCommand;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ROLE, PREFIX_TAG,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        PREFIX_NOTE, PREFIX_DATE);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ditzchann"},"content":"        if (argMultimap.getPreamble().trim().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ditzchann"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                PREFIX_TAG, PREFIX_NOTE,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                PREFIX_DATE);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setTag(ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"-":83,"Ditzchann":3}},{"path":"src/main/java/hirehive/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.commons.core.index.Index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.commons.util.StringUtil;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.InterviewDate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Note;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Role;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ditzchann"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Input is not a non-zero unsigned integer.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ditzchann"},"content":"    public static final String MESSAGE_INVALID_DAYS \u003d \"Input is not a positive integer.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ditzchann"},"content":"    public static final String MESSAGE_OUT_OF_RANGE \u003d \"Number is out of integer range!\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ditzchann"},"content":"            + \"(must be within -2^31 to 2^31 inclusive)\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ditzchann"},"content":"        if (!StringUtil.isValidStringOrInteger(trimmedIndex)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ditzchann"},"content":"        } else if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses {@code days} into an {@code int} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified days are invalid (not positive integer)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static int parseDays(String days) throws ParseException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedDays \u003d days.trim();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ditzchann"},"content":"        if (!StringUtil.isValidStringOrInteger(trimmedDays)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ditzchann"},"content":"        } else if (!StringUtil.isPositiveInteger(trimmedDays)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_DAYS);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Integer.parseInt(trimmedDays);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String role} into an {@code Role}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(role);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String adjustedTag \u003d tag.trim().toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        switch (adjustedTag) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        case \"applicant\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return Tag.APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        case \"candidate\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return Tag.CANDIDATE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        case \"interviewee\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return Tag.INTERVIEWEE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        case \"offered\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return Tag.OFFERED;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        case \"rejected\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return Tag.REJECTED;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Parses a {@code String note} into a {@code Note}.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        requireNonNull(note);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Parses a {@code String date} into a {@code InterviewDate}.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public static InterviewDate parseDate(String date) throws ParseException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (!InterviewDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new ParseException(InterviewDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new InterviewDate(trimmedDate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"-":192,"Ditzchann":10}},{"path":"src/main/java/hirehive/address/logic/parser/ReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.EditCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.FilterCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.ReminderCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.UpcomingInterviewPredicate;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new ReminderCommand object","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderCommand","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a ReminderCommand object for execution.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public ReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        int days;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ditzchann"},"content":"        if (argMultimap.getPreamble().trim().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ditzchann"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            days \u003d ParserUtil.parseDays(argMultimap.getPreamble());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new ReminderCommand(new UpcomingInterviewPredicate(days));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"-":33,"Ditzchann":4}},{"path":"src/main/java/hirehive/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.model.person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import hirehive.address.commons.util.AppUtil;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"deannapoh"},"content":"            + \"that may be separated by periods, if any.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"deannapoh":1,"-":80}},{"path":"src/main/java/hirehive/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.model.person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import hirehive.address.commons.util.AppUtil;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"deannapoh"},"content":"            \"Names should only contain English letters, spaces, and the following symbols:\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"deannapoh"},"content":"                    + \" , ( ) / . @ - \u0027\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"deannapoh"},"content":"                    + \"Names should not be blank or start with a symbol.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"deannapoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z][A-Za-z ,()/.@\u0027-]*\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fullName.equalsIgnoreCase(otherName.fullName);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"deannapoh":4,"-":66}},{"path":"src/main/java/hirehive/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.model.person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import hirehive.address.commons.util.CollectionUtil;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Role role;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Tag tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Note note;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final InterviewDate date;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Role role, Tag tag, Note note,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                  InterviewDate date) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        CollectionUtil.requireAllNonNull(name, phone, email, address, role, tag, note);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.role \u003d role;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.note \u003d note;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Method used to construct a default Person object without a note.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Person createDefaultPerson(Name name, Phone phone, Email email, Address address, Role role) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, role, Tag.getDefaultTag(), new Note(Note.DEFAULT_NOTE),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new InterviewDate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-25","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Method used to construct a default Person object with a note.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Person addDefaultPersonWithNote(Name name, Phone phone, Email email, Address address, Role role,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"                                                  Note note) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, role, Tag.getDefaultTag(), note,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new InterviewDate());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Role getRole() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return role;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Note getNote() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return note;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public InterviewDate getDate() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return date;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Tag getTag() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name, regardless of whether it is in upper/lower case.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"deannapoh"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 role.equals(otherPerson.role)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 tag.equals(otherPerson.tag)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 note.equals(otherPerson.note)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 date.equals(otherPerson.date);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, role, tag, note, date);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"role\", role)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .add(\"tag\", tag)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .add(\"note\", note)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"                .add(\"interviewDate\", date)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"deannapoh":1,"-":157}},{"path":"src/test/java/hirehive/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.commons.util;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.Assert;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void isPositiveInteger() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"\")); // Boundary value","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"  \"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"a\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"aaa\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isPositiveInteger(\"01\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"-1\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"+1\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isPositiveInteger(\"0\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isPositiveInteger(\"10\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ditzchann"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ditzchann"},"content":"    public void isValidStringOrInteger() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ditzchann"},"content":"        assertTrue(StringUtil.isValidStringOrInteger(\"aaaaa\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ditzchann"},"content":"        assertTrue(StringUtil.isValidStringOrInteger(\"2147483647\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ditzchann"},"content":"        assertFalse(StringUtil.isValidStringOrInteger(\"2147483648\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ditzchann"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"-":168,"Ditzchann":7}},{"path":"src/test/java/hirehive/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import hirehive.address.commons.core.index.Index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ditzchann"},"content":"import hirehive.address.commons.util.StringUtil;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.logic.Messages;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.EditCommand;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.InterviewDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.TypicalIndexes;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"-5\" + CommandTestUtil.NAME_DESC_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"0\" + CommandTestUtil.NAME_DESC_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 some random string\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 z/ string\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ditzchann"},"content":"        // out of range integer","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"100000000000000000000000000000 n/Alice\", ParserUtil.MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_DATE_DESC, InterviewDate.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \"1\" + CommandTestUtil.TAG_DESC_APPLICANT + CommandTestUtil.TAG_DESC_CANDIDATE + TAG_EMPTY,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \"1\" + CommandTestUtil.TAG_DESC_APPLICANT + TAG_EMPTY + CommandTestUtil.TAG_DESC_CANDIDATE,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \"1\" + TAG_EMPTY + CommandTestUtil.TAG_DESC_APPLICANT + CommandTestUtil.TAG_DESC_CANDIDATE,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.INVALID_EMAIL_DESC + CommandTestUtil.VALID_ADDRESS_AMY + CommandTestUtil.VALID_PHONE_AMY,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.TAG_DESC_APPLICANT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).withEmail(CommandTestUtil.VALID_EMAIL_AMY).withAddress(CommandTestUtil.VALID_ADDRESS_AMY)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTag(CommandTestUtil.VALID_TAG_APPLICANT).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(CommandTestUtil.VALID_ADDRESS_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTag(CommandTestUtil.VALID_TAG_APPLICANT).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // dates","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDate(CommandTestUtil.VALID_DATE_BOB).build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + CommandTestUtil.TAG_DESC_APPLICANT + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.TAG_DESC_APPLICANT","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.TAG_DESC_CANDIDATE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                        CliSyntax.PREFIX_ADDRESS, PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.INVALID_ADDRESS_DESC + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.INVALID_ADDRESS_DESC + CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_ADDRESS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":178,"Ditzchann":9}},{"path":"src/test/java/hirehive/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.InterviewDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.Assert;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.TypicalIndexes;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    private static final String INVALID_NAME \u003d \"R4chel\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"deannapoh"},"content":"    private static final String INVALID_NAME_2 \u003d \".Rachel\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_DATE \u003d \"01012004\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"deannapoh"},"content":"    private static final String VALID_NAME_2 \u003d \"R@c/hel, Wa()l-ker.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"91234467\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"Applicant\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"Candidate\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_DATE \u003d \"01/01/2004\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"deannapoh"},"content":"    public void parseName_number_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"deannapoh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"deannapoh"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"deannapoh"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME_2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"deannapoh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"deannapoh"},"content":"    public void parseName_validValueWithCommercialAt() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"deannapoh"},"content":"        Name expectedName \u003d new Name(VALID_NAME_2);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"deannapoh"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME_2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"deannapoh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d Tag.APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d Tag.APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // VALID_TAG_1 \u003d \"Applicant\", VALID_TAG_2 \u003d \"Candidate\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(Tag.APPLICANT, Tag.CANDIDATE));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        InterviewDate expectedDate \u003d new InterviewDate(VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String dateWithWhiteSpace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"        InterviewDate expectedDate \u003d new InterviewDate(VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhiteSpace));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22","isFullCredit":false}],"authorContributionMap":{"deannapoh":15,"-":219,"Ditzchann":2}},{"path":"src/test/java/hirehive/address/logic/parser/ReminderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import hirehive.address.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.FilterCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.ReminderCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.UpcomingInterviewPredicate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ReminderCommandParserTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private ReminderCommandParser parser \u003d new ReminderCommandParser();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"100000000000000000000000000000000\", ParserUtil.MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsReminderCommand() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ReminderCommand expectedReminderCommand \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new ReminderCommand(new UpcomingInterviewPredicate(10));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" 10\", expectedReminderCommand);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"-":26,"Ditzchann":1}},{"path":"src/test/java/hirehive/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.model.person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.Assert;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"deannapoh"},"content":"        assertFalse(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"deannapoh"},"content":"        assertFalse(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"deannapoh"},"content":"        assertFalse(Name.isValidName(\"/rachel.\")); // Symbol at the start","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr Second\")); // long names","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"Rachel O\u0027Connor\")); //apostrophe","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"R@chel\")); // commercial at","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"Rachel s/o Connor\")); // slash","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"Rachel (XinYing)\")); // brackets","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"Lee, Rachel\")); // comma","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"Rachel-Natalie\")); // hyphen","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"Lee. Rachel.\")); // full stop","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"deannapoh"},"content":"        assertTrue(Name.isValidName(\"R@c/hel, Wa()l-ker.\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"deannapoh":12,"-":59}},{"path":"src/test/java/hirehive/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.model.person;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"deannapoh"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.DEFAULT_TAG_APPLICANT;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"deannapoh"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"deannapoh"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"deannapoh"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_NOTE_AMY;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"deannapoh"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.commands.CommandTestUtil.VALID_TAG_CANDIDATE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static hirehive.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.Assert;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.PersonBuilder;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.TypicalPersons;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(TypicalPersons.ALICE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSamePerson(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"deannapoh"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"deannapoh"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"deannapoh"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"deannapoh"},"content":"                .withTag(VALID_TAG_CANDIDATE).withNote(VALID_NOTE_BOB).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"deannapoh"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"deannapoh"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"deannapoh"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TypicalPersons.BOB.isSamePerson(editedBob));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"deannapoh"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"deannapoh"},"content":"        Assertions.assertTrue(TypicalPersons.BOB.isSamePerson(editedBob));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"deannapoh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"deannapoh"},"content":"        //name same, only phone different, all other attributes same -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"deannapoh"},"content":"        Person editedAmy \u003d new PersonBuilder(TypicalPersons.AMY).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"deannapoh"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"deannapoh"},"content":"                .withTag(DEFAULT_TAG_APPLICANT).withNote(VALID_NOTE_AMY).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"deannapoh"},"content":"        Assertions.assertFalse(TypicalPersons.AMY.isSamePerson(editedAmy));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(TypicalPersons.ALICE).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.equals(aliceCopy));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.equals(TypicalPersons.ALICE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(5));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(TypicalPersons.BOB));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different Tag -\u003e returns false","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTag(VALID_TAG_CANDIDATE).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + TypicalPersons.ALICE.getName() + \", phone\u003d\" + TypicalPersons.ALICE.getPhone()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + TypicalPersons.ALICE.getEmail() + \", address\u003d\" + TypicalPersons.ALICE.getAddress() + \", role\u003d\" + TypicalPersons.ALICE.getRole()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + \", tag\u003d\" + TypicalPersons.ALICE.getTag() + \", note\u003d\" + TypicalPersons.ALICE.getNote() + \", \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + \"interviewDate\u003d\" + TypicalPersons.ALICE.getDate() + \"}\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expected, TypicalPersons.ALICE.toString());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"deannapoh":20,"-":98}},{"path":"src/test/java/hirehive/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.storage;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import hirehive.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.InterviewDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Note;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Role;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.Assert;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.TypicalPersons;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"deannapoh"},"content":"    private static final String INVALID_NAME \u003d \"R4chel\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ROLE \u003d \"@developer\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_NOTE \u003d \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \" commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes,\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \" nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \" consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \" justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium.\"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \" Integer tincidunt. Cras dapibus\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_DATE \u003d \"01012004\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d TypicalPersons.BENSON.getName().toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d TypicalPersons.BENSON.getPhone().toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d TypicalPersons.BENSON.getEmail().toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d TypicalPersons.BENSON.getAddress().toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ROLE \u003d TypicalPersons.BENSON.getRole().toString();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG \u003d TypicalPersons.BENSON.getTag().getTagName();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_NOTE \u003d TypicalPersons.BENSON.getNote().toString();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_DATE \u003d TypicalPersons.BENSON.getDate().toString();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TypicalPersons.BENSON);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG, VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG, VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_ROLE, VALID_TAG, VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_ROLE, VALID_TAG,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_ROLE, VALID_TAG, VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_ROLE, VALID_TAG,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null, VALID_TAG, VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String invalidTag \u003d \"test\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, invalidTag,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                        VALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void toModelType_invalidNote_throwsIllegalValueException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG, INVALID_NOTE, VALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Note.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void toModelType_nullNote_throwsIllegalValueException() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG, null, VALID_DATE);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        VALID_NOTE, INVALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d InterviewDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, VALID_TAG, VALID_NOTE, null);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, InterviewDate.class.getSimpleName());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"deannapoh":1,"-":177}}]
