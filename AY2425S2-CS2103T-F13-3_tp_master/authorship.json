[{"path":"src/main/java/hirehive/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.commons.util;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return sentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a 0 or positive integer","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * e.g. 0, 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static boolean isPositiveInteger(String s) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return value \u003e\u003d 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ditzchann"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ditzchann"},"content":"     * Returns true if {@code s} represents a string or a valid integer","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ditzchann"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ditzchann"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Ditzchann"},"content":"    public static boolean isValidStringOrInteger(String s) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Ditzchann"},"content":"        requireNonNull(s);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Ditzchann"},"content":"        if (s.matches(\"-?\\\\d+\")) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Ditzchann"},"content":"            try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Ditzchann"},"content":"                long num \u003d Long.parseLong(s);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Ditzchann"},"content":"                return num \u003e\u003d Integer.MIN_VALUE \u0026\u0026 num \u003c\u003d Integer.MAX_VALUE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Ditzchann"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Ditzchann"},"content":"                return false;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Ditzchann"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Ditzchann"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Ditzchann"},"content":"            return true;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Ditzchann"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Ditzchann"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"-":81,"Ditzchann":18}},{"path":"src/main/java/hirehive/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.commons.core.index.Index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.EditCommand;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ROLE, PREFIX_TAG,","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                        PREFIX_NOTE, PREFIX_DATE);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Ditzchann"},"content":"        if (argMultimap.getPreamble().trim().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Ditzchann"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                PREFIX_TAG, PREFIX_NOTE,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                PREFIX_DATE);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setTag(ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26","isFullCredit":false}],"authorContributionMap":{"-":83,"Ditzchann":3}},{"path":"src/main/java/hirehive/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.commons.core.index.Index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.commons.util.StringUtil;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.InterviewDate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Note;","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Role;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Ditzchann"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Input is not a non-zero unsigned integer.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Ditzchann"},"content":"    public static final String MESSAGE_INVALID_DAYS \u003d \"Input is not a positive integer.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Ditzchann"},"content":"    public static final String MESSAGE_OUT_OF_RANGE \u003d \"Number is out of integer range!\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ditzchann"},"content":"            + \"(must be within -2^31 to 2^31 inclusive)\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Ditzchann"},"content":"        if (!StringUtil.isValidStringOrInteger(trimmedIndex)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Ditzchann"},"content":"        } else if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses {@code days} into an {@code int} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified days are invalid (not positive integer)","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static int parseDays(String days) throws ParseException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedDays \u003d days.trim();","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Ditzchann"},"content":"        if (!StringUtil.isValidStringOrInteger(trimmedDays)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ditzchann"},"content":"        } else if (!StringUtil.isPositiveInteger(trimmedDays)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_DAYS);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Integer.parseInt(trimmedDays);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String role} into an {@code Role}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(role);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String adjustedTag \u003d tag.trim().toLowerCase();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        switch (adjustedTag) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        case \"applicant\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return Tag.APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        case \"candidate\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return Tag.CANDIDATE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        case \"interviewee\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return Tag.INTERVIEWEE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        case \"offered\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return Tag.OFFERED;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        case \"rejected\":","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return Tag.REJECTED;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Parses a {@code String note} into a {@code Note}.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        requireNonNull(note);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Parses a {@code String date} into a {@code InterviewDate}.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public static InterviewDate parseDate(String date) throws ParseException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (!InterviewDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new ParseException(InterviewDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new InterviewDate(trimmedDate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"-":192,"Ditzchann":10}},{"path":"src/main/java/hirehive/address/logic/parser/ReminderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.EditCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.FilterCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.ReminderCommand;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.UpcomingInterviewPredicate;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new ReminderCommand object","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ReminderCommandParser implements Parser\u003cReminderCommand\u003e {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the ReminderCommand","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a ReminderCommand object for execution.","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public ReminderCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        int days;","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Ditzchann"},"content":"        if (argMultimap.getPreamble().trim().isEmpty()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Ditzchann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Ditzchann"},"content":"        } else {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            days \u003d ParserUtil.parseDays(argMultimap.getPreamble());","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new ReminderCommand(new UpcomingInterviewPredicate(days));","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-28","isFullCredit":false}],"authorContributionMap":{"-":33,"Ditzchann":4}},{"path":"src/test/java/hirehive/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.commons.util;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.Assert;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void isPositiveInteger() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"\")); // Boundary value","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"  \"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"a\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"aaa\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isPositiveInteger(\"01\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"-1\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"+1\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isPositiveInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isPositiveInteger(\"0\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isPositiveInteger(\"10\"));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Ditzchann"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Ditzchann"},"content":"    public void isValidStringOrInteger() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Ditzchann"},"content":"        assertTrue(StringUtil.isValidStringOrInteger(\"aaaaa\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Ditzchann"},"content":"        assertTrue(StringUtil.isValidStringOrInteger(\"2147483647\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Ditzchann"},"content":"        assertFalse(StringUtil.isValidStringOrInteger(\"2147483648\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Ditzchann"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"-":168,"Ditzchann":7}},{"path":"src/test/java/hirehive/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static hirehive.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import hirehive.address.commons.core.index.Index;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Ditzchann"},"content":"import hirehive.address.commons.util.StringUtil;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.logic.Messages;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.EditCommand;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.InterviewDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.TypicalIndexes;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"-5\" + CommandTestUtil.NAME_DESC_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"0\" + CommandTestUtil.NAME_DESC_AMY, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 some random string\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1 z/ string\", ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Ditzchann"},"content":"        // out of range integer","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"100000000000000000000000000000 n/Alice\", ParserUtil.MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_DATE_DESC, InterviewDate.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \"1\" + CommandTestUtil.TAG_DESC_APPLICANT + CommandTestUtil.TAG_DESC_CANDIDATE + TAG_EMPTY,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \"1\" + CommandTestUtil.TAG_DESC_APPLICANT + TAG_EMPTY + CommandTestUtil.TAG_DESC_CANDIDATE,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \"1\" + TAG_EMPTY + CommandTestUtil.TAG_DESC_APPLICANT + CommandTestUtil.TAG_DESC_CANDIDATE,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.INVALID_EMAIL_DESC + CommandTestUtil.VALID_ADDRESS_AMY + CommandTestUtil.VALID_PHONE_AMY,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.TAG_DESC_APPLICANT;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).withEmail(CommandTestUtil.VALID_EMAIL_AMY).withAddress(CommandTestUtil.VALID_ADDRESS_AMY)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTag(CommandTestUtil.VALID_TAG_APPLICANT).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(CommandTestUtil.VALID_ADDRESS_AMY).build();","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTag(CommandTestUtil.VALID_TAG_APPLICANT).build();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // dates","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDate(CommandTestUtil.VALID_DATE_BOB).build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + CommandTestUtil.TAG_DESC_APPLICANT + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.TAG_DESC_APPLICANT","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.ADDRESS_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB + CommandTestUtil.TAG_DESC_CANDIDATE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"                        CliSyntax.PREFIX_ADDRESS, PREFIX_TAG));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.INVALID_ADDRESS_DESC + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.INVALID_ADDRESS_DESC + CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL, CliSyntax.PREFIX_ADDRESS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"-":178,"Ditzchann":9}},{"path":"src/test/java/hirehive/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import hirehive.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Address;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Email;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.InterviewDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Name;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.Phone;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.Assert;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import hirehive.address.testutil.TypicalIndexes;","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_DATE \u003d \"01012004\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"91234467\";","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"Applicant\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"Candidate\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_DATE \u003d \"01/01/2004\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d Tag.APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d Tag.APPLICANT;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // VALID_TAG_1 \u003d \"Applicant\", VALID_TAG_2 \u003d \"Candidate\"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(Tag.APPLICANT, Tag.CANDIDATE));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"        InterviewDate expectedDate \u003d new InterviewDate(VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String dateWithWhiteSpace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        InterviewDate expectedDate \u003d new InterviewDate(VALID_DATE);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhiteSpace));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"Ditzchann"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22","isFullCredit":false}],"authorContributionMap":{"-":221,"Ditzchann":2}},{"path":"src/test/java/hirehive/address/logic/parser/ReminderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package hirehive.address.logic.parser;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import hirehive.address.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.FilterCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import hirehive.address.logic.commands.ReminderCommand;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.PersonContainsTagPredicate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import hirehive.address.model.person.UpcomingInterviewPredicate;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import hirehive.address.model.tag.Tag;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ReminderCommandParserTest {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private ReminderCommandParser parser \u003d new ReminderCommandParser();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ReminderCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Ditzchann"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"100000000000000000000000000000000\", ParserUtil.MESSAGE_OUT_OF_RANGE);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsReminderCommand() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ReminderCommand expectedReminderCommand \u003d","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new ReminderCommand(new UpcomingInterviewPredicate(10));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" 10\", expectedReminderCommand);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-02","isFullCredit":false}],"authorContributionMap":{"-":26,"Ditzchann":1}}]
