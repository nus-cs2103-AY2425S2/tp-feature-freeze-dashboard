[{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Sean-G-Han"},"content":"\u003cstyle\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Sean-G-Han"},"content":"body {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Sean-G-Han"},"content":"    font-size: 1em !important;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Sean-G-Han"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Sean-G-Han"},"content":"\u003c/style\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"# WealthVault Developer Guide","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delc 1`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ClientListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"- depends on some classes in the `Model` component, as it displays `Client` object residing in the `Model`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"curiousfun88"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a client).\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"curiousfun88"},"content":"- stores WealthVault data i.e., all `Client` objects (which are contained in a `UniqueClientList` object).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"- stores the currently \u0027selected\u0027 `Client` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cClient\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Client` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Client` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"curiousfun88"},"content":"### Add Client","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"curiousfun88"},"content":"The `addc` command adds a client from WealthVault based on the specified index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"curiousfun88"},"content":"The Class Diagram of a Client can be [seen in the diagram above](#model-component).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"curiousfun88"},"content":"#### Implementation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"curiousfun88"},"content":"The `addc` command adds a client at a given index. The following sequence diagrams  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"curiousfun88"},"content":"illustrate how this process flows through the logic component:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"curiousfun88"},"content":"\u003cpuml src\u003d\"diagrams/AddClientSequenceDiagram-Logic.puml\" width\u003d\"650\" /\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"curiousfun88"},"content":"The following sequence diagram illustrates how the `AddClientCommand` class interacts with  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"curiousfun88"},"content":"model components to remove a client from WealthVault:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"curiousfun88"},"content":"\u003cpuml src\u003d\"diagrams/AddClientSequenceDiagram-Client.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"curiousfun88"},"content":"As seen above, the `execute` method adds the `Client` to WealthVault. If the index is invalid, an error is thrown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"curiousfun88"},"content":"### Add Policy","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"curiousfun88"},"content":"The `addp` command adds a policy (tag) to a client\u0027s list of policies.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"curiousfun88"},"content":"The Class Diagram of a Client can be [seen in the diagram above](#model-component).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"curiousfun88"},"content":"#### Implementation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"curiousfun88"},"content":"The `addp` command adds a policy to the client at the given index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"curiousfun88"},"content":"The following sequence diagrams illustrate how this process flows through the logic component:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"curiousfun88"},"content":"\u003cpuml src\u003d\"diagrams/AddPolicySequenceDiagram.puml\" width\u003d\"650\" /\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"curiousfun88"},"content":"As seen above, the `execute` method adds the `Policy` to the client at the specified index. If the index is invalid, an error is thrown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Delete Client","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"curiousfun88"},"content":"The `delc` command removes a client from WealthVault based on the specified index.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"The Class Diagram of a Client can be [seen in the diagram above](#model-component).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"curiousfun88"},"content":"The `delc` command deletes a client at a given index. The following sequence diagrams  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"illustrate how this process flows through the logic component:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteClientSequenceDiagram-Logic.puml\" width\u003d\"650\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"The following sequence diagram illustrates how the `DeleteClientCommand` class interacts with  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"curiousfun88"},"content":"model components to remove a client from WealthVault:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteClientSequenceDiagram-Client.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"As seen above, the `execute` method retrieves the `Client` at the specified index and removes  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"curiousfun88"},"content":"it from WealthVault. If the index is invalid, an error is thrown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"### Delete Multiple Clients","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"curiousfun88"},"content":"The `deleteclientmult` command removes multiple clients from WealthVault based on the specified indices.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"The `deleteclientmult` command deletes multiple clients at given indices. The following sequence diagrams  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"illustrate how this process flows through the logic component:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteClientMultSequenceDiagram.puml\" width\u003d\"650\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"As seen above, the `execute` method retrieves each `Client` at the specified indices and removes  ","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"curiousfun88"},"content":"them from WealthVault. If any index is invalid, an error is thrown.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"#### Design Considerations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"**Aspect: How to specify multiple indices:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"- **Alternative 1 (current choice):** Use `i/` prefix for each index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"  - Pros: Clear and explicit format, reduces input errors","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  - Cons: Slightly more verbose","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"- **Alternative 2:** Use space-separated indices","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"  - Pros: More concise","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"  - Cons: Higher chance of input errors, less explicit","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"The current implementation uses Alternative 1 as it provides better clarity and reduces the likelihood of user input errors.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Delete Policy","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"curiousfun88"},"content":"The `delp` command removes a policy (tag) from a client\u0027s list of policies.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"The Class Diagram of a Client can be [seen in the diagram above](#model-component).","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"curiousfun88"},"content":"The `delp` command deletes a policy at a given index within a displayed policy list.  ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"The following sequence diagrams illustrate how this process flows through the logic component:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeletePolicySequenceDiagram.puml\" width\u003d\"650\" /\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"As seen above, the `execute` method retrieves the `Policy` at the specified index and removes  ","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"it from the corresponding `Client` object. If the index is invalid, an error is thrown.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"### Priority feature","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"#### Priority Tag","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"The priority command is built around the `PriorityTag` class, which extends `Tag`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"The PriorityTag constructor does not accept arguments, ensuring that its tagName","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"is always set to \"Priority.\"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"The Class Diagram of a Client can be [seen in the diagram above](#model-component).","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"The `PriorityCommand` toggles a client’s priority status. The following sequence diagrams","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"illustrate how this process flows through the logic component:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/PrioritySequenceDiagram-Logic.puml\" width\u003d\"650\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"The following sequence diagrams illustrate how the `PriorityCommand` class interacts with","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"model components to toggle the priority of the user","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/PrioritySequenceDiagram-Client.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"As seen above, the `togglePriority` method creates a new `Client` object","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"with updated priority. If the `Client` does not have a `PriorityTag`,","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"`togglePriority` will create a new `Client` with a `PriorityTag` object.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"Else, it will filter the `PriorityTag` out of `tags`.","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"Its operation is modeled below:","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/TogglePrioritySequenceDiagram1.puml\" width\u003d\"750\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/TogglePrioritySequenceDiagram2.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-30","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"### Find-Any Find-All","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"As the `findany` and `findall` command performs very similarly. We thought that it made ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"the most sense for `FindClientOrCommand` and `FindClientAndClient` to be sibling classes ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"(in this case extending from `AbstractFindClientCommand`). The main difference between","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"the two is that they use different predicates `ContainsAnyKeywordsPredicate` and `ContainsAnyKeywordsPredicate`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"which inherits from `AbstractContainsKeywordsPredicate`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"Below is a class diagram to demonstrate the relationship of the 3 classes.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/FindCommandsClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"The following sequence diagram illustrates how the `AbstractFindClientCommand` and hence the","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"`FindClientOrCommand` and `FindClientAndCommand` class interacts with  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"curiousfun88"},"content":"model components to get a filtered list from WealthVault:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/AbstractFindClientCommandSequenceDiagram.puml\" width\u003d\"750\" /\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Update Client feature","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"The `update` command allows users to modify only the contact information (phone, email, address) of a client, without changing their name or tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"The `update` command updates a client\u0027s contact information at a given index. Unlike the `edit` command which allows changing all client fields, the `update` command is specifically designed to only modify contact information fields (phone, email, address), preserving the client\u0027s name and tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"The `UpdateClientCommand` extends `Command` directly, rather than extending `EditCommand`, to enforce these restrictions. However, it still reuses the `EditClientDescriptor` class to store field values.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"The restrictions are implemented in two key places:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"1. In the `UpdateClientCommandParser`:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"   // Only tokenize phone, email, and address prefixes","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"   ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"           PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"2. In the `createUpdatedClient` method of `UpdateClientCommand`:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"   return new Client(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"           clientToUpdate.getName(),      // Preserve original name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"           updatedPhone,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"           updatedEmail,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"           updatedAddress,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"           clientToUpdate.getTags()       // Preserve original tags","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"   );","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"This design allows for a more specialized update command that can be used when users only need to update contact information without risking accidental changes to a client\u0027s identity (name) or categorization (tags).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"### Sort Priority feature","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"#### Implementation","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"The sort priority command allows users to sort clients by their priority status. The following sequence diagram","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"illustrates how this process flows through the logic component:","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/SortPrioritySequenceDiagram.puml\" width\u003d\"650\" /\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"The `SortPriorityCommand` extends the abstract `Command` class and works with the `Model` component to sort clients.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"When executed, it calls `Model#sortClientsByPriority()` which internally uses the `UniqueClientList` to sort clients","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"based on their priority status.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"The sorting is implemented in the `UniqueClientList` class, where clients with priority (those with a `PriorityTag`)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"are placed before non-priority clients. This is achieved through a comparator that sorts based on the client\u0027s","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"`getPriority()` value.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"The command returns a `CommandResult` with a success message once the sorting is complete, and the UI automatically","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"updates to show the new sorted order of clients.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"curiousfun88"},"content":"**Note:** WealthVault will be referred to generically as Address Book in this section. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"curiousfun88"},"content":"Step 2. The user executes `delc 5` command to delete the 5th client in WealthVault. The `delc` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delc 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"curiousfun88"},"content":"Step 3. The user executes `addc n/David …​` to add a new client. The `addc` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"curiousfun88"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify Address Book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"curiousfun88"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `addc n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"curiousfun88"},"content":"  - Pros: Will use less memory (e.g. for `delc`, just save the client being deleted).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"**Target user profile**: Financial advisors","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"- Managing a significant number of client contacts","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"- Requires a one-stop platform to track and update client\u0027s financial details","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"- Experiences difficulties to keep track of client\u0027s financial needs across multiple platforms","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"- Easy-to-use, fast and organized interface to maintain efficiency in their work","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"- Keen to provide fast and efficient service to customers","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"**Value proposition**: Manage clients and their financial needs faster than a typical mouse/GUI driven app","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"| Priority | As a …​           | I want to …​                                            | So that I can…​                                      |","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"curiousfun88"},"content":"| -------- | ----------------- |---------------------------------------------------------|------------------------------------------------------|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"| `* * *`  | Financial Advisor | Add a new client with contact details                   | Keep track of my clients                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"| `* * *`  | Financial Advisor | Read client’s contact details                           | View them when necessary                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"| `* * *`  | Financial Advisor | Delete a client’s record                                | Remove outdated or incorrect information             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"| `* *`    | Financial Advisor | Edit a client’s contact details                         | Update them when necessary                           |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"| `* *`    | Financial Advisor | Search for a client by name                             | Quickly find their details                           |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"curiousfun88"},"content":"| `* *`    | Financial Advisor | Sort clients in alphabetical order                      | Quickly find their details                           |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"curiousfun88"},"content":"| `* *`    | Financial Advisor | Mark client\u0027s priority status                           | Quickly identify and attend to high-priority clients |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"curiousfun88"},"content":"| `* *`    | Financial Advisor | Sort client by priority status                          | Quickly identify and attend to high-priority clients |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"| `* *`    | Financial Advisor | Filter clients by location                              | Easily find clients within a specific region         |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"| `*`      | Financial Advisor | Store multiple contact numbers for a client             | Have alternative ways to reach them                  |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"-"},"content":"| `*`      | Financial Advisor | Store multiple addresses for a client                   | Keep track of their home and office locations        |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"| `*`      | Financial Advisor | Categorize clients based on communication preferences   | Contact them in their preferred way                  |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"curiousfun88"},"content":"| `*`      | Financial Advisor | Send an email to a client directly from the application | Communicate with them efficiently                    |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"curiousfun88"},"content":"| `*`      | Financial Advisor | Initiate a phone call to a client from the application  | Reach them easily                                    |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"curiousfun88"},"content":"| `*`      | Financial Advisor | Set reminders for following up with clients             | Not miss important meetings                          |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"| `*`      | Financial Advisor | Receive notifications about upcoming meetings           | Prepare in advance                                   |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"| `*`      | Financial Advisor | Schedule recurring reminders for periodic check-ins     | Maintain regular contact                             |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"_{More to be added}_","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"Sean-G-Han"},"content":"(For all use cases below, the **System** is the `WealthVault` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"### UC01 - Add Client","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"#### Main Success Scenario (MSS):","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. User chooses to add a new client.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"2. WealthVault requests client details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"3. User enters the required client details.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"4. WealthVault verifies the details.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"curiousfun88"},"content":"5. WealthVault adds the client to WealthVault and confirms successful addition.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"curiousfun88"},"content":"6. **Use case ends.**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"#### Extensions:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"- **3a. WealthVault detects an error in the entered details.**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"  - 3a1. WealthVault requests for the correct data.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"-"},"content":"  - 3a2. User enters new data.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"  - Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"  - **Use case resumes from step 4.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"- **4a. WealthVault detects that the client already exists.**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"-"},"content":"  - 4a1. WealthVault notifies the user of the duplicate entry.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"  - 4a2. User chooses to either modify details or cancel the operation.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"  - If modifying, **use case resumes from step 3.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"  - If canceling, **use case ends.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"- **\\*a. At any time, User chooses to cancel the process.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"  - \\*a1. WealthVault requests to confirm the cancellation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"  - \\*a2. User confirms the cancellation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"  - **Use case ends.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"### UC02 - Delete Client","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"#### Main Success Scenario (MSS):","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. User chooses to delete a client.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"2. WealthVault requests the client’s details for deletion.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"3. User enters the required details.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"curiousfun88"},"content":"4. User confirms the deletion by clicking \"enter\".","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"curiousfun88"},"content":"5. WealthVault removes the client from WealthVault and confirms successful deletion. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"curiousfun88"},"content":"6. **Use case ends.**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"#### Extensions:","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"- **3a. WealthVault detects an error in the entered details.**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"  - 3a1. WealthVault requests for the correct data.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"-"},"content":"  - 3a2. User enters new data.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"-"},"content":"  - Steps 3a1-3a2 are repeated until the data entered are correct.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"-"},"content":"  - **Use case resumes from step 4.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"curiousfun88"},"content":"- **3b. The client does not exist in WealthVault.**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"  - 3b1. WealthVault notifies the user that the client is not found.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"-"},"content":"  - 3b2. User chooses to either retry or cancel the operation.","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"  - If retrying, **use case resumes from step 2.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"  - If canceling, **use case ends.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"-"},"content":"- **\\*a. At any time, User chooses to cancel the process.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"  - \\*a1. WealthVault requests to confirm the cancellation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"  - \\*a2. User confirms the cancellation.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"  - **Use case ends.**","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"-"},"content":"_{More to be added}_","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `17` or above installed.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"curiousfun88"},"content":"2.  Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"-"},"content":"_{More to be added}_","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"- **API (Application Programming Interface)**: A set of protocols and tools that allow different software components to communicate and interact with each other. In the context of WealthVault, it defines how various system components exchange data and functionality.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"- **Client**: An individual who is a financial advisor’s contact and recipient of financial guidance or services.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"-"},"content":"- **Financial Advisor**: A primary user of the application, responsible for managing client financial data, providing investment advice, and overseeing financial planning.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"- **Financial Needs**: A client’s specific financial goals or requirements, including investment planning, retirement savings, risk management, and debt reduction strategies.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"- **GUI (Graphical User Interface)**: The visual interface of the application that enables users to interact with the system through graphical elements such as buttons, menus, and forms.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"-"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"- **PlantUML**: A tool used for creating UML (Unified Modeling Language) diagrams, such as sequence diagrams and class diagrams, to document system design and architecture.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"-"},"content":"- **Private Contact Detail**: A contact detail that is not meant to be shared with others.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"testers are expected to do more _exploratory_ testing.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"Sean-G-Han"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"Sean-G-Han"},"content":"2. Saving window preferences","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"Sean-G-Han"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"curiousfun88"},"content":"### Adding a client","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"curiousfun88"},"content":"1. Adding a client while all clients are being shown","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"Sean-G-Han"},"content":"2. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"FooNicholas"},"content":"3. Test case: `addc n/David Ong p/93012489 e/davidong@example.com a/Block 111 Sengkang Central t/Life Policy`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"FooNicholas"},"content":"   Expected: New contact is added to the bottom of the list. Details of the added contact shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"Sean-G-Han"},"content":"4. Test case: `addc 0`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"curiousfun88"},"content":"   Expected: No client is added. Error details shown in the status message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"Sean-G-Han"},"content":"5. Other incorrect addc commands to try: `addc`, `addc x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"curiousfun88"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"curiousfun88"},"content":"### Adding a policy","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"curiousfun88"},"content":"1. Adding a policy while all clients are being shown","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"Sean-G-Han"},"content":"2. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"Sean-G-Han"},"content":"3. Test case: `addp 1 t/Health Insurance`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"curiousfun88"},"content":"   Expected: \"Health Insurance\" policy is added to the first contact of the list. Details of the added policy shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"Sean-G-Han"},"content":"4. Test case: `addp 0`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"curiousfun88"},"content":"   Expected: No policy is added. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"Sean-G-Han"},"content":"5. Other incorrect addp commands to try: `addp`, `addp x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"curiousfun88"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"curiousfun88"},"content":"### Deleting a client","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"curiousfun88"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"Sean-G-Han"},"content":"2. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"Sean-G-Han"},"content":"3. Test case: `delc 1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"curiousfun88"},"content":"   Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"Sean-G-Han"},"content":"4. Test case: `delc 0`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"curiousfun88"},"content":"   Expected: No client is deleted. Error details shown in the status message. ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"Sean-G-Han"},"content":"5. Other incorrect delc commands to try: `delc`, `delc x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"FooNicholas"},"content":"### Deleting multiple clients","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"FooNicholas"},"content":"1. Deleting multiple clients while all clients are being shown","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"FooNicholas"},"content":"2. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"FooNicholas"},"content":"3. Test case: `deleteclientmult i/1 i/2`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"FooNicholas"},"content":"   Expected: First and second contact are deleted from the list. Details of the deleted contacts shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"FooNicholas"},"content":"4. Test case: `deleteclientmult i/2`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"FooNicholas"},"content":"   Expected: No client is deleted. Error details shown in the status message.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"FooNicholas"},"content":"5. Other incorrect deleteclientmult commands to try: `deleteclientmult`, `deleteclientmult i/1 i/x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"FooNicholas"},"content":"   Expected: Similar to previous.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"curiousfun88"},"content":"### Deleting a policy","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"curiousfun88"},"content":"1. Deleting a policy while all clients are being shown","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"Sean-G-Han"},"content":"2. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"Sean-G-Han"},"content":"3. Test case: `delp 1 t/Health Insurance`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"curiousfun88"},"content":"   Expected: \"Health Insurance\" policy is deleted from the first contact of the list. Details of the deleted policy shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"Sean-G-Han"},"content":"4. Test case: `delp 0`\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"curiousfun88"},"content":"   Expected: No policy is deleted. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"Sean-G-Han"},"content":"5. Other incorrect delp commands to try: `delp`, `delp x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"curiousfun88"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"Sean-G-Han"},"content":"### Searching for Clients","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"Sean-G-Han"},"content":"#### Find Any","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"Sean-G-Han"},"content":"1. Find a client with any of the keywords matching the tags or names","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"Sean-G-Han"},"content":"2. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"Sean-G-Han"},"content":"3. Test case: `findany Alex Priority`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"Sean-G-Han"},"content":"   Expected: Shows all clients with the name or tags matching either (or both) \"Alex\" or \"Priority\" (case-insensitve)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"Sean-G-Han"},"content":"4. Test case: `findany`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"Sean-G-Han"},"content":"   Expected: No client shown. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"Sean-G-Han"},"content":"#### Find All","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"Sean-G-Han"},"content":"1. Find a client with any of the keywords matching the tags or names","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"Sean-G-Han"},"content":"2. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"Sean-G-Han"},"content":"3. Test case: `findany Alex friends`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":700,"author":{"gitId":"Sean-G-Han"},"content":"   Expected: Shows all clients with the name or tags matching both \"Alex\" or \"friends\" (case-insensitve)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":701,"author":{"gitId":"Sean-G-Han"},"content":"4. Test case: `findall`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":702,"author":{"gitId":"Sean-G-Han"},"content":"   Expected: No client shown. Error details shown in the status message.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":703,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":704,"author":{"gitId":"curiousfun88"},"content":"### Toggling Priority","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":705,"author":{"gitId":"Sean-G-Han"},"content":"1. Toggles the priority (as shown by the `Priority` tag) of a client while all clients are being shown","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":706,"author":{"gitId":"curiousfun88"},"content":"2. Prerequisite 1: Put the jar file in a new folder as the test below is for sample data.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":707,"author":{"gitId":"curiousfun88"},"content":"3. Prerequisite 2: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":708,"author":{"gitId":"Sean-G-Han"},"content":"3. Test case: `priority 1`\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":709,"author":{"gitId":"Sean-G-Han"},"content":"   Expected: First contact (Alex) has a Priority tag added to his card. A success message is shown in the status box.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":710,"author":{"gitId":"Sean-G-Han"},"content":"4. Test case: `priority 1` (again)\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":711,"author":{"gitId":"Sean-G-Han"},"content":"   Expected: First contact (Alex) has a Priority tag removed from his card. A success message is shown in the status box.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":712,"author":{"gitId":"Sean-G-Han"},"content":"5. Some incorrect commands to try: `priority`, `priority x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":713,"author":{"gitId":"Sean-G-Han"},"content":"   Expected: Similar to `addc` and `delc`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":714,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":715,"author":{"gitId":"sciphi-123"},"content":"## **Planned Enhancements**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":716,"author":{"gitId":"sciphi-123"},"content":"**Team Size:** 5","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":717,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":718,"author":{"gitId":"sciphi-123"},"content":"1. **Case-sensitivity of prefixes:** The current command format only allows prefixes in lowercase","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":719,"author":{"gitId":"sciphi-123"},"content":"   (e.g. `a/`, `e/`, `n/`, `p/`, `t/`, and not `A/`, `E/`, `N/`, `P/`, `T/`). We plan to consider allowing prefixes to be case-insensitive to make it more convenient for users (e.g.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":720,"author":{"gitId":"sciphi-123"},"content":"   let `t/` and `T/` both be considered valid prefixes).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":721,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":722,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":723,"author":{"gitId":"sciphi-123"},"content":"2. **Input validation for policy tags (part 1):** We currently impose restrictions on policy tags to disallow certain symbols (`/` etc).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":724,"author":{"gitId":"sciphi-123"},"content":"   However, the restriction might have been excessive. For instance, the user might want to create a policy tag with the name `Policy A/B`,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":725,"author":{"gitId":"sciphi-123"},"content":"   which is likely a valid policy name in practice but is disallowed in our current setup. We plan to review the list of symbols allowed,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":726,"author":{"gitId":"sciphi-123"},"content":"   to strike a balance between disallowing invalid input and maintaining flexibility for user-defined inputs.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":727,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":728,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":729,"author":{"gitId":"sciphi-123"},"content":"3. **Input validation for policy tags (part 2):** We currently capitalise the first character of every word in the policy tag (e.g. `addp 1 t/policy A` results in `Policy A` policy tag","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":730,"author":{"gitId":"sciphi-123"},"content":"   being added to the client at index 1, rather than `policy A`), in order to prevent duplicates (e.g. `policy A` and `Policy A` might be the same policy).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":731,"author":{"gitId":"sciphi-123"},"content":"   However, this restriction may not always align with user expectations or preferences. For instance, the user might want to create a policy tag named `WholeLife Plan` rather than `Wholelife Plan`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":732,"author":{"gitId":"sciphi-123"},"content":"   We plan to revisit our approach to formatting of policy tag names, to strike a balance between disallowing invalid input and maintaining flexibility for user-defined inputs.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":733,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":734,"author":{"gitId":"sciphi-123"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":735,"author":{"gitId":"sciphi-123"},"content":"4. **Input validation for phone numbers:** We currently do not check for the validity of phone numbers based on the country code.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":736,"author":{"gitId":"sciphi-123"},"content":"   For instance, `+65 12345` is considered despite it being necessary for Singapore phone numbers (country indicated by `+65`) to","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":737,"author":{"gitId":"sciphi-123"},"content":"   be 8 digits long. We plan to include such checks when validating user input for phone numbers.","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"curiousfun88":92,"sciphi-123":24,"FooNicholas":12,"Sean-G-Han":49,"-":560}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Sean-G-Han"},"content":"\u003cstyle\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Sean-G-Han"},"content":"body {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Sean-G-Han"},"content":"    font-size: 1em !important;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Sean-G-Han"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Sean-G-Han"},"content":"\u003c/style\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"# WealthVault User Guide","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"WealthVault is a **desktop app for managing contacts, optimized for use via a Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, WealthVault can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"## Target Users and Assumptions","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"This user guide is designed for financial advisors who seek a more organised and efficient way to manage their clients and their financial information. It assumes that users have basic knowledge of financial advisory practices and are familiar with managing client information, whether through spreadsheets, Customer Relationship Management (CRM) systems, or manual methods. Users are expected to understand the importance of client data management in delivering personalized financial advice.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"## About WealthVault","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"WealthVault is a client management platform tailored specifically for financial advisors. It provides a centralized space for storing client profiles, addresses, and financial information — all in one easily accessible location. This product is especially valuable for advisors managing a large client base across multiple platforms, where keeping track of individual client needs can become challenging and time-consuming.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"## Why should you use WealthVault? ","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"Designed with the user in mind, WealthVault simplifies the organization of client data and streamlines day-to-day workflows. It enables financial advisors to quickly search for clients based on specific needs, access relevant information with ease, and deliver more targeted financial advisory services efficiently. Ultimately, WealthVault empowers advisors to provide higher-quality services while reducing administrative overhead, supporting both professional productivity and a healthier work-life balance.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Sean-G-Han"},"content":"---","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Sean-G-Han"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Sean-G-Han"},"content":"## Table of Contents","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cpage-nav-print/\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Sean-G-Han"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Ensure you have Java `17` or above installed in your Computer.\u003cbr\u003e","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"   **Mac users:** Ensure you have the precise JDK version prescribed [here](https://se-education.org/guides/tutorials/javaInstallationMac.html).","lastModifiedDate":"2025-01-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Sean-G-Han"},"content":"2. Download the latest `.jar` file from [here](https://github.com/AY2425S2-CS2103T-W12-2/tp/releases/tag/v1.3).","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Sean-G-Han"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your application.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Sean-G-Han"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar wealthvault.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Sean-G-Han"},"content":"   \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Sean-G-Han"},"content":"   \u003cimg src\u003d\"images/Ui.png\" alt\u003d\"UI\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Sean-G-Han"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"   - `list` : Lists all contacts.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"   * `addc n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * `delc 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"   - `clear` : Deletes all contacts.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"   - `exit` : Exits the app.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Sean-G-Han"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. in `addc n/NAME`, `NAME` is a parameter which can be used as `addc n/John Doe`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/POLICY_TAG]` can be used as `n/John Doe t/Policy A` or as `n/John Doe`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. `[t/POLICY_TAG]…​` can be used as ` ` (i.e. 0 times), `t/Policy B`, `t/Policy C t/Policy D` etc.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"FooNicholas"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit`, `sort` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"* **Use only the valid prefixes for each command format. Usage of prefixes other than the ones allowed can lead to the ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"value of the last prefix being deemed invalid. For example, ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"`addc n/Jo Ng e/j@gmail.com a/21 Lane p/81234321 x/Policy A` will result in the phone number being invalid as x/","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"is not a valid prefix for addc.**","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"**Notes about the fields:**\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"- `-` (a single dash) can be used should it not be possible to supply a valid `PHONE_NUMBER`,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"  `EMAIL` or `ADDRESS` at the point the details are entered. However, `-` cannot be used for `NAME`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"- Anything more than `-` (a single dash) could be interpreted differently (e.g. `--` is not valid for `PHONE_NUMBER`).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"- `NAME` can only be up to 150 characters long, and cannot contain invalid symbols (e.g. \\\\).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"- `NAME` has every first letter capitalised by default, to protect against identifying the same name with different","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"  casing as different names.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"- `PHONE_NUMBER` should be of the format +[international code] [whitespace] [number] (e.g. +41 123; the `+` is optional).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"  If no international code is provided, the phone number will start with +65.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"- `PHONE_NUMBER`\u0027s international code should not include whitespace.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"- `PHONE_NUMBER`\u0027s international code and number should be separated by a single whitespace.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"- `PHONE_NUMBER`\u0027s international code should be 1-3 digits long, and the number should be 3-13 digits long.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"- `EMAIL` should be of the format [local-part]@[domain]. Standard domain names like gmail.com are definitely fine.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"- `EMAIL` should not contain unnecessary whitespace.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"- The local part of `EMAIL` should be alphanumeric, but it cannot start or end with any special characters.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"  Nonetheless, it can contain +\\_.-","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"- The domain name of `EMAIL` must end with a domain label at least 2 characters long. Every domain label","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"  must start and end with alphanumeric characters, must consist of alphanumeric characters, and can be","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"  separated only by hyphens (if any).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"- `ADDRESS` should not be more than 150 characters long.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"- `POLICY_TAG` should not be more than 150 characters long. It should not contain invalid symbols (e.g. \\).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"- `INDEX` should be obtained from the displayed client list. For example, if `findall` is used on a list of 10 clients","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"  such that there is only 1 client in the list eventually displayed, only `delc 1` is a valid command to delete a client.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"curiousfun88"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Sean-G-Han"},"content":"\u003cimg src\u003d\"images/helpMessage.png\" alt\u003d\"help message\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"**Format**: `help`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Adding a client: `addc`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"Adds a client to WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"**Format**: `addc n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/POLICY_TAG]…​`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"**Tips:**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"- `n/NAME`, `p/PHONE_NUMBER`, `e/EMAIL` and `a/ADDRESS` are compulsory.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"- `t/POLICY_TAG` is not compulsory. However, if t/ is used, a valid policy must be given.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"Sean-G-Han"},"content":"**Duplicate Handling:**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Sean-G-Han"},"content":"- We allow clients with the same name as common names like \"John\" may be wrongfully detected as a duplicates.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"Sean-G-Han"},"content":"- We also allow clients with the same address, email and phone number as it is common for financial advisors to have more than 1 member of a family as clients, and they might choose to use the same contact information.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"Sean-G-Han"},"content":"- The only time `addc` will detect a client as a duplicate is if two clients share the same name, the same email, the same phone number and the same address all at the same time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"Sean-G-Han"},"content":"- `addc n/Jo Ng p/81234321 e/j@gmail.com a/21 Lane` adds a new client with the specified information","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"Sean-G-Han"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"Sean-G-Han"},"content":"- \u003cimg src\u003d\"images/addc1.png\" alt\u003d\"addc1\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"- `addc n/Daniel Lim p/91234567 e/d@mail.com a/8 View t/Policy A t/Policy B` adds a new client with the specified information","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/addc2.png\" alt\u003d\"addc2\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Adding a policy: `addp`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"Adds a policy to a client in WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"**Format**: `addp INDEX t/POLICY_TAG`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"- `addp 1 t/Health Insurance` adds `Health Insurance` policy tag to index `1` of the list (in this case, Jo Ng)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/addp1.png\" alt\u003d\"addp1\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"Sean-G-Han"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"- `addp 2 t/Home Protection Plan` adds `Home Protection Plan` policy tag to index `2` of the list (in this case, Daniel Lim)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"Sean-G-Han"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/addp2.png\" alt\u003d\"addp2\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Listing all clients : `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"Shows a list of all clients in WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"**Format**: `list`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"Sean-G-Han"},"content":"* Displays the list of clients stored","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"Sean-G-Han"},"content":"**Examples**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/list_command_image.png\" alt\u003d\";ist\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"### Editing contact information : `edit`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"Edits an existing person in the address book. This command allows changing the client\u0027s name and contact information (phone, email, address). Note that tags cannot be edited with this command.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Format**: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]​`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"* Tags cannot be edited using this command. Use the `addp` and `delp` commands instead","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"Sean-G-Han"},"content":"   \u003cimg src\u003d\"images/edit1.png\" alt\u003d\"edit1\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"* `edit 2 n/Betsy Crower` Edits the name of the 2nd person to be `Betsy Crower`.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/edit2.png\" alt\u003d\"edit2\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Updating contact information : `update`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"Updates only the contact information (phone, email, address) of an existing client in WealthVault. Unlike the `edit` command, this command cannot change the client\u0027s name or tags.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"**Format**: `update INDEX [p/PHONE] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"- Updates the client at the specified `INDEX`. The index refers to the index number shown in the displayed client list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"J4Joshua"},"content":"- Name is not allowed to be updated to prevent accidently changing the contact\u0027s name.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"- Name and tags cannot be modified using this command. Use the `edit` command instead.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"- `update 1 p/91234567 e/johndoe@example.com` Updates the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"- `update 2 a/Clementi Ave 6` Updates only the address of the 2nd client to be `Clementi Ave 6`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Locating clients by name and tag: `findany`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"Finds clients whose name or tag contain any of the given keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Format**: `findany KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"- Both the name and the tag is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"- Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"- `findany Jo priority` returns only clients whose name or tags matches either `priority` or `Jo` attached\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/findclientorAlexDavidPriority.png\" alt\u003d\"findany\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Locating specific clients by name and tag: `findall`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"Finds clients whose name or tag contain all of the given keywords.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"**Format**: `findall KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"- The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"- Both the name and the tag is searched.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"- Clients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"- `findall ng priority` returns only clients whose name or tags matches both `priority` and `ng` attached\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/findclientandFriendsPriority.png\" alt\u003d\"findall\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Deleting a client : `delc`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"Deletes the specified client from WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"**Format**: `delc INDEX`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"- Deletes the client at the specified `INDEX`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"- The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"- `list` followed by `delc 1` deletes the 1st client in the client list (in this case, John Tan).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/delc1.png\" alt\u003d\"delc1\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"- `findany Jane` followed by `delc 2` deletes the 2nd client in the results of the `findany` command (in this case, Jane Lee).","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"Sean-G-Han"},"content":"  ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/delc2.png\" alt\u003d\"delc2\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"### Deleting multiple clients : `deleteclientmult`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"Deletes multiple specified clients from WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"FooNicholas"},"content":"**Format**: `deleteclientmult i/INDEX i/INDEX [i/INDEX]…​`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"- Deletes the clients at the specified `INDEX`es.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"- The index refers to the index number shown in the displayed client list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"- Each index must be prefixed with `i/`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"FooNicholas"},"content":"- There must be at least 2 indexes provided.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"- `list` followed by `deleteclientmult i/1 i/2 i/3` deletes the first three clients in WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"curiousfun88"},"content":"- `findany Betsy` followed by `deleteclientmult i/1` deletes the 1st client in the results of the `findany` command.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"Sean-G-Han"},"content":"  \u003cimg src\u003d\"images/deleteclientmult_command_image.png\" alt\u003d\"deleteclientmult\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"curiousfun88"},"content":"\u003e ### 💡 Tip: Why are there two delete commands?","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"curiousfun88"},"content":"\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"curiousfun88"},"content":"\u003e In WealthVault, client deletions are *permanent* — once a client is deleted, their information cannot be recovered.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"curiousfun88"},"content":"\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"curiousfun88"},"content":"\u003e The `delc` command is designed to be the *primary* deletion method for most users. It only allows you to delete a single client at a time, encouraging careful review and minimizing the risk of accidental data loss.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"curiousfun88"},"content":"\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"curiousfun88"},"content":"\u003e The `deleteclientmult` command exists as a quicker, more convenient alternative for experienced users who are certain about their deletions — for example, when performing bulk clean-ups or offboarding multiple clients at once.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"curiousfun88"},"content":"\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"curiousfun88"},"content":"\u003e If you are unsure or would like to double-check your deletions, it is recommended to use `delc` for greater safety and control.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"curiousfun88"},"content":"---","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Deleting a policy: `delp`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"Deletes the specified policy from WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"**Format**: `delp INDEX t/POLICY_TAG`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"- Deletes the policy at the specified `INDEX`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"- The index refers to the index number shown in the displayed policy list.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"- POLICY_TAG must match the policy name to be deleted.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"- `delp 1 t/Health Insurance` deletes `Health Insurance` policy tag from index `1` of the list (in this case, John Tan)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"Sean-G-Han"},"content":"\u003cimg src\u003d\"images/delp1.png\" alt\u003d\"delp1\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"Sean-G-Han"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"- `delp 2 t/Home Protection Plan` deletes `Home Protection Plan` policy tag from index `2` of the list (in this case, Jane Tan)","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"Sean-G-Han"},"content":"\u003cimg src\u003d\"images/delp2.png\" alt\u003d\"delp2\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"curiousfun88"},"content":"### Prioritizing a client: `priority`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"Toggles the priority of specified client from the application as indicated with a `Priority` tag.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Format**: `priority INDEX [MORE INDEX]`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"- Adds a \"Priority\" tag to the specified `INDEX` if such a tag isn\u0027t attached to the client","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"- Removes the \"Priority\" tag of the specified `INDEX` if such a tag is already attached to the client","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"**Examples**:","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"- `list` followed by `priority 1 3` adds a priority tag to the 1st client and 3rd client in the list if the client is yet to be attached with a \"Priority\" tag.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"  Before |After","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"  -----------------|--------------------","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"  ![before priority command](images/priorityCommand1.png) | ![after \u0027priority 1 3\u0027](images/priorityCommand2.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"- `list` followed by `priority 3` removes a priority tag from the 3rd client in the list if the client is attached with a \"Priority\" tag.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"  Before |After","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"  -----------------|--------------------","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"  ![before priority command](images/priorityCommand2.png) | ![after \u0027priority 3\u0027](images/priorityCommand3.png)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"FooNicholas"},"content":"### Sorting all entries : `sort`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"FooNicholas"},"content":"Sorts all currently displayed entries on WealthVault in alphabetical order.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"FooNicholas"},"content":"**Format**: `sort`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"FooNicholas"},"content":"**Example**:","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"FooNicholas"},"content":"* `list` followed by `sort` sorts all names in the client list.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"FooNicholas"},"content":"* `findany Tan` followed by `sort` sorts the results of the `findany` command.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"Sean-G-Han"},"content":"\u003cimg src\u003d\"images/sortcommand_image.png\" alt\u003d\"SortCommand\" width\u003d\"600\"\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Sorting by priority: `sortpriority`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"Sorts all clients in the list by priority, with prioritized clients appearing at the top.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Format**: `sortpriority`","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"* Clients with the \"Priority\" tag will be moved to the top of the list","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"-"},"content":"* The relative order of clients within each group (prioritized and non-prioritized) is preserved","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"* This command affects only the display order and does not modify any client data","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"**Example**:","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"-"},"content":"* `sortpriority` rearranges the list to show prioritized clients first, followed by non-prioritized clients.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"Sean-G-Han"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"/\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"Clears all entries from WealthVault.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"**Format**: `clear`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"curiousfun88"},"content":"\u003e ❗ **Warning:** This action is irreversible! To retain past data, please [save a backup](#managing-your-data-in-wealthvault) of the data file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"**Format**: `exit`","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"curiousfun88"},"content":"___","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"curiousfun88"},"content":"## Managing your data in WealthVault","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"curiousfun88"},"content":"WealthVault data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually. WealthVault data are saved automatically as a JSON file `[JAR file location]/data/wealthvault.json`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"curiousfun88"},"content":"### Saving a backup data file ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"curiousfun88"},"content":"WealthVault does not back up data automatically. To back up your data, copy the JSON file (as mentioned above) into another location on your computer or to another device.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"curiousfun88"},"content":"WealthVault data are saved automatically as a JSON file `[JAR file location]/data/wealthvault.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, WealthVault will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the WealthVault to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous WealthVault home folder.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"2. **If you minimize the Help Window** and then run the `help` command (or use the `Help` menu, or the keyboard shortcut `F1`) again, the original Help Window will remain minimized, and no new Help Window will appear. The remedy is to manually restore the minimized Help Window.","lastModifiedDate":"2024-07-30","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"| Action                      | Format, Examples                                                                                                                                                         |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"FooNicholas"},"content":"|-----------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"-"},"content":"| **Add Client**              | `addc n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/POLICY_TAG]…​` \u003cbr\u003e e.g., `addc n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"-"},"content":"| **Add Policy**              | `addp INDEX t/POLICY_TAG ` \u003cbr\u003e e.g., `addp 1 t/Health Insurance`                                                                                                              |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"| **Clear**                   | `clear`                                                                                                                                                                        |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"| **Delete Client**           | `delc INDEX `\u003cbr\u003e e.g., `delc 3`                                                                                                                                               |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"-"},"content":"| **Delete Multiple Clients** | `deleteclientmult i/INDEX [i/INDEX]…​`\u003cbr\u003e e.g., `deleteclientmult i/3` or `deleteclientmult i/1 i/2 i/3`                                                                      |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"-"},"content":"| **Delete Policy**           | `delp INDEX t/POLICY_TAG`\u003cbr\u003e e.g., `delp 2 t/Health Insurance`                                                                                                                |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"J4Joshua"},"content":"| **Edit**                    | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com a/Edgedale Plains`                                             |","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"| **Update**                  | `update INDEX [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`\u003cbr\u003e e.g.,`update 2 p/91234567 e/jameslee@example.com`                                                                    |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"| **Find (Or)**               | `findany KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findany James Jake`                                                                                                     |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"| **Find (And)**              | `findall KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findall James Jake`                                                                                                   |","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"| **Priority**                | `priority INDEX [MORE_INDEX]`\u003cbr\u003e e.g.,`priority 1 2 3`  ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"FooNicholas"},"content":"| **Sort**                    | `sort` ","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"| **Sort Priority**           | `sortpriority` ","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"| **List**                    | `list`                                                                                                                                                                         |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"| **Help**                    | `help`                                                                                                                                                                         |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false}],"authorContributionMap":{"curiousfun88":38,"J4Joshua":2,"FooNicholas":16,"Sean-G-Han":75,"-":362}},{"path":"docs/diagrams/AddClientSequenceDiagram-Client.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"!include style.puml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"participant \"p:AddClientCommand\" as AddClientCommand LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"end box","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"end box","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"[-\u003e AddClientCommand : execute(name, phone number, email, address)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"activate AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"AddClientCommand -\u003e Model  : hasClient(Client)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"activate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"Model --\u003e AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"deactivate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"AddClientCommand -\u003e Model : addClient(Client)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"activate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"Model --\u003e AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"deactivate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"AddClientCommand -\u003e Model : updateFilteredClientList","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"activate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"Model --\u003e AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"deactivate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"[\u003c--AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"deactivate AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"curiousfun88":33}},{"path":"docs/diagrams/AddClientSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"!include style.puml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"participant \":AddClientCommandParser\" as AddClientCommandParser LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"participant \"d:AddClientCommand\" as AddClientCommand LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"end box","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"end box","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"[-\u003e LogicManager : execute(\"addc n/John p/91234567 e/hello@example.com a/123 Lane\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"activate LogicManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addc n/John p/91234567 e/hello@example.com a/123 Lane\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"activate AddressBookParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"create AddClientCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"AddressBookParser -\u003e AddClientCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"activate AddClientCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"AddClientCommandParser --\u003e AddressBookParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"deactivate AddClientCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"AddressBookParser -\u003e AddClientCommandParser : parse(\" n/John p/91234567 e/hello@example.com a/123 Lane\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"activate AddClientCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"create AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"AddClientCommandParser -\u003e AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"activate AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"AddClientCommand --\u003e AddClientCommandParser :","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"deactivate AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"AddClientCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"deactivate AddClientCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"LogicManager -\u003e AddClientCommand : execute(m)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"activate AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"AddClientCommand -\u003e Model : addClient(Client)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"activate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"Model --\u003e AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"deactivate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"create CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"AddClientCommand -\u003e CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"activate CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"CommandResult --\u003e AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"deactivate CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"AddClientCommand --\u003e LogicManager : r","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"deactivate AddClientCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"deactivate LogicManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"curiousfun88":67}},{"path":"docs/diagrams/AddPolicySequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"curiousfun88"},"content":"@startuml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"curiousfun88"},"content":"!include style.puml","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"curiousfun88"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"curiousfun88"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"curiousfun88"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"curiousfun88"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"curiousfun88"},"content":"participant \":AddPolicyCommandParser\" as AddPolicyCommandParser LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"curiousfun88"},"content":"participant \"d:AddPolicyCommand\" as AddPolicyCommand LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"curiousfun88"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"curiousfun88"},"content":"end box","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"curiousfun88"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"curiousfun88"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"curiousfun88"},"content":"end box","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"curiousfun88"},"content":"[-\u003e LogicManager : execute()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"curiousfun88"},"content":"activate LogicManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"curiousfun88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"curiousfun88"},"content":"activate AddressBookParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"curiousfun88"},"content":"create AddPolicyCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"curiousfun88"},"content":"AddressBookParser -\u003e AddPolicyCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"curiousfun88"},"content":"activate AddPolicyCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommandParser --\u003e AddressBookParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"curiousfun88"},"content":"deactivate AddPolicyCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"curiousfun88"},"content":"AddressBookParser -\u003e AddPolicyCommandParser : parse()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"curiousfun88"},"content":"activate AddPolicyCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"curiousfun88"},"content":"create AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommandParser -\u003e AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"curiousfun88"},"content":"activate AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommand --\u003e AddPolicyCommandParser :","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"curiousfun88"},"content":"deactivate AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"curiousfun88"},"content":"deactivate AddPolicyCommandParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"curiousfun88"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"curiousfun88"},"content":"deactivate AddressBookParser","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"curiousfun88"},"content":"LogicManager -\u003e AddPolicyCommand : execute(m)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"curiousfun88"},"content":"activate AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommand -\u003e Model : getFilteredClientList()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"curiousfun88"},"content":"activate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"curiousfun88"},"content":"Model --\u003e AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"curiousfun88"},"content":"deactivate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommand -\u003e Model : setClient()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"curiousfun88"},"content":"activate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"curiousfun88"},"content":"Model --\u003e AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"curiousfun88"},"content":"deactivate Model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"curiousfun88"},"content":"create CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommand -\u003e CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"curiousfun88"},"content":"activate CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"curiousfun88"},"content":"CommandResult --\u003e AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"curiousfun88"},"content":"deactivate CommandResult","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"curiousfun88"},"content":"AddPolicyCommand --\u003e LogicManager : r","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"curiousfun88"},"content":"deactivate AddPolicyCommand","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"curiousfun88"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"curiousfun88"},"content":"[\u003c--LogicManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"curiousfun88"},"content":"deactivate LogicManager","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"curiousfun88"},"content":"@enduml","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"curiousfun88":71}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueClientList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniqueClientList","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Sean-G-Han"},"content":"UniqueTagList -right-\u003e \"*..1\" PriorityTag","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"PriorityTag --|\u003e Tag","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniqueClientList -right-\u003e Client","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Client -up-\u003e \"*\" Tag","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Client *--\u003e Name","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Client *--\u003e Phone","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Client *--\u003e Email","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"Client *--\u003e Address","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"Sean-G-Han":1,"-":22}},{"path":"docs/diagrams/DeleteClientMultSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"FooNicholas"},"content":"@startuml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"FooNicholas"},"content":"!include style.puml","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"FooNicholas"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"FooNicholas"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FooNicholas"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"FooNicholas"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FooNicholas"},"content":"participant \"d:DeleteClientMultCommand\" as DeleteClientMultCommand LOGIC_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"FooNicholas"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"FooNicholas"},"content":"end box","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"FooNicholas"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"FooNicholas"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"FooNicholas"},"content":"participant \"a:AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FooNicholas"},"content":"participant \"c:Client\" as Client MODEL_COLOR","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FooNicholas"},"content":"end box","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FooNicholas"},"content":"[-\u003e LogicManager : execute(\"deleteclientmult i/1 i/2 i/3\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FooNicholas"},"content":"activate LogicManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"FooNicholas"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"deleteclientmult i/1 i/2 i/3\")","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"FooNicholas"},"content":"activate AddressBookParser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FooNicholas"},"content":"create DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FooNicholas"},"content":"AddressBookParser -\u003e DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FooNicholas"},"content":"activate DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FooNicholas"},"content":"AddressBookParser \u003c-- DeleteClientMultCommand : d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FooNicholas"},"content":"deactivate DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FooNicholas"},"content":"LogicManager \u003c-- AddressBookParser : d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FooNicholas"},"content":"deactivate AddressBookParser","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FooNicholas"},"content":"LogicManager -\u003e DeleteClientMultCommand : execute()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FooNicholas"},"content":"activate DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"FooNicholas"},"content":"DeleteClientMultCommand -\u003e Model : getFilteredClientList()","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FooNicholas"},"content":"activate Model","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FooNicholas"},"content":"Model --\u003e DeleteClientMultCommand : lastShownList","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FooNicholas"},"content":"deactivate Model","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FooNicholas"},"content":"loop for each index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FooNicholas"},"content":"    DeleteClientMultCommand -\u003e DeleteClientMultCommand : validate index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FooNicholas"},"content":"    DeleteClientMultCommand -\u003e Model : deleteClient(client)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FooNicholas"},"content":"    activate Model","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FooNicholas"},"content":"    Model -\u003e AddressBook : removeClient(client)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FooNicholas"},"content":"    activate AddressBook","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FooNicholas"},"content":"    AddressBook --\u003e Model","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FooNicholas"},"content":"    deactivate AddressBook","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FooNicholas"},"content":"    Model --\u003e DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FooNicholas"},"content":"    deactivate Model","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"FooNicholas"},"content":"end","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FooNicholas"},"content":"create CommandResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"FooNicholas"},"content":"DeleteClientMultCommand -\u003e CommandResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"FooNicholas"},"content":"activate CommandResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"FooNicholas"},"content":"CommandResult --\u003e DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"FooNicholas"},"content":"deactivate CommandResult","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"FooNicholas"},"content":"DeleteClientMultCommand --\u003e LogicManager : r","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"FooNicholas"},"content":"deactivate DeleteClientMultCommand","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"FooNicholas"},"content":"[\u003c--LogicManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"FooNicholas"},"content":"deactivate LogicManager","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"FooNicholas"},"content":"@enduml","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"FooNicholas":66}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniqueClientList","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Client","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Sean-G-Han"},"content":"Class PriorityTag","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniqueClientList","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniqueClientList --\u003e \"~* all\" Client","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"Client *--\u003e Name","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"Client *--\u003e Phone","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"Client *--\u003e Email","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"Client *--\u003e Address","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"Client *--\u003e \"*\" Tag","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Sean-G-Han"},"content":"Client *--\u003e \"*..1\" PriorityTag","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Sean-G-Han"},"content":"Tag -left-|\u003e PriorityTag","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"Client -[hidden]up--\u003e I","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniqueClientList -[hidden]right-\u003e I","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Client","lastModifiedDate":"2025-03-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"Sean-G-Han":3,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/DeleteClientMultCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FooNicholas"},"content":" * Deletes multiple clients identified using their displayed index from the address book.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteClientMultCommand extends Command {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"deleteclientmult\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FooNicholas"},"content":"            + \": Deletes multiple clients identified by their index numbers used in the displayed client list.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FooNicholas"},"content":"            + \"Parameters: i/INDEX i/INDEX [i/INDEX]... (must be at least 2 unique positive indices)\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/1 i/2 i/3\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Clients: %1$s\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FooNicholas"},"content":"    public static final String MESSAGE_MINIMUM_INDICES \u003d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"FooNicholas"},"content":"            \"DeleteClientMultCommand requires at least 2 indices to delete.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"FooNicholas"},"content":"    public static final String MESSAGE_DUPLICATE_INDICES \u003d \"Duplicate indices are not allowed.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"FooNicholas"},"content":"    public static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FooNicholas"},"content":"            \"Invalid command format! Each index must be prefixed with \u0027i/\u0027 and must be a positive integer.\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cIndex\u003e targetIndices;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public DeleteClientMultCommand(List\u003cIndex\u003e targetIndices) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.targetIndices \u003d targetIndices;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cClient\u003e deletedClients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Check if all indices are valid","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Index index : targetIndices) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Delete clients in reverse order to maintain correct indices","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (int i \u003d targetIndices.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            Index index \u003d targetIndices.get(i);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Client clientToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            model.deleteClient(clientToDelete);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            deletedClients.add(0, clientToDelete); // Add to beginning to maintain order","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Format the success message with all deleted clients","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StringBuilder deletedClientsMessage \u003d new StringBuilder();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c deletedClients.size(); i++) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            deletedClientsMessage.append(Messages.format(deletedClients.get(i)));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (i \u003c deletedClients.size() - 1) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                deletedClientsMessage.append(\", \");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, deletedClientsMessage.toString()));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteClientMultCommand)) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteClientMultCommand otherDeleteCommand \u003d (DeleteClientMultCommand) other;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return targetIndices.equals(otherDeleteCommand.targetIndices);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"targetIndices\", targetIndices)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"FooNicholas":8,"-":85}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all clients in the address book to the user.","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The list of clients has been successfully generated\";","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FooNicholas"},"content":"    public static final String MESSAGE_EMPTY \u003d \"WealthVault is empty. No clients to display.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FooNicholas"},"content":"            + \"To add a new client, use the addc command with the following format:\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FooNicholas"},"content":"            + \"addc n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/POLICY_TAG]...\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"FooNicholas"},"content":"            + \"Example: addc n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FooNicholas"},"content":"        if (model.getFilteredClientList().isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"FooNicholas"},"content":"            return new CommandResult(MESSAGE_EMPTY);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FooNicholas"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"FooNicholas":7,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Sorts all clients on the GUI in case-insensitive alphabetical order for the user.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \": Sorts all clients in WealthVault by case-insensitive alphabetical order.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SORTED_SUCCESS \u003d \"Clients sorted in alphabetical order.\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"FooNicholas"},"content":"    public static final String MESSAGE_EMPTY \u003d \"WealthVault is empty. No clients to sort.\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"FooNicholas"},"content":"            + \"To add a new client, use the addc command with the following format:\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"FooNicholas"},"content":"            + \"addc n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/POLICY_TAG]...\\n\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"FooNicholas"},"content":"            + \"Example: addc n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"FooNicholas"},"content":"        if (model.getFilteredClientList().isEmpty()) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"FooNicholas"},"content":"            return new CommandResult(MESSAGE_EMPTY);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"FooNicholas"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model.sortClients();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SORTED_SUCCESS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"FooNicholas":7,"-":22}},{"path":"src/main/java/seedu/address/logic/parser/DeleteClientMultCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"FooNicholas"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"FooNicholas"},"content":"import java.util.Set;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteClientMultCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteClientMultCommand object","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteClientMultCommandParser implements Parser\u003cDeleteClientMultCommand\u003e {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteClientMultCommand","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteClientMultCommand object for execution.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public DeleteClientMultCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FooNicholas"},"content":"            throw new ParseException(String.format(\"Missing index parameters.\" + MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FooNicholas"},"content":"                    DeleteClientMultCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] indexStrings \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cIndex\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"FooNicholas"},"content":"        Set\u003cInteger\u003e uniqueIndices \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        for (String indexString : indexStrings) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            if (!indexString.startsWith(\"i/\")) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FooNicholas"},"content":"                throw new ParseException(DeleteClientMultCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                Index index \u003d ParserUtil.parseIndex(indexString.substring(2));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FooNicholas"},"content":"                int oneBasedIndex \u003d index.getOneBased();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FooNicholas"},"content":"                if (!uniqueIndices.add(oneBasedIndex)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FooNicholas"},"content":"                    throw new ParseException(DeleteClientMultCommand.MESSAGE_DUPLICATE_INDICES);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FooNicholas"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                indices.add(index);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FooNicholas"},"content":"                if (pe.getMessage().equals(DeleteClientMultCommand.MESSAGE_DUPLICATE_INDICES)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FooNicholas"},"content":"                    throw pe;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FooNicholas"},"content":"                }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"FooNicholas"},"content":"                throw new ParseException(DeleteClientMultCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"FooNicholas"},"content":"        if (indices.size() \u003c 2) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FooNicholas"},"content":"            throw new ParseException(DeleteClientMultCommand.MESSAGE_MINIMUM_INDICES);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new DeleteClientMultCommand(indices);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"FooNicholas":16,"-":43}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalClients.AMY;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddClientCommand;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteClientCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ClientBuilder;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteClientCommand \u003d \"delc 9\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteClientCommand,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"FooNicholas"},"content":"        // Add a client to the model first","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"FooNicholas"},"content":"        Client clientToAdd \u003d new ClientBuilder().build();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"FooNicholas"},"content":"        model.addClient(clientToAdd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"FooNicholas"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"FooNicholas"},"content":"        expectedModel.addClient(clientToAdd);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"FooNicholas"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"FooNicholas"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"FooNicholas"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"FooNicholas"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"FooNicholas"},"content":"    public void execute_listCommandWithEmptyList_showsEmptyMessage() throws Exception {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"FooNicholas"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_EMPTY, model);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddClientCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"FooNicholas":13,"-":179}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLIENT;","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showClientAtIndex(model, INDEX_FIRST_CLIENT);","lastModifiedDate":"2025-03-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FooNicholas"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FooNicholas"},"content":"    public void execute_emptyList_showsEmptyMessage() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FooNicholas"},"content":"        Model emptyModel \u003d new ModelManager();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FooNicholas"},"content":"        Model expectedEmptyModel \u003d new ModelManager();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FooNicholas"},"content":"        assertCommandSuccess(new ListCommand(), emptyModel, ListCommand.MESSAGE_EMPTY, expectedEmptyModel);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FooNicholas"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"FooNicholas":7,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalClients.getTypicalAddressBook;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for SortCommand.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SortCommandTest {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private SortCommand sortCommand;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        sortCommand \u003d new SortCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Tests the execution of the SortCommand with all clients.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_sort_allClients() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.sortClients();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(sortCommand, model, SortCommand.MESSAGE_SORTED_SUCCESS, expectedModel);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FooNicholas"},"content":"    /**","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"FooNicholas"},"content":"     * Tests the execution of the SortCommand with an empty list.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FooNicholas"},"content":"     */","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FooNicholas"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"FooNicholas"},"content":"    public void execute_sort_emptyList() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FooNicholas"},"content":"        Model emptyModel \u003d new ModelManager();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FooNicholas"},"content":"        assertCommandSuccess(sortCommand, emptyModel, SortCommand.MESSAGE_EMPTY, emptyModel);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"FooNicholas"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FooNicholas"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-27","isFullCredit":false}],"authorContributionMap":{"FooNicholas":9,"-":39}},{"path":"src/test/java/seedu/address/logic/parser/DeleteClientMultCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteClientMultCommand;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * outside of the DeleteClientMultCommand code. For example, inputs \"i/1\" and \"i/1 abc\" take the","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * same path through the DeleteClientMultCommand, and therefore we test only one of them.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteClientMultCommandParserTest {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private DeleteClientMultCommandParser parser \u003d new DeleteClientMultCommandParser();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteClientMultCommand() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"FooNicholas"},"content":"        List\u003cIndex\u003e indices \u003d List.of(Index.fromOneBased(1), Index.fromOneBased(2));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"FooNicholas"},"content":"        assertParseSuccess(parser, \"i/1 i/2\", new DeleteClientMultCommand(indices));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"FooNicholas"},"content":"        // Empty input","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"FooNicholas"},"content":"        assertParseFailure(parser, \"\", String.format(\"Missing index parameters.\"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"FooNicholas"},"content":"                        + MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"FooNicholas"},"content":"                DeleteClientMultCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"FooNicholas"},"content":"        // Single index","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"FooNicholas"},"content":"        assertParseFailure(parser, \"i/1\", DeleteClientMultCommand.MESSAGE_MINIMUM_INDICES);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"FooNicholas"},"content":"        // Duplicate indices","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"FooNicholas"},"content":"        assertParseFailure(parser, \"i/1 i/1\", DeleteClientMultCommand.MESSAGE_DUPLICATE_INDICES);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"FooNicholas"},"content":"        // Duplicate indices mixed with valid","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"FooNicholas"},"content":"        assertParseFailure(parser, \"i/1 i/2 i/1\", DeleteClientMultCommand.MESSAGE_DUPLICATE_INDICES);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"FooNicholas"},"content":"        // Invalid index format","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"FooNicholas"},"content":"        assertParseFailure(parser, \"1 2\", DeleteClientMultCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"FooNicholas"},"content":"        // Invalid index value","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"FooNicholas"},"content":"        assertParseFailure(parser, \"i/a i/2\", DeleteClientMultCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Zero index","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"FooNicholas"},"content":"        assertParseFailure(parser, \"i/0 i/1\", DeleteClientMultCommand.MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-03","isFullCredit":false}],"authorContributionMap":{"FooNicholas":17,"-":39}}]
