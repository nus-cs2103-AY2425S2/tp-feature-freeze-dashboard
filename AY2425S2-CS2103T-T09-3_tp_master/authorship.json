[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2425S2-CS2103T-T09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2425S2-CS2103T-T09-3/tp/actions)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"geeliette"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2025-04-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"* The project simulates a restaurant management software used for managing reservations details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"* It is named `GastroBook` (`GB` for short).","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"geeliette":1,"-":8}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"caroline1233456"},"content":"title: GastroBook Developer Guide","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"- [Design](#design)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    - [Architecture](#architecture)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    - [UI component](#ui-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    - [Logic component](#logic-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    - [Model component](#model-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    - [Storage component](#storage-component)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    - [Common classes](#common-classes)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"- [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"caroline1233456"},"content":"* This project was adapted from [AB3](https://se-education.org/addressbook-level3/) (source code are provide [here](https://github.com/nus-cs2103-AY2425S2/tp))","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"* ChatGPT 4.0","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"CVincent0907"},"content":"* [EPOS Systems](https://www.epos.com.sg/?srsltid\u003dAfmBOoqk46mgTm5Jm2iB55V9SJaIpyZVAWl805JZ42O38A6vZdHRIkqq)","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/MainApp.java) is in charge of the app launch and shut down.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"caroline1233456"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 0101202554321800`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"caroline1233456"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram1.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ReservationListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"caroline1233456"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 0604202598761700\")` API call as an example.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"caroline1233456"},"content":"![Interactions Inside the Logic Component for the `delete 0604202598761700` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `GastroBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses1.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `GastroBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `GastroBookParser` returns back as a `Command` object.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"Below is the diagram that shows the high level design of `Model` component.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram1.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores the GastroBook data i.e., all `Reservation` objects (which are contained in a `UniqueReservationList` object).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores the customer data. i.e., all `Person` objects (which are contained in a `PersonsList` object).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores a `PersonsListManager` object. It manages operations related to `PersonsList` object that involve coordination with `Reservation` objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Reservation` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cReservation\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.(not shown in the diagram as it is lower level details)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user\u0027s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":":information_source: **Note:** A more detailed extension for `GastroBook` and `PersonList` UML diagram in `Model` component is given below. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram1.png\" width\u003d\"600\" /\u003e \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CVincent0907"},"content":"\u003cimg src\u003d\"images/PersonListClassDiagram1.png\" width\u003d\"200\" /\u003e \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"The `PersonsList` class and related components manage customers who have made reservations, tracking their booking frequency and regular customer status.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"CVincent0907"},"content":":information_source: **Note:** An interaction between `PersonsList` and `PersonsListManager` in `Model` component is given as sequence diagram below.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/PersonListSequenceDiagram.png\" width\u003d\"900\" /\u003e \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"This sequence diagram illustrates three key operations: \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"1. **Recording a new booking** - handling reservation edits and updating person records \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"2. **Checking regular status** - identifying customers who have reached regular status \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"3. **Deleting a reservation** - updating customer records when a reservation is canceled \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"**Key Features:** \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"- Regular customer tracking based on booking frequency \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"- Persistence through JSON file storage \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"- Coordination with the reservation system for consistent data \u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/AY2425S2-CS2103T-T09-3/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram1.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"caroline1233456"},"content":"* can save both Gastro book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"* inherits from both `GatroBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"* storage of `PersonsList` files and data are implemented under `Model`.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2024-07-17","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"[//]: # (## **Implementation**)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"[//]: # (This section describes some noteworthy details on how certain features are implemented.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"[//]: # (### \\[Proposed\\] Undo/redo feature)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"[//]: # (#### Proposed Implementation)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"[//]: # (The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"[//]: # (* `VersionedAddressBook#commit\u0026#40;\u0026#41;` — Saves the current address book state in its history.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"[//]: # (* `VersionedAddressBook#undo\u0026#40;\u0026#41;` — Restores the previous address book state from its history.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"[//]: # (* `VersionedAddressBook#redo\u0026#40;\u0026#41;` — Restores a previously undone address book state from its history.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"[//]: # (These operations are exposed in the `Model` interface as `Model#commitAddressBook\u0026#40;\u0026#41;`, `Model#undoAddressBook\u0026#40;\u0026#41;` and `Model#redoAddressBook\u0026#40;\u0026#41;` respectively.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"[//]: # (Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"[//]: # (Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"[//]: # (![UndoRedoState0]\u0026#40;images/UndoRedoState0.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"[//]: # (Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook\u0026#40;\u0026#41;`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"[//]: # (![UndoRedoState1]\u0026#40;images/UndoRedoState1.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"[//]: # (Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook\u0026#40;\u0026#41;`, causing another modified address book state to be saved into the `addressBookStateList`.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"[//]: # (![UndoRedoState2]\u0026#40;images/UndoRedoState2.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"[//]: # (\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook\u0026#40;\u0026#41;`, so the address book state will not be saved into the `addressBookStateList`.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"[//]: # (\u003c/div\u003e)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"[//]: # (Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook\u0026#40;\u0026#41;`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"[//]: # (![UndoRedoState3]\u0026#40;images/UndoRedoState3.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"[//]: # (\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook\u0026#40;\u0026#41;` to check if this is the case. If so, it will return an error to the user rather)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"[//]: # (than attempting to perform the undo.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"[//]: # (\u003c/div\u003e)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"[//]: # (The following sequence diagram shows how an undo operation goes through the `Logic` component:)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"[//]: # (![UndoSequenceDiagram]\u0026#40;images/UndoSequenceDiagram-Logic.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"[//]: # (\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker \u0026#40;X\u0026#41; but due to a limitation of PlantUML, the lifeline reaches the end of diagram.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"[//]: # (\u003c/div\u003e)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"[//]: # (Similarly, how an undo operation goes through the `Model` component is shown below:)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"[//]: # (![UndoSequenceDiagram]\u0026#40;images/UndoSequenceDiagram-Model.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"[//]: # (The `redo` command does the opposite — it calls `Model#redoAddressBook\u0026#40;\u0026#41;`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"[//]: # (\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size\u0026#40;\u0026#41; - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook\u0026#40;\u0026#41;` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"[//]: # (\u003c/div\u003e)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"[//]: # (Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook\u0026#40;\u0026#41;`, `Model#undoAddressBook\u0026#40;\u0026#41;` or `Model#redoAddressBook\u0026#40;\u0026#41;`. Thus, the `addressBookStateList` remains unchanged.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"[//]: # (![UndoRedoState4]\u0026#40;images/UndoRedoState4.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"[//]: # (Step 6. The user executes `clear`, which calls `Model#commitAddressBook\u0026#40;\u0026#41;`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"[//]: # (![UndoRedoState5]\u0026#40;images/UndoRedoState5.png\u0026#41;)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"[//]: # (The following activity diagram summarizes what happens when a user executes a new command:)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"[//]: # (\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"[//]: # (#### Design considerations:)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"[//]: # (**Aspect: How undo \u0026 redo executes:**)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"[//]: # (* **Alternative 1 \u0026#40;current choice\u0026#41;:** Saves the entire address book.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"[//]: # (  * Pros: Easy to implement.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"[//]: # (  * Cons: May have performance issues in terms of memory usage.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"[//]: # (* **Alternative 2:** Individual command knows how to undo/redo by)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"[//]: # (  itself.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"[//]: # (  * Pros: Will use less memory \u0026#40;e.g. for `delete`, just save the person being deleted\u0026#41;.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"[//]: # (  * Cons: We must ensure that the implementation of each individual command are correct.)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"[//]: # (_{more aspects and alternatives to be added}_)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"-"},"content":"[//]: # (### \\[Proposed\\] Data archiving)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"[//]: # ()","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"[//]: # (_{Explain here how the data archiving feature will be implemented}_)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"### **Target User Profile**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"* **Type**: F\u0026B/restaurant managers and staff","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"* **Proficiency**: Comfortable using Command-Line Interface (CLI) apps","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"-"},"content":"* **Needs**:","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"-"},"content":"    * Ability to manage a large number of reservations","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"-"},"content":"    * Speed and efficiency with typing, prefers keyboard over mouse","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"-"},"content":"    * Streamlined reservation management to ensure smooth operations","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"-"},"content":"* **Environment**: Works in a fast-paced restaurant environment where reservations and customer service are key","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"-"},"content":"### **Value Proposition**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"-"},"content":"GastroBook streamlines and collates restaurant reservations, allowing managers to efficiently manage customer bookings, track reservation details, and handle special requests through a fast, command-line interface. The application improves reservation workflow, enhances operational efficiency, and allows for better resource planning.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"-"},"content":"| **Priority** | **As a …​** | **I want to …​**                            | **So that I can…​**                                                           |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"-"},"content":"|--------------|-------------|---------------------------------------------|-------------------------------------------------------------------------------|","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"-"},"content":"| `***`        | Admin       | Add reservations                            | Add bookings to the schedule for planning                                     |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"-"},"content":"| `***`        | Admin       | Delete reservations                         | Cancel a reservation when no longer needed                                    |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"-"},"content":"| `***`        | Admin       | Mark a reservation as paid                  | Keep track of each reservation’s payment status                               |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"-"},"content":"| `***`        | Admin       | Unmark a reservation as paid                | Update status if payment is deleted or an error occurred                      |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"-"},"content":"| `***`        | Admin       | Exit the application                        | Close the app after use                                                       |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"-"},"content":"| `***`        | Admin       | Edit reservation details                    | Update booking details (e.g., name, duration) without deleting and recreating |","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"-"},"content":"| `***`        | Admin       | View all reservations of tomorrow           | Prepare the ingredients for tomorrow reservation in advance                   |","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"-"},"content":"| `***`        | Admin       | View all reservations of today              | Access the daily reservation schedule for planning resources                  |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"-"},"content":"| `***`        | Admin       | View all reservations of today and tomorrow | Be always ready and prepare to welcome incoming guest                         |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"-"},"content":"| `**`         | Admin       | View all past reservations                  | Track reservations for business insights                                      |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"-"},"content":"| `**`         | Admin       | View reservations by regulars               | Better prepare for reservations made by regulars                              |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"-"},"content":"| `***`        | Admin       | See user manual                             | Learn the new app effectively                                                 |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"-"},"content":"| `**`         | Admin       | Find specific reservations                  | Locate specific reservations by name, phone number or time                    |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"-"},"content":"| `**`         | Admin       | Tag reservations with special requests      | Easily track special requests per reservation                                 |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"| `**`         | Admin       | Remark reservations                         | Further customise and tailor each reservation to customer needs               |","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"| `**`         | Admin       | Clear all reservations                      | Reset the schedule for a new reservation plan                                 |","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"-"},"content":"For all use cases below: \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"-"},"content":"**System**: `GastroBook` \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"-"},"content":"**Actor**: `admin` \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"-"},"content":"unless specified otherwise","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"### **U1: Add a reservation**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"**MSS** (Main Success Scenario)","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"CVincent0907"},"content":"1. User inputs reservation details.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"caroline1233456"},"content":"2. System adds the reservation to the schedule.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"caroline1233456"},"content":"3. System displays a successful reservation message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"CVincent0907"},"content":"1a. User input invalid parameters or invalid command.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"CVincent0907"},"content":"2a. The reservation exists in the system.\u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; 2a1. System indicates that the reservation already exists in the GastroBook. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"### **U2: Delete a reservation**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"CVincent0907"},"content":"1. User inputs the valid reservation ID they want to cancel.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"caroline1233456"},"content":"2. System removes the reservation from the schedule.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"caroline1233456"},"content":"3. System displays a successful cancellation message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"CVincent0907"},"content":"1a. The user inputs invalid parameters or invalid command or invalid ID. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"caroline1233456"},"content":"2a. The reservation does not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; 2a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"-"},"content":"### **U3: Mark a reservation as paid**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"CVincent0907"},"content":"1. User inputs the valid reservation ID they want to mark as paid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"caroline1233456"},"content":"2. System updates the reservation\u0027s payment status as paid.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"caroline1233456"},"content":"3. System display a message indicating the reservation has been successfully marked","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"CVincent0907"},"content":"1a.The user inputs invalid parameters or invalid command or invalid ID. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1. \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"caroline1233456"},"content":"2a. The reservation does not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; 2a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1. \u003cbr\u003e","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"caroline1233456"},"content":"2b. The reservation has already been marked as paid. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; 2b1. System indicates that reservation has already been marked as paid. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"caroline1233456"},"content":"### **U4: Mark a reservation as unpaid (Unmark)**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"CVincent0907"},"content":"1. User inputs the valid reservation ID they want to mark as unpaid.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"caroline1233456"},"content":"2. System updates the reservation\u0027s payment status as unpaid.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"caroline1233456"},"content":"3. System display a message indicating the reservation has been successfully unmarked.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"CVincent0907"},"content":"1a. The user inputs invalid parameters or invalid command or invalid ID. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"caroline1233456"},"content":"2a. The reservation does not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; 2a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"caroline1233456"},"content":"2b. The reservation has already been marked as unpaid. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; 2b1. System indicates that reservation has already been marked as unpaid. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"-"},"content":"### **U5: Exit the application**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"-"},"content":"1. User inputs exit command.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"2. System saves all changes into storage.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"-"},"content":"3. System exits.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"-"},"content":"### **U6: Find a reservation by name**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"-"},"content":"1. User finds the reservation by name.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"-"},"content":"2. System displays all reservations that are made under the queried name.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"CVincent0907"},"content":"1a. The user inputs invalid command. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"2a. The name does not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u0026ensp; 2a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"-"},"content":"### **U7: Find a reservation by phone**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"CVincent0907"},"content":"1. User finds the reservation by valid phone.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"-"},"content":"2. System displays all reservations that are made under the queried phone number.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"CVincent0907"},"content":"1a. The user inputs invalid parameters or invalid command. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"2a. The user enters a phone number that does not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u0026ensp; 2a1. System displays no matching reservations message. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":532,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":533,"author":{"gitId":"-"},"content":"### **U8: Find a reservation by time**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":535,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":536,"author":{"gitId":"CVincent0907"},"content":"1. User finds the reservation by valid time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":537,"author":{"gitId":"-"},"content":"2. System displays all reservations that are ongoing at specified time.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":539,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":541,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":542,"author":{"gitId":"CVincent0907"},"content":"1a. The user inputs invalid parameters or invalid command. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":543,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":544,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":546,"author":{"gitId":"-"},"content":"2a. The user enters a time with no ongoing reservations. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":547,"author":{"gitId":"-"},"content":"\u0026ensp; 2a1. System displays no matching reservations message. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":548,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":550,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":551,"author":{"gitId":"-"},"content":"### **U9: List all reservations for the day**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":553,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":554,"author":{"gitId":"-"},"content":"1. User queries to list all reservations for the day","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":555,"author":{"gitId":"-"},"content":"2. System displays all reservations that are made on the system date.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":557,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":559,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":560,"author":{"gitId":"CVincent0907"},"content":"1a. The user inputs invalid parameters or invalid command. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":561,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":562,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":564,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":565,"author":{"gitId":"-"},"content":"### **U10: Edit specific reservations**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":567,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":568,"author":{"gitId":"CVincent0907"},"content":"1. User inputs the valid reservation ID they want to edit and its parameters.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":569,"author":{"gitId":"caroline1233456"},"content":"2. System edit the reservation.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":570,"author":{"gitId":"caroline1233456"},"content":"3. System displays all reservations for today and tomorrow with a reservation edited message.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":572,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-05","isFullCredit":false},{"lineNumber":574,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":575,"author":{"gitId":"CVincent0907"},"content":"1a. Reservation is not for today or tomorrow or it does not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":576,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays reservation not found message. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":577,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":579,"author":{"gitId":"CVincent0907"},"content":"1b. The user inputs invalid parameters or invalid command or invalid ID. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":580,"author":{"gitId":"-"},"content":"\u0026ensp; 1b1. System displays an invalid command message and provides an example of correct edit usage. \u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":581,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":583,"author":{"gitId":"caroline1233456"},"content":"1c. User doesn\u0027t provide at least one field to edit. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":584,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; 1c1. System displays error message. \u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":585,"author":{"gitId":"caroline1233456"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":586,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":587,"author":{"gitId":"CVincent0907"},"content":"2a. User edits the phone number, time or date of the reservation. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":588,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; 2a1. System validates that ID does not exist in the system. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":589,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; \u0026ensp; 2a1a. System generates new reservation ID for reservation. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":590,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; \u0026ensp; Use case resumes at step 3. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":591,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; 2a2. System recognizes that ID exists in the system. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":592,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; \u0026ensp; 2a2a. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":593,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; \u0026ensp; Use case resumes at step 1. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":594,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":595,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":596,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":597,"author":{"gitId":"-"},"content":"### **U11: Add remark to a reservation**","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":599,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":600,"author":{"gitId":"CVincent0907"},"content":"1. User queries to remark the reservation.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":601,"author":{"gitId":"-"},"content":"2. System updates or adds the remark to the reservation.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":603,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":605,"author":{"gitId":"-"},"content":"**Extensions** \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":606,"author":{"gitId":"CVincent0907"},"content":"1a. The user inputs invalid command or invalid parameter. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":607,"author":{"gitId":"-"},"content":"\u0026ensp; 1a1. System displays an error message. \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":608,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":610,"author":{"gitId":"CVincent0907"},"content":"2a. The reservation does not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":611,"author":{"gitId":"CVincent0907"},"content":"\u0026ensp; 2a1. System displays reservation not exist. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":612,"author":{"gitId":"-"},"content":"\u0026ensp; Use case resumes at step 1.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":614,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":616,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":618,"author":{"gitId":"-"},"content":"1. **Platform Compatibility**: The application must run on any mainstream OS (Windows, Linux, macOS) with Java 17 or above.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":619,"author":{"gitId":"-"},"content":"2. **Performance**: The system should handle up to 1000 reservations without noticeable performance degradation during typical usage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":620,"author":{"gitId":"-"},"content":"3. **Usability**: A user with above-average typing speed for regular English text should be able to accomplish key tasks faster using the command-line interface than a GUI-based app.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":621,"author":{"gitId":"-"},"content":"4. **Response Time**: The system should respond to commands within 1 second for typical tasks such as adding, editing, or deleting reservations.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":622,"author":{"gitId":"-"},"content":"5. **Storage**: The system storage should be able to store and maintain at least 100 reservations with all necessary details.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":623,"author":{"gitId":"-"},"content":"6. **Storage Access**: The system should be able to retrieve data with the given storage requirements in under 1 second.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":624,"author":{"gitId":"-"},"content":"7. **User Access**: The system should be able to run locally with no more than 1 user with 1 database.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":625,"author":{"gitId":"-"},"content":"8. **Phone Number**: Last 4 digits of phone number of every customer input to the system must be of unique combination.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":626,"author":{"gitId":"CVincent0907"},"content":"9. **Customisation**: Threshold for a customer becoming a regular customer is hardcoded (3 reservations booked) and all fields are fixed.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":627,"author":{"gitId":"-"},"content":"10. **Clearing**: All customer details in persons list will preserve even after clear function.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":628,"author":{"gitId":"-"},"content":"11. **Duplicate Reservations**: Duplicate reservations are not allowed to be added into the database. Reservations are considered to be duplicates only if: \u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":629,"author":{"gitId":"-"},"content":"    \u0026ensp; - The last 4 digit of the phone numbers of both reservations are the same \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":630,"author":{"gitId":"-"},"content":"    \u0026ensp; - The booking date of both reservations are the same \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":631,"author":{"gitId":"-"},"content":"    \u0026ensp; - The booking time of both reservations are the same \u003cbr\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":632,"author":{"gitId":"-"},"content":"    \u0026ensp; The above situation is unlikely to happen(\u003c0.001%).","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":633,"author":{"gitId":"CVincent0907"},"content":"12. **Time**: The time of reservations is in 24 hr format and it is assigned to the reservation via user discretion. \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":634,"author":{"gitId":"CVincent0907"},"content":"    \u0026ensp; - No earliest or latest time limit placed (e.g. 0000 is also allowed) \u003cbr\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":635,"author":{"gitId":"-"},"content":"    \u0026ensp; - Reservations before current time are allowed (e.g. reservation at 1400 today can be made even if current time is 1600)","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":636,"author":{"gitId":"CVincent0907"},"content":"13. **Duration**: The duration of reservations must be \u003e 0 hr and \u003c\u003d 12hr and are in intervals of 30 minutes or 1 hour.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":637,"author":{"gitId":"CVincent0907"},"content":"14. **Pax**: Number of people per reservation is \u003e 0 and \u003c 10000.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":638,"author":{"gitId":"CVincent0907"},"content":"15. **Table Number**: Table number assigned to each reservation is subjected to user discretion with one uppercase English letter followed by 1-3 digits.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":640,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":642,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":643,"author":{"gitId":"-"},"content":"* **Reservation ID**: A unique identifier (e.g., 0204202598761300) assigned to each reservation.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":644,"author":{"gitId":"-"},"content":"* **CLI (Command-Line Interface)**: A text-based interface that allows users to interact with the system using typed commands.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":645,"author":{"gitId":"-"},"content":"* **Valid Command**: A command that the system recognizes and processes correctly.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":646,"author":{"gitId":"-"},"content":"* **Invalid Command**: A command that is unrecognized or improperly formatted by the system.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":647,"author":{"gitId":"CVincent0907"},"content":"* **Valid Parameter**: A prefix that is recognized by system followed by correctly-formatted arguments or solely correctly formatted arguments for `findt`,`findn` and `findp`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":648,"author":{"gitId":"CVincent0907"},"content":"* **Invalid Parameter**: An unrecognized prefix with correctly or incorrectly formatted arguments, or recognized prefix with incorrectly formatted arguments, or redundant arguments for `list`, `mark`, `unmark`, `delete`.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":649,"author":{"gitId":"-"},"content":"* **Valid ID**: The id for which edit, mark, unmark, delete, remark take as parameter which has a form of \"[dateOfTodayOrTomorrow(ddMMyyyy)] + [UNIQUE last4DigitsOfPhoneNumber(xxxx)] + [time(HHMM)]\".","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":650,"author":{"gitId":"CVincent0907"},"content":"* **Valid Phone Number**: A phone number that has at least 4 digits and at most 20 digits.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":651,"author":{"gitId":"CVincent0907"},"content":"* **Valid Time**: A 24 hr format time.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":652,"author":{"gitId":"CVincent0907"},"content":"* **Regular customer**: A customer will be classified as a Regular if their phone number has been used to successfully make at least three reservations. As long as the phone number is the same, the reservation count will be incremented regardless of other customer information.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":654,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":656,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":658,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":660,"author":{"gitId":"caroline1233456"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":661,"author":{"gitId":"caroline1233456"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":662,"author":{"gitId":"caroline1233456"},"content":"1. Testers should not modify the JSON file directly, as doing so may cause errors.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":664,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":666,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":668,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":670,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":672,"author":{"gitId":"-"},"content":"2. Saving window preferences","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":674,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":676,"author":{"gitId":"-"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":677,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":679,"author":{"gitId":"-"},"content":"### Deleting a reservation","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":681,"author":{"gitId":"-"},"content":"1. Deleting a reservation while all reservations are being shown","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":683,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all reservations of today or tomorrow using the `list` command. Multiple reservations in the list.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":685,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0101202512341100`\u003cbr\u003e","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":686,"author":{"gitId":"-"},"content":"      Expected: Reservation with ID 0101202512341100 is deleted from the list. Details of the deleted reservation shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":688,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":689,"author":{"gitId":"-"},"content":"      Expected: No reservation is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2025-04-04","isFullCredit":false},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":691,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":692,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":694,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":696,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":698,"author":{"gitId":"caroline1233456"},"content":"   1. if the data files are corrupted, users can delete the data files and the system will automatically generate new ones.","lastModifiedDate":"2025-04-08","isFullCredit":false},{"lineNumber":699,"author":{"gitId":"caroline1233456"},"content":"   2. The system will automatically generate data files when they are missing.","lastModifiedDate":"2025-04-08","isFullCredit":false}],"authorContributionMap":{"caroline1233456":40,"CVincent0907":44,"-":615}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: GastroBook User Guide","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Table of Contents","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"- [Input Field Table](#input-field-table)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"CVincent0907"},"content":"- [Design decision](#design-decision)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"- [Features](#features)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  - [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"  - [Adding a reservation: `add`](#adding-a-reservation-add)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"  - [Editing a reservation: `edit`](#editing-a-reservation-edit)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - [Deleting a reservation : `delete`](#deleting-a-reservation--delete)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  - [Marking a reservation as paid : `mark`](#marking-a-reservation-as-paid--mark)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"  - [Unmarking a reservation as paid : `unmark`](#unmarking-a-reservation-as-paid--unmark)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"  - [Remarking a reservation : `remark`](#remarking-a-reservation--remark)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"  - [Listing all reservations : `list`](#listing-all-reservations--list)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"  - [Listing today\u0027s reservations : `listrt`](#listing-todays-reservations--listrt)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"  - [Listing tomorrow\u0027s reservations : `listrn`](#listing-tomorrows-reservations--listrn)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  - [Listing all previous reservations : `listp`](#listing-all-previous-reservations--listp)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  - [Listing all reservations by regulars : `listr`](#listing-all-reservations-by-regulars--listr)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  - [Finding reservations by name: `findn`](#finding-reservations-by-name-findn)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  - [Finding reservations by phone number: `findp`](#finding-reservations-by-phone-number-findp)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  - [Finding reservations by time: `findt`](#finding-reservations-by-time-findt)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"  - [Clearing the reservations: `clear`](#clearing-the-reservations--clear)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"  - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"- [Saving the data](#saving-the-data)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"- [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"CVincent0907"},"content":"- [Constraints](#constraints)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"- [Reminder](#reminder)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"GastroBook is a **desktop application designed for small to medium scale restaurant reservation management, specifically tailored for less tech-savvy users who are proficient with the Command Line Interface (CLI). It allows for efficient call-in reservations for the current and next day, combining the simplicity of CLI usage with the advantages of a Graphical User Interface (GUI).**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"## **Quick start**","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"CVincent0907"},"content":"### 1. **Install Java (if you don’t have it already)**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"To use **GastroBook**, you’ll need **Java 17** installed on your computer. If you\u0027re not sure whether you have it yet, don’t worry — here’s how you can check and install it!","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"#### 1.1 **For Mac Users**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"CVincent0907"},"content":"- Follow this easy guide to install **Java 17** on your Mac:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"  [Java Installation Guide for Mac](https://se-education.org/guides/tutorials/javaInstallationMac.html)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"#### 1.2 **For Windows Users**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"- You can download and install **Java 17** from the official Oracle website:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"CVincent0907"},"content":"  [Download Java 17](https://www.oracle.com/java/technologies/downloads/#java17?er\u003d221886)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"- Just make sure to choose **Java 17** or a later version.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"CVincent0907"},"content":"#### 1.3 **Not Sure Which Version You Have?**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"CVincent0907"},"content":"- If you\u0027re unsure whether Java is already installed or which version you have, you can check it by opening your Command Prompt or Terminal and typing:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"CVincent0907"},"content":"  ```bash","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"  java -version","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"- If you see something like **`java version \"17.x.x\"`**, you\u0027re good to go! If not, just follow the download links above to install the right version.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"CVincent0907"},"content":":bulb: **Note:** Information related to Java 17.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"**:information_source: Notes: What is Java 17?**\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"* Java 17 is a version of the Java programming language. It’s the latest stable version, offering improvements in performance, security, and new features. It’s the version required to run applications like GastroBook.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"CVincent0907"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"CVincent0907"},"content":"### 2. **Download the Latest `GastroBook` File**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"- Visit our [GitHub page](https://github.com/AY2425S2-CS2103T-T09-3/tp) and download the most recent `.jar` file for `GastroBook`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"CVincent0907"},"content":"### 3. **Copy the file**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"CVincent0907"},"content":"- First, download the **gastrobook.jar** file and **copy** it to the folder where you want to keep the app. This will be your **home folder** for GastroBook.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"### 4. **Open the Command Prompt**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"CVincent0907"},"content":"- On **Windows**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"CVincent0907"},"content":"  - Press the **Windows key** + **R**, type `cmd`, and press **Enter** to open the **Command Prompt**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"- On **Mac OS**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"CVincent0907"},"content":"  - Open the **Terminal** application (you can find it by searching in Spotlight or under Applications \u003e Utilities).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"CVincent0907"},"content":"### 5. **Go to the folder with the file**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"CVincent0907"},"content":"- In the Command Prompt or Terminal, you\u0027ll need to \"go to\" the folder that contains **gastrobook.jar**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"CVincent0907"},"content":"- To do this, type the following command:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"CVincent0907"},"content":"- **For Windows**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"CVincent0907"},"content":"  ```bash","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"CVincent0907"},"content":"  cd C:\\Users\\YourName\\Downloads","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"CVincent0907"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"CVincent0907"},"content":"- **For Mac OS**:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"CVincent0907"},"content":"  ```bash","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"CVincent0907"},"content":"  cd /Users/YourName/Downloads","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"CVincent0907"},"content":"  ```","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"CVincent0907"},"content":"### 7. **Using the app**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"CVincent0907"},"content":"- Upon launching the app, you\u0027ll see a command box where you can type commands and press **Enter** to execute them.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"CVincent0907"},"content":"  ![UiScreenshot](images\\Ui1.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"CVincent0907"},"content":"- **Example command**: Type `help` and press **Enter** to see a list of useful commands.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"CVincent0907"},"content":"Here are some commands you can try:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"CVincent0907"},"content":"- `list` – Shows all reservations for today and tomorrow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"CVincent0907"},"content":"- `listrt` – Shows all reservations for today only.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"CVincent0907"},"content":"- `listp` – Shows all past reservations (from the day before).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"CVincent0907"},"content":"- `exit` – Closes the application.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"CVincent0907"},"content":"### 6. **Features Details**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"CVincent0907"},"content":"- Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"CVincent0907"},"content":"### Need Help?","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"CVincent0907"},"content":"If you encounter any problems, don\u0027t worry! Just reach out to us via our phone number `88574167`, and we\u0027ll be happy to assist you.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"## Input Field Table","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"CVincent0907"},"content":"| **Field**          | **Example**           | **Description**                                                           | **Restriction**                                                                                                          |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Frozennfishh"},"content":"|--------------------|-----------------------|---------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Frozennfishh"},"content":"| `NAME`             | n/John                | Name of the person making the reservation (e.g., `John`)                  | Names should only contain printable Unicode-Characters, and length must be at least 1 and at most 30                     |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Frozennfishh"},"content":"| `PHONE_NUMBER`     | p/98765432            | Contact number of the person (e.g., `12345`)                              | Phone must be of numeric only and length must be at least 4 and at most 20                                               |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Frozennfishh"},"content":"| `DATE`             | date/01/04/2025       | Date of reservation (e.g., `01/03/2025`)                                  | Date must be of today or tomorrow only in the format of dd/MM/yyyy, with leading 0 for single digits                     |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"CVincent0907"},"content":"| `TIME`             | time/1200             | Time of reservation (e.g., `1800` for 6:00 PM)                            | Time must be of 24 hour format in the form of HHMM                                                                       |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"CVincent0907"},"content":"| `DURATION`         | duration/2            | Duration in hours (e.g., `0.5` for 30 minutes or `1` for 1 hour)          | Duration must be a floating-point value and in the form of an hour or half an hour interval, at least 0.5 and at most 12 |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"Frozennfishh"},"content":"| `NUMBER_OF_PEOPLE` | pax/2                 | Number of people included in the reservation    (e.g., `10`)              | Pax number must be of numeric values only, at least 1 and at most 9999                                                   |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"CVincent0907"},"content":"| `TABLE_NUMBER`     | table/A1              | Assigned table number (e.g., `A2`)                                        | Table number must be in the form of 1 uppercase English letter followed by 1-3 digits                                    |","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Frozennfishh"},"content":"| `REMARK`           | r/Allergic to Peanuts | Any additional remarks about the reservation (e.g., `Likes cheese` )      | Remark must be of alphanumeric only and length must be at least 1 and at most 30                                         |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"CVincent0907"},"content":"| `TAG`              | t/event               | Tags to categorize the reservation (e.g., `regular`, `birthday`, `event`) | Tag must be of consecutive alphanumeric only without any spaces in between and length must be at least 1 and at most 15                                           |","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"CVincent0907"},"content":"## Design decision","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"CVincent0907"},"content":":bulb: **Note:** Information related to `RESERVATION_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"CVincent0907"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"CVincent0907"},"content":"**:information_source: Notes: Info of `RESERVATION_ID`:**\u003cbr\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"CVincent0907"},"content":"* A unique `RESERVATION_ID` will be auto-generated by the system upon adding, `add` a reservation into the system.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"CVincent0907"},"content":"* `RESERVATION_ID` is made up of date of reservation + last 4 digits of phone number + time of reservation.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"CVincent0907"},"content":"* The `RESERVATION_ID` is displayed in a reservation card and begins after the key `ID: ` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"CVincent0907"},"content":"  ![ReservationCard](images/reservationCard.png)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"CVincent0907"},"content":"* Command such as `edit`, `mark`, `unmark`, `delete`, `remark` must take in `RESERVATION_ID` as the first parameter to perform respective execution.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"CVincent0907"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"CVincent0907"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"CVincent0907"},"content":"**:information_source: Justification: Usage of `RESERVATION_ID`**\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"CVincent0907"},"content":"* After considering call-in reservations, using a `RESERVATION_ID` of unique combinations allows admin to easily retrieve reservation details by simply asking the customer for the date of reservation, the last 4 digits of their phone number, and the time of reservation. This avoids the need for admin to go through a long list or index of reservations, especially during peak hours. It streamlines the search process, minimizes wait time, and reduces potential human errors. Additionally, a well-structured and unique `RESERVATION_ID` can enhance the system\u0027s efficiency and make future referencing or modifications much more convenient.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"CVincent0907"},"content":"* Even though the `RESERVATION_ID` is 16 characters long, it remains manageable—especially for users who are comfortable with fast typing in the Command Line Interface (CLI). This design caters to power users, allowing them to make quick edits or add remarks with minimal friction, streamlining the overall user experience.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"CVincent0907"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":":bulb: **Note:** Parameters with brackets (`[]`) are optional and need not be included if not needed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/birthday`, `t/birthday t/vegeterian` etc.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands `help`, `exit` and `clear` will be ignored.\u003cbr\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"* All commands are case-sensitive and need to be in lowercase.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"Shows a link to guide you to a help page.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"![help message](images/helpMessage1.png)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Adding a reservation: `add`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"Adds a reservation to GastroBook.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"CVincent0907"},"content":"Format: `add n/NAME p/PHONE_NUMBER date/DATE time/TIME duration/DURATION pax/NUMBER_OF_PEOPLE table/TABLE_NUMBER [t/TAG_1] [t/TAG_2]...`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"CVincent0907"},"content":"Examples:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"CVincent0907"},"content":"* `add n/John Doe p/98765432 date/01/03/2025 time/1800 duration/2 pax/2 table/A1 t/anniversary`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"CVincent0907"},"content":"* A reservation can have any number of tags (including 0 or more).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"CVincent0907"},"content":"* Can only add reservations of today or tomorrow but not past reservations.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"CVincent0907"},"content":"**:information_source: Justification: Reliable Uniqueness Check Using Last 4 Digits of Phone Number**\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"CVincent0907"},"content":"* A reservation with the same date, time, and last 4 digits of the phone number is considered a duplicate and will not be allowed. This is highly unlikely to occur, as the last 4 digits of a phone number are commonly used for verification in systems like banks and telecom services, ensuring uniqueness and preventing accidental duplicates.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"CVincent0907"},"content":"* For instance, the Chinese robotaxi service, Luobo Kuaipao, uses the last 4 digits of a passenger\u0027s phone number as a verification method to unlock the vehicle. This is a secure and efficient way to authenticate users, leveraging the low probability of two people having the same last 4 digits. [LuoBoKuaiPao](https://www.sixthtone.com/news/1015767)","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"Frozennfishh"},"content":"* The application gives the user full freedom in adding reservations as long as there are no duplicates, hence **organisation of reservations and resolving of table clashes will be up to the user to handle**.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"CVincent0907"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"CVincent0907"},"content":"### Editing a reservation: `edit`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"CVincent0907"},"content":"Edits details of the reservation in GastroBook with the specified `RESERVATION_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"CVincent0907"},"content":"Format: `edit RESERVATION_ID [n/NAME] [p/PHONE_NUMBER] [date/DATE] [time/TIME] [duration/DURATION] [pax/NUMBER_OF_PEOPLE] [table/TABLE_NUMBER] [t/TAG_1] [t/TAG_2]...`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"* `edit 1803202512341230 duration/1 pax/3`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"CVincent0907"},"content":"* `RESERVATION_ID` is a must specified field and can be obtained either from details given by customer via call in or the list of reservation.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"CVincent0907"},"content":"* At least one of the optional fields must be provided in order to edit a reservation successfully.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"CVincent0907"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"CVincent0907"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"CVincent0907"},"content":"* Remove all reservation tags by typing t/ without specifying any tags after it.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"CVincent0907"},"content":"* Can only edit today or tomorrow reservations but not past reservations.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Deleting a reservation : `delete`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"CVincent0907"},"content":"Deletes a specific reservation from GastroBook with the specified `RESERVATION_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"Format: `delete RESERVATION_ID`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"CVincent0907"},"content":"Examples:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"CVincent0907"},"content":"* `delete 1803202512341230`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"CVincent0907"},"content":"* `RESERVATION_ID` is a must specified field and can be obtained either from details given by customer via call in or the list of reservation.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"CVincent0907"},"content":"* Can only delete today or tomorrow reservations but not past reservations.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Marking a reservation as paid : `mark`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"CVincent0907"},"content":"Marks a specific reservation as paid at the payment status in the reservation card with the specified `RESERVATION_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"Format: `mark RESERVATION_ID`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"CVincent0907"},"content":"Examples:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"CVincent0907"},"content":"* `mark 1803202512341230`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"CVincent0907"},"content":"* The word `Paid` is displayed in the reservation card after the key `Payment status: ` when sample `mark` command has been entered with a specified `RESERVATION_ID`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"CVincent0907"},"content":"  ![mark](images/Mark.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"CVincent0907"},"content":"* `RESERVATION_ID` is a must specified field and can be obtained either from details given by customer via call in or the list of reservation.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"CVincent0907"},"content":"* Can only mark today or tomorrow reservations as paid but not past reservations.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"### Unmarking a reservation as paid : `unmark`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"CVincent0907"},"content":"Marks a specific reservation as unpaid at the payment status in the reservation card with the specified `RESERVATION_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"Format: `unmark RESERVATION_ID`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"CVincent0907"},"content":"Examples:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"CVincent0907"},"content":"* `unmark 1803202512341230`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"CVincent0907"},"content":"* The word `Not Paid` is displayed in the reservation card after the key `Payment status: ` when sample `unmark` command has been entered with a specified `RESERVATION_ID`.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"CVincent0907"},"content":"  ![unmark](images/Unmark.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"CVincent0907"},"content":"* `RESERVATION_ID` is a must specified field and can be obtained either from details given by customer via call in or the list of reservation.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"CVincent0907"},"content":"* Can only mark today or tomorrow reservations as unpaid but not past reservations.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"### Remarking a reservation : `remark`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"CVincent0907"},"content":"Adds or updates the remark int the reservation card with the specified `RESERVATION_ID`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"Format: `remark RESERVATION_ID r/REMARK`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"CVincent0907"},"content":"Examples:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"CVincent0907"},"content":"* `remark 1803202512341230 r/he like cheese!`.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"* Any previous remark will be overwritten with the new one.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"CVincent0907"},"content":"* An empty remark can be added or updated via `remark r/`","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"CVincent0907"},"content":"* `RESERVATION_ID` is a must specified field and can be obtained either from details given by customer via call in or the list of reservation.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"CVincent0907"},"content":"* Can only add or update the remark of today or tomorrow reservations but not past reservations.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Listing all reservations : `list`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"Shows a list of all reservations in GastroBook for today and tomorrow, sorted by date and time.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Listing today\u0027s reservations : `listrt`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":330,"author":{"gitId":"-"},"content":"Shows a list of all reservations for today, sorted by time.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":332,"author":{"gitId":"-"},"content":"Format: `listrt`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":334,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":335,"author":{"gitId":"-"},"content":"### Listing tomorrow\u0027s reservations : `listrn`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":337,"author":{"gitId":"-"},"content":"Shows a list of all reservations for tomorrow, sorted by time.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":339,"author":{"gitId":"-"},"content":"Format: `listrn`","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":341,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Listing all previous reservations : `listp`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":344,"author":{"gitId":"CVincent0907"},"content":"Shows a list of all reservations made prior to the current system date (i.e., today\u0027s date in real time).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":346,"author":{"gitId":"-"},"content":"Format: `listp`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":348,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":349,"author":{"gitId":"CVincent0907"},"content":"* Below is the GUI that appears when the `listp` command is entered, displaying some sample previous reservation data that is preloaded into `gastrobook`for demonstration purposes. Upon entering `listp`, you should be able to see this displayed GUI.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":350,"author":{"gitId":"CVincent0907"},"content":"  ![listp](images/listp.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":351,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":352,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":353,"author":{"gitId":"-"},"content":"### Listing all reservations by regulars : `listr`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":355,"author":{"gitId":"-"},"content":"Shows a list of all reservations for today and tomorrow made by regulars.","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":357,"author":{"gitId":"-"},"content":"Format: `listr`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":359,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":360,"author":{"gitId":"CVincent0907"},"content":"* Below is the GUI displayed when the `listr` command is entered. Sample data is not preloaded for this feature, but you can test it by adding reservations with the same phone number three or more times. Then, use `listr` to view the Regulars. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":361,"author":{"gitId":"CVincent0907"},"content":"  ![listr](images/listr.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":362,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":363,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":364,"author":{"gitId":"CVincent0907"},"content":"* Yellow reservation card indicates reservation made by a regular.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":365,"author":{"gitId":"CVincent0907"},"content":"  ![regular](images/regular.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":366,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":367,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":368,"author":{"gitId":"CVincent0907"},"content":"* White reservation card indicates reservation made by a non-regular. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":369,"author":{"gitId":"CVincent0907"},"content":"  ![nonregular](images/nonregular.png)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":370,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":371,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":372,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":373,"author":{"gitId":"CVincent0907"},"content":":bulb: **Note:** Definition of a Regular.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":374,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":375,"author":{"gitId":"CVincent0907"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":376,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":377,"author":{"gitId":"CVincent0907"},"content":"**:information_source: Who is a Regular ?**\u003cbr\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":378,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":379,"author":{"gitId":"CVincent0907"},"content":"* A Regular refers to a customer who has made three or more reservations, including past reservations by adding, `add` the reservations into the system. Regulars are identified by phone number—regardless of the name used since it is possible that different family members use the same phone number for reservations. Even if different names are provided, as long as the phone number is the same, they are treated as the same entity (i.e., one regular) by the system.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":380,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":381,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":382,"author":{"gitId":"CVincent0907"},"content":"* Editing, `edit` a Regular\u0027s reservation card (indicated by a yellow card) may cause all related reservation cards (booked under the same phone number) to turn white, and the customer to lose Regular status if, after the `edit`, their total number of reservations — including both past and current — falls below the threshold of 3, which is the minimum required to be considered a Regular.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":383,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":384,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":385,"author":{"gitId":"CVincent0907"},"content":"* Deleting, `delete` a Regular\u0027s reservation card (indicated by a yellow card) may cause all related reservation cards (booked under the same phone number) to turn white, and the customer to lose Regular status if, after the `delete`, their total number of reservations — including both past and current — falls below the threshold of 3, which is the minimum required to be considered a Regular.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":386,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":387,"author":{"gitId":"CVincent0907"},"content":"\u003c/div\u003e","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":388,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":389,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":390,"author":{"gitId":"-"},"content":"### Finding reservations by name: `findn`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":392,"author":{"gitId":"CVincent0907"},"content":"Finds reservations of today and tomorrow by the specified name(s).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":394,"author":{"gitId":"CVincent0907"},"content":"Format: `findn NAME [NAME_1] [NAME_2] [NAME_3] ...`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":395,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":396,"author":{"gitId":"CVincent0907"},"content":"Examples:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":397,"author":{"gitId":"CVincent0907"},"content":"* `findn John` returns all reservations made by John for today and tomorrow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":398,"author":{"gitId":"CVincent0907"},"content":"* `findn Jane` returns all reservations made by Jane for today and tomorrow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":399,"author":{"gitId":"CVincent0907"},"content":"* `findn John Jane` returns all reservations made by John or Jane for today and tomorrow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":401,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":402,"author":{"gitId":"-"},"content":"* More than one name parameter is allowed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":403,"author":{"gitId":"CVincent0907"},"content":"* The name could be first name, middle name or last name.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":404,"author":{"gitId":"caroline1233456"},"content":"* The search is based on exact matching but not partial matching — either the first name, middle name or last name must match exactly for results to be displayed. e.g.,`findn Do` will not match `John Doe`","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":405,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g., `findn john doe` will match `John Doe`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":406,"author":{"gitId":"CVincent0907"},"content":"* Can only search for reservations by customer name for today and tomorrow; past reservations are excluded.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Finding reservations by phone number: `findp`","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":411,"author":{"gitId":"CVincent0907"},"content":"Finds reservations of today and tomorrow by the specified phone number(s).","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":413,"author":{"gitId":"CVincent0907"},"content":"Format: `findp PHONE_NUMBER [PHONE_NUMBER_1] [PHONE_NUMBER_2] [PHONE_NUMBER_3] ... `","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":415,"author":{"gitId":"CVincent0907"},"content":"Examples:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":416,"author":{"gitId":"CVincent0907"},"content":"* `findp 98765432` returns all reservations made by the person with phone number 98765432 for today and tomorrow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":417,"author":{"gitId":"CVincent0907"},"content":"* `findp 91234567 98765432` returns all reservations made by the people with phone numbers 91234567 and 98765432 for today and tomorrow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":419,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":420,"author":{"gitId":"-"},"content":"* More than one phone number parameter is allowed.","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":421,"author":{"gitId":"CVincent0907"},"content":"* The search is based on exact matching but not partial matching. e.g., `9123` will not match `91234567` and only `91234567` will match for `91234567`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":422,"author":{"gitId":"CVincent0907"},"content":"* Can only search for reservations by customer phone number for today and tomorrow; past reservations are excluded.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Finding reservations by time: `findt`","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":427,"author":{"gitId":"CVincent0907"},"content":"Finds reservations of today that are ongoing at the specified time.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":429,"author":{"gitId":"-"},"content":"Format: `findt TIME`","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":431,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":432,"author":{"gitId":"-"},"content":"* `findt 1400` returns all reservations scheduled for today ongoing at 2:00 PM (e.g., a reservation from 1:00 PM to 3:00 PM or 2:00 PM to 4:00 PM), but excludes reservations that end at 2:00 PM (e.g., a reservation from 1:00 PM to 2:00 PM).","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":434,"author":{"gitId":"CVincent0907"},"content":"Notes:","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":435,"author":{"gitId":"CVincent0907"},"content":"* Can only take in one time parameter.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":436,"author":{"gitId":"CVincent0907"},"content":"* Can only search by time for today ongoing reservations only; past and tomorrow reservations are excluded.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":437,"author":{"gitId":"CVincent0907"},"content":"* A reservation is deemed ongoing if its start time is at or before the specified time and its end time (computed as start time plus duration) is after the specified time.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":438,"author":{"gitId":"CVincent0907"},"content":"* Reservations that end exactly at the specified time are not regarded as ongoing reservations.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":439,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":440,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":441,"author":{"gitId":"CVincent0907"},"content":"### Clearing the reservations : `clear`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":442,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":443,"author":{"gitId":"CVincent0907"},"content":"Clearing all reservations regardless of previous, today or tomorrow.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":444,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":445,"author":{"gitId":"CVincent0907"},"content":"Format: `clear`","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":446,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":447,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":448,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":450,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":452,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":454,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":457,"author":{"gitId":"-"},"content":"GastroBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":459,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":460,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04","isFullCredit":false},{"lineNumber":462,"author":{"gitId":"-"},"content":"GastroBook data are saved automatically as a JSON file `[JAR file location]/data/gastrobook.json`.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":464,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":466,"author":{"gitId":"CVincent0907"},"content":"## Constraints","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":467,"author":{"gitId":"CVincent0907"},"content":"1. The threshold for a customer to be classified as a Regular is currently hardcoded at 3 reservations. Future refinements will depend on the customer base served.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":468,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":469,"author":{"gitId":"CVincent0907"},"content":"2. All fields are fixed.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":470,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":471,"author":{"gitId":"Frozennfishh"},"content":"3. Identification of reservation is unique and is auto-generated by system. Editing, `edit` the last 4 digits of the phone number or the reservation date or time, will result in a change to the `RESERVATION_ID` accordingly.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":472,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":473,"author":{"gitId":"Frozennfishh"},"content":"4. Last 4 digits of a phone number entered to the system must be unique if the date and time of reservation is the same as any other reservation. For example, if \"1234\" is already in the system with the same date and time, \"12341234\" will not be allowed by the system, as the probability of such a duplication of last 4 digits of phone number occurring in real life is extremely low.","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":474,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":475,"author":{"gitId":"CVincent0907"},"content":"5. Guest records will still be present in persons list for history purposes even after clearing, `clear` the reservations. Thus, the reservation card will still change their color accordingly to indicate whether the guest is a regular or non-regular based on the unclear past reservation counts records in the persons list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":476,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":477,"author":{"gitId":"CVincent0907"},"content":"6. `add` and `edit` features are not able to modify if a reservation is paid or unpaid.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":478,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":479,"author":{"gitId":"CVincent0907"},"content":"7. `add` and `edit` features are not able to modify the remark of a reservation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":480,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":481,"author":{"gitId":"CVincent0907"},"content":"8. The system does not handle table clashes automatically; it is up to the admin\u0027s discretion and knowledge to manage overlapping reservations.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":482,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":483,"author":{"gitId":"CVincent0907"},"content":"9. Editing tags will overwrite the existing ones, so you will need to add the previous tags back before adding new ones.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":484,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":485,"author":{"gitId":"CVincent0907"},"content":"10. The only way to delete a remark of reservation in the system is by using `remark r/` which is to set the remark to null.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":487,"author":{"gitId":"Frozennfishh"},"content":"11. The only way to delete all tags of reservation in the system is by using `t/` when editing the reservation, which sets all tags to null.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":488,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":489,"author":{"gitId":"Frozennfishh"},"content":"12. If an invalid prefix is followed by arguments, the system will interpret it as an error caused by the last valid prefix and its associated arguments.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":490,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":492,"author":{"gitId":"CVincent0907"},"content":"## Reminder","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":493,"author":{"gitId":"CVincent0907"},"content":"1. For compatibility reasons, avoid copying commands directly from the User Guide PDF into the command window for testing purposes. This may lead to errors or unexpected behavior since this is a real-time system.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":494,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":495,"author":{"gitId":"CVincent0907"},"content":"2. Since the `RESERVATION_ID` is defined based on the reservation date + the last 4 digits of the phone number + reservation time, duplication checks are performed using this combination rather than the customer\u0027s name or phone number alone.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":496,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":497,"author":{"gitId":"CVincent0907"},"content":"3. This is essential for understanding how Regulars are defined: a customer with the same phone number but different names is considered the same entity, while a different phone number (even with the same name) or a different phone number and name pair will be treated as separate entities in the persons list.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":498,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":499,"author":{"gitId":"CVincent0907"},"content":"4. Do not overwrite or replace the data in  `gastrobook.json` and `personslist.json` files under `/data` directory directly to avoid unexpected behavior and ensure the system can read them properly. Overwriting these files may result in lost records and prevent the system from booting correctly, causing reservation data to not display properly. Instead, follow the normal procedure to input data so that it is properly recorded into the `gastrobook.json` and `personslist.json` files.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":500,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":501,"author":{"gitId":"CVincent0907"},"content":"5. Each time `gastrobook` is loaded, only today’s reservations are displayed, provided the data for today\u0027s reservations has already been entered. This supports efficient service and preparation. The GUI is identical to `listrt`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":502,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":503,"author":{"gitId":"CVincent0907"},"content":"6. The preloaded past sample reservation data shown when `listp` is entered is solely for demo purposes and does not have corresponding reservation counts in `personslist.json`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":504,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":505,"author":{"gitId":"CVincent0907"},"content":"7. It is recommended to use `clear` to remove all past sample reservation data to start fresh as a user after running `listp` to get a grasp of what `listp` does when you first use `gastrobook`.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":506,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":507,"author":{"gitId":"CVincent0907"},"content":"8. After using `clear`, the past sample reservation data will be removed completely and cannot be retrieved back.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":508,"author":{"gitId":"CVincent0907"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":509,"author":{"gitId":"CVincent0907"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08","isFullCredit":false},{"lineNumber":511,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":513,"author":{"gitId":"-"},"content":"| Action                   | Format, Examples                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":514,"author":{"gitId":"CVincent0907"},"content":"|--------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":515,"author":{"gitId":"CVincent0907"},"content":"| **Add**                  | `add n/NAME p/PHONE_NUMBER date/DATE time/TIME duration/DURATION pax/NUMBER_OF_PEOPLE table/TABLE_NUMBER [t/TAG]... ` \u003cbr\u003e e.g., `add n/John Doe p/98765432 date/01/03/2025 time/1800 duration/2 pax/2 table/A1 t/regular t/event`                                               |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":516,"author":{"gitId":"CVincent0907"},"content":"| **Edit**                 | `edit RESERVATION_ID [n/NAME] [p/PHONE_NUMBER] [date/DATE] [time/TIME] [duration/DURATION] [pax/NUMBER_OF_PEOPLE] [table/TABLE_NUMBER] [t/TAG]...` \u003cbr\u003e e.g.,`edit 1803202512341200 n/John Doe p/98761234 date/18/03/2025 time/1800 duration/2 pax/2 table/A1 t/regular t/event` |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":517,"author":{"gitId":"CVincent0907"},"content":"| **Delete**               | `delete RESERVATION_ID`\u003cbr\u003e e.g., `delete 1803202512341200`                                                                                                                                                                                                                      |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":518,"author":{"gitId":"CVincent0907"},"content":"| **Mark**                 | `mark RESERVATION_ID`\u003cbr\u003e e.g., `mark 1803202512341200`                                                                                                                                                                                                                          |                                                                                                                                                                                                                                                                   |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":519,"author":{"gitId":"CVincent0907"},"content":"| **Unmark**               | `unmark RESERVATION_ID`\u003cbr\u003e e.g., `unmark 1803202512341200`                                                                                                                                                                                                                      |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":520,"author":{"gitId":"CVincent0907"},"content":"| **Remark**               | `remark RESERVATION_ID r/REMARK`\u003cbr\u003e e.g., `remark 1803202512341200 r/he like cheese!`                                                                                                                                                                                           |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":521,"author":{"gitId":"CVincent0907"},"content":"| **Find by name**         | `findn NAME [NAME_1] [NAME_2] ...`\u003cbr\u003e e.g., `findn John Doe`                                                                                                                                                                                                                    |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":522,"author":{"gitId":"CVincent0907"},"content":"| **Find by phone number** | `findp PHONE_NUMBER [PHONE_NUMBER_1] [PHONE_NUMBER_2] ...`\u003cbr\u003e e.g., `findp 91234567`                                                                                                                                                                                            |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":523,"author":{"gitId":"-"},"content":"| **Find by time**         | `findt TIME`\u003cbr\u003e e.g., `findt 1400`                                                                                                                                                                                                                                              |","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":524,"author":{"gitId":"CVincent0907"},"content":"| **List all**             | `list`                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":525,"author":{"gitId":"-"},"content":"| **List today**           | `listrt`                                                                                                                                                                                                                                                                         |","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":526,"author":{"gitId":"-"},"content":"| **List tomorrow**        | `listrn`                                                                                                                                                                                                                                                                         |","lastModifiedDate":"2025-03-17","isFullCredit":false},{"lineNumber":527,"author":{"gitId":"-"},"content":"| **List previous**        | `listp`                                                                                                                                                                                                                                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":528,"author":{"gitId":"-"},"content":"| **List regulars**        | `listr`                                                                                                                                                                                                                                                                          |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":529,"author":{"gitId":"CVincent0907"},"content":"| **Clear**                | `clear`                                                                                                                                                                                                                                                                          |","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":530,"author":{"gitId":"-"},"content":"| **Help**                 | `help`                                                                                                                                                                                                                                                                           |                                                                                                                                                                                                                                                                   |","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":531,"author":{"gitId":"-"},"content":"| **Exit**                 | `exit`                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2025-03-17","isFullCredit":false}],"authorContributionMap":{"caroline1233456":1,"CVincent0907":286,"-":232,"Frozennfishh":12}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"title: \"ay2425s2-cs2103t-t09-3\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"baseUrl: \"/tp\"","lastModifiedDate":"2025-02-15","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"CVincent0907"},"content":"repository: \"AY2425S2-CS2103T-T09-3/tp\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23","isFullCredit":false}],"authorContributionMap":{"CVincent0907":1,"-":15}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"CVincent0907"},"content":"    content: \"GastroBook\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12","isFullCredit":false}],"authorContributionMap":{"CVincent0907":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"caroline1233456"},"content":"user -[USER_COLOR]\u003e ui : \"delete 0101202554321800\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"caroline1233456"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 0101202554321800\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteReservation(r)","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveGastroBook(gastroBook)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"caroline1233456":2,"-":38}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":GastroBookParser\" as GastroBookParser LOGIC_COLOR","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"caroline1233456"},"content":"[-\u003e LogicManager : execute(\"delete 0604202598761700\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"caroline1233456"},"content":"LogicManager -\u003e GastroBookParser : parseCommand(\"delete 0604202598761700\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate GastroBookParser","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"GastroBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e GastroBookParser","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"caroline1233456"},"content":"GastroBookParser -\u003e DeleteCommandParser : parse(\"0604202598761700\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e GastroBookParser : d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e GastroBookParser","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"GastroBookParser --\u003e LogicManager : d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate GastroBookParser","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"caroline1233456"},"content":"DeleteCommand -\u003e Model : deleteReservation(...)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03","isFullCredit":false}],"authorContributionMap":{"caroline1233456":4,"-":66}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.PersonsList;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.GastroBookStorage;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonGastroBookStorage;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GastroBookStorage gastroBookStorage \u003d new JsonGastroBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonsList personsList \u003d new PersonsList();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(gastroBookStorage, userPrefsStorage);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, personsList, userPrefs);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    protected Model initModelManager(Storage storage, PersonsList personsList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"        logger.info(\"Using data file : \" + storage.getGastroBookFilePath());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyGastroBook\u003e addressBookOptional;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyGastroBook initialData;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"CVincent0907"},"content":"            addressBookOptional \u003d storage.readGastroBook();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"CVincent0907"},"content":"                logger.info(\"Creating a new data file \" + storage.getGastroBookFilePath()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"            logger.warning(\"Data file at \" + storage.getGastroBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonzhou97"},"content":"            initialData \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, personsList, userPrefs);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping AddressBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"            // Don\u0027t do any file operations on the PersonsList files","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"            // The data is already appended to the files during normal operation","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.info(\"Application stopping - all data is already saved through append operations\");","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (Exception e) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.severe(\"Error during application shutdown: \" + e.getMessage());","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"CVincent0907":4,"-":191,"Jasonzhou97":1}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.GastroBookParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final GastroBookParser gastroBookParser;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        gastroBookParser \u003d new GastroBookParser();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d gastroBookParser.parseCommand(commandText);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"CVincent0907"},"content":"            storage.saveGastroBook(model.getAddressBook());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyGastroBook getAddressBook() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cReservation\u003e getFilteredReservationList() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredReservationList();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21","isFullCredit":false}],"authorContributionMap":{"CVincent0907":1,"-":87}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAX;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"CVincent0907"},"content":" * Adds a reservation to the gastro book.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a reservation to GastroBook.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_TIME + \"TIME \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_DURATION + \"DURATION \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PAX + \"PAX \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TABLE + \"TABLE \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"geeliette"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_DATE + \"01/03/2025 \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TIME + \"1800 \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_DURATION + \"2 \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_PAX + \"2 \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TABLE + \"A1 \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"regular \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"event \";","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New reservation added: %1$s\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_DUPLICATE_RESERVATION \u003d \"This reservation already exists in the GastroBook\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Reservation toAdd;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Reservation reservation) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(reservation);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasReservation(toAdd)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RESERVATION);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addReservation(toAdd);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"geeliette":3,"CVincent0907":1,"-":89}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"GastroBook has been cleared!\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new GastroBook());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"geeliette":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"            + \": Deletes the reservation identified by the ID used in the displayed reservation list.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"geeliette"},"content":"            + \"Parameters: ID ([6 figures of date (ie: ddMMyyyy) of TODAY or TOMORROW] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"+ [last 4 digits of customer phone number (ie: xxxx)] \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"geeliette"},"content":"            + \"+ [time of reservation in HHMM format])\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"geeliette"},"content":"            + \"Example: \" + COMMAND_WORD + \" 0402202598761700\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_RESERVATION_SUCCESS \u003d \"Deleted Reservation: %1$s\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Identification id;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Identification id) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Reservation reservationToDelete \u003d Identification.getReservationUsingId(id, model);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        model.deleteReservation(reservationToDelete);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //delete/decrement in persons list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model.updatePersonsListAfterDelete(reservationToDelete);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_RESERVATION_SUCCESS,","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"                Messages.format(reservationToDelete)));","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return id.equals(otherDeleteCommand.id);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .add(\"identification\", id)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"geeliette":4,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAX;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESERVATIONS;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Edits the details of an existing reservation in the gastro book.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the reservation identified \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"geeliette"},"content":"            + \"by the ID used in the displayed reservation list. \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"geeliette"},"content":"            + \"Parameters: ID ([6 figures of date (ie: ddMMyyyy) of TODAY or TOMORROW] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"+ [last 4 digits of customer phone number (ie: xxxx)] \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"+ [time of reservation in HHMM format]) \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TIME + \"TIME] \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_DURATION + \"DURATION] \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PAX + \"PAX] \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TABLE + \"TABLE] \"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 0402202598761700 \"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_RESERVATION_SUCCESS \u003d \"Edited reservation: %1$s\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_RESERVATION \u003d \"This reservation already exists in the address book.\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private final Identification id;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final EditReservationDescriptor editReservationDescriptor;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param id                        of the reservation  in the filtered reservation list to edit","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param editReservationDescriptor details to edit the reservation with","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public EditCommand(Identification id, EditReservationDescriptor editReservationDescriptor) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(id);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(editReservationDescriptor);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.editReservationDescriptor \u003d new EditReservationDescriptor(editReservationDescriptor);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Reservation reservationToEdit \u003d Identification.getReservationUsingId(id, model);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Reservation editedReservation \u003d createEditedReservation(reservationToEdit, editReservationDescriptor);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!reservationToEdit.isSameReservation(editedReservation) \u0026\u0026 model.hasReservation(editedReservation)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_RESERVATION);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setReservation(reservationToEdit, editedReservation);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Reload persons list after editing to update details","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.updatePersonsListAfterEdit(reservationToEdit, editedReservation);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(PREDICATE_SHOW_ALL_RESERVATIONS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_RESERVATION_SUCCESS, Messages.format(editedReservation)));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Reservation} with the details of {@code ReservationToEdit}","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * edited with {@code editReservationDescriptor}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private static Reservation createEditedReservation(Reservation reservationToEdit,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                                       EditReservationDescriptor editReservationDescriptor) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assert reservationToEdit !\u003d null;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editReservationDescriptor.getName().orElse(reservationToEdit.getName());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editReservationDescriptor.getPhone().orElse(reservationToEdit.getPhone());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        StartDate updatedDate \u003d editReservationDescriptor.getDate().orElse(reservationToEdit.getDate());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        StartTime updatedTime \u003d editReservationDescriptor.getTime().orElse(reservationToEdit.getTime());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Duration updatedDuration \u003d editReservationDescriptor.getDuration().orElse(reservationToEdit.getDuration());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Pax updatedPax \u003d editReservationDescriptor.getPax().orElse(reservationToEdit.getPax());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Table updatedTable \u003d editReservationDescriptor.getTable().orElse(reservationToEdit.getTable());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Remark updatedRemark \u003d reservationToEdit.getRemark();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editReservationDescriptor.getTags().orElse(reservationToEdit.getTags());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(updatedDate, updatedPhone, updatedTime);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Boolean isPaid \u003d reservationToEdit.getIsPaid();","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return new Reservation(updatedName, updatedPhone, updatedDate, updatedTime, updatedDuration, updatedPax,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"                updatedTable, updatedRemark, updatedTags, id, isPaid);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return id.equals(otherEditCommand.id)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 editReservationDescriptor.equals(otherEditCommand.editReservationDescriptor);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"identification\", id)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editReservationDescriptor)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Stores the details to edit the reservation with. Each non-empty field value will replace the","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * corresponding field value of the reservation.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static class EditReservationDescriptor {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private StartDate date;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private StartTime time;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Duration duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Pax pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Table table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Remark remark;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private boolean isPaid;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Identification id;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public EditReservationDescriptor() {}","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public EditReservationDescriptor(EditReservationDescriptor toCopy) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setDuration(toCopy.duration);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setPax(toCopy.pax);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setTable(toCopy.table);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setIsPaid(toCopy.isPaid);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setId(toCopy.id);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, date, time, duration, pax, table, tags);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setDate(StartDate date) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.date \u003d date;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cStartDate\u003e getDate() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setTime(StartTime time) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.time \u003d time;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cStartTime\u003e getTime() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setDuration(Duration duration) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cDuration\u003e getDuration() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(duration);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public void setPax(Pax pax) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.pax \u003d pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public Optional\u003cPax\u003e getPax() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(pax);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public void setTable(Table table) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"-"},"content":"            this.table \u003d table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public Optional\u003cTable\u003e getTable() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(table);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"-"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void setIsPaid(boolean isPaid) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":258,"author":{"gitId":"-"},"content":"            this.isPaid \u003d isPaid;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public void setId(Identification id) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":262,"author":{"gitId":"-"},"content":"            this.id \u003d id;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public Optional\u003cIdentification\u003e getId() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":269,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":270,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":271,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":272,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21","isFullCredit":false},{"lineNumber":274,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":277,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":278,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":279,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":280,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":281,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11","isFullCredit":false},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":286,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":288,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":289,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":290,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":292,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":293,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditReservationDescriptor)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":294,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":295,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":297,"author":{"gitId":"-"},"content":"            EditReservationDescriptor otherEditReservationDescriptor \u003d (EditReservationDescriptor) other;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":298,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditReservationDescriptor.name)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":299,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditReservationDescriptor.phone)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(date, otherEditReservationDescriptor.date)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(time, otherEditReservationDescriptor.time)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(duration, otherEditReservationDescriptor.duration)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(pax, otherEditReservationDescriptor.pax)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(table, otherEditReservationDescriptor.table)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditReservationDescriptor.tags)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":306,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditReservationDescriptor.remark)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(isPaid, otherEditReservationDescriptor.isPaid);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":310,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":311,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":312,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":313,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":314,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    .add(\"date\", date)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":316,"author":{"gitId":"-"},"content":"                    .add(\"time\", time)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":317,"author":{"gitId":"-"},"content":"                    .add(\"duration\", duration)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    .add(\"pax\", pax)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":319,"author":{"gitId":"-"},"content":"                    .add(\"table\", table)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    .add(\"payment\", isPaid)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":323,"author":{"gitId":"-"},"content":"                    .add(\"id\", id)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26","isFullCredit":false},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26","isFullCredit":false}],"authorContributionMap":{"geeliette":2,"-":325}},{"path":"src/main/java/seedu/address/logic/commands/FindByNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.NameContainsKeywordsPredicate;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all persons whose name contains any of the argument keywords.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindByNameCommand extends Command {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"findn\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names match any of \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"geeliette"},"content":"            + \"the specified names (case-insensitive) and displays reservations made by them for today or \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"            + \"tomorrow as a list with reservation IDs.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"geeliette"},"content":"            + \"Parameters: NAME [MORE NAMES]...\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public FindByNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(reservation -\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            // Check name","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            boolean matchesName \u003d predicate.test(reservation);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            // Check if date is today or tomorrow","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            boolean isTodayOrTomorrow \u003d StartDate.isValidDateRange(reservation.getDate().value);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return matchesName \u0026\u0026 isTodayOrTomorrow;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        int count \u003d model.getFilteredReservationList().size();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String resultMessage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            resultMessage \u003d Messages.MESSAGE_NO_RESERVATIONS_LISTED;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            resultMessage \u003d String.format(Messages.MESSAGE_RESERVATIONS_LISTED_OVERVIEW, count);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(resultMessage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindByNameCommand)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FindByNameCommand otherFindByNameCommand \u003d (FindByNameCommand) other;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindByNameCommand.predicate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22","isFullCredit":false}],"authorContributionMap":{"geeliette":4,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/FindByPhoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Finds and lists all reservations whose phone numbers match any of the argument keywords.","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindByPhoneCommand extends Command {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"findp\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose phone numbers match \"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"geeliette"},"content":"            + \"any of the specified phone numbers and displays reservations made by them for today or \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"geeliette"},"content":"            + \"tomorrow as a list with reservation IDs.\\n\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"            + \"Parameters: PHONE NUMBER [MORE PHONE NUMBERS]...\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 98765432 81234567\";","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final PhoneContainsKeywordsPredicate predicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindByPhoneCommand(PhoneContainsKeywordsPredicate predicate) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(reservation -\u003e {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            // Check phone number","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            boolean matchesPhone \u003d predicate.test(reservation);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            // Check if date is today or tomorrow","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            boolean isTodayOrTomorrow \u003d StartDate.isValidDateRange(reservation.getDate().value);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return matchesPhone \u0026\u0026 isTodayOrTomorrow;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        int count \u003d model.getFilteredReservationList().size();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String resultMessage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            resultMessage \u003d Messages.MESSAGE_NO_RESERVATIONS_LISTED;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"            resultMessage \u003d String.format(Messages.MESSAGE_RESERVATIONS_LISTED_OVERVIEW, count);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(resultMessage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindByPhoneCommand)) {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindByPhoneCommand otherFindByPhoneCommand \u003d (FindByPhoneCommand) other;","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindByPhoneCommand.predicate);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-24","isFullCredit":false}],"authorContributionMap":{"geeliette":4,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/FindByTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.TimeMatchesPredicate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all reservations scheduled for today that are ongoing at the specified time.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A reservation is ongoing if its start time is at or before the search time and its end time","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * (computed as start time + duration) is after the search time.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Reservations ending exactly at the search time are not shown.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindByTimeCommand extends Command {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"findt\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"geeliette"},"content":"            + \": Finds all reservations scheduled for today only that are ongoing at the specified time.\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: TIME (in HHmm format)\\n\"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1400\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final TimeMatchesPredicate predicate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public FindByTimeCommand(TimeMatchesPredicate predicate) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(reservation -\u003e {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            // check time","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            boolean matchesTime \u003d predicate.test(reservation);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"            // check if date is today","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            boolean isToday \u003d reservation.getDate().toLocalDate().equals(LocalDate.now());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return matchesTime \u0026\u0026 isToday;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        int count \u003d model.getFilteredReservationList().size();","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String resultMessage;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            resultMessage \u003d Messages.MESSAGE_NO_RESERVATIONS_LISTED;;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            resultMessage \u003d String.format(Messages.MESSAGE_RESERVATIONS_LISTED_OVERVIEW, count);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new CommandResult(resultMessage);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindByTimeCommand)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindByTimeCommand otherFindByTimeCommand \u003d (FindByTimeCommand) other;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindByTimeCommand.predicate);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"geeliette":1,"-":73}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Marks a reservation as paid based on the given identification.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the reservation as paid \"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"geeliette"},"content":"            + \"identified by the ID used in the displayed reservation list.\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"geeliette"},"content":"            + \"Parameters: ID ([6 figures of date (ie: ddMMyyyy) of TODAY or TOMORROW] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"+ [last 4 digits of customer phone number (ie: xxxx)] \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"            + \"+ [time of reservation in HHMM format])\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"geeliette"},"content":"            + \"Example: \" + COMMAND_WORD + \" 0402202598761700\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_MARK_RESERVATION_SUCCESS \u003d \"Successfully marks the reservation as paid\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_MARK \u003d \"The reservation has already been marked as paid\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public final Identification id;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code MarkCommand} with the given identification.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param id The identification of the reservation to be marked as paid.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public MarkCommand(Identification id) {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(id);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Executes the command to mark a reservation as paid.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param model The model containing the reservation data.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return A {@code CommandResult} indicating the success message.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws CommandException If the reservation cannot be found.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Reservation reservationToMark \u003d Identification.getReservationUsingId(id, model);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (reservationToMark.getIsPaid()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MARK);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Reservation markedReservation \u003d reservationToMark.toPaid();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.setReservation(reservationToMark, markedReservation);","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_RESERVATION_SUCCESS,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                Messages.format(reservationToMark)));","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-14","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // of type MarkCommand:","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        //Mark command are equal as long as their id are equal","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this.id.equals(((MarkCommand) other).id);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-14","isFullCredit":false}],"authorContributionMap":{"geeliette":5,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESERVATIONS;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds or edits the remark of the reservation \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"geeliette"},"content":"            + \"identified by the ID used in the displayed reservation list. \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"geeliette"},"content":"            + \"Parameters: ID ([6 figures of date (ie: ddMMyyyy) of TODAY or TOMORROW] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"+ [last 4 digits of customer phone number (ie: xxxx)] \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"+ [time of reservation in HHMM format]) \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"geeliette"},"content":"            + \"Example: \" + COMMAND_WORD + \" 0402202598761700 \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"geeliette"},"content":"            + PREFIX_REMARK + \"Likes milk and cheese\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to reservation: %1$s\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from reservation: %1$s\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Identification id;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Remark remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param id of the reservation in the filtered reservation list to edit the remark","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param remark of the reservation to be updated to","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public RemarkCommand(Identification id, Remark remark) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(id, remark);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Reservation reservationToEdit \u003d Identification.getReservationUsingId(id, model);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Reservation editedReservation \u003d new Reservation(reservationToEdit.getName(), reservationToEdit.getPhone(),","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                reservationToEdit.getDate(), reservationToEdit.getTime(), reservationToEdit.getDuration(),","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                reservationToEdit.getPax(), reservationToEdit.getTable(), remark, reservationToEdit.getTags(),","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                reservationToEdit.getId(), reservationToEdit.getIsPaid());","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        model.setReservation(reservationToEdit, editedReservation);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(PREDICATE_SHOW_ALL_RESERVATIONS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedReservation));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code reservationToEdit}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Reservation reservationToEdit) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return String.format(message, Messages.format(reservationToEdit));","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return id.equals(e.id)","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-09","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-09","isFullCredit":false}],"authorContributionMap":{"geeliette":5,"-":83}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Unmarks a reservation as paid based on the given identification.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the reservation as unpaid \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"geeliette"},"content":"            + \"identified by the ID used in the displayed reservation list.\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"geeliette"},"content":"            + \"Parameters: ID ([6 figures of date (ie: ddMMyyyy) of TODAY or TOMORROW] \"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"+ [last 4 digits of customer phone number (ie: xxxx)] \"","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"            + \"+ [time of reservation in HHMM format])\\n\"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"geeliette"},"content":"            + \"Example: \" + COMMAND_WORD + \" 0402202598761700\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"geeliette"},"content":"    public static final String MESSAGE_UNMARK_RESERVATION_SUCCESS \u003d \"Successfully marks the reservation as unpaid\";","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_UNMARK \u003d \"The reservation has already been mark as unpaid\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Identification id;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code UnmarkCommand} with the given identification.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param id The identification of the reservation to be unmarked as paid.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public UnmarkCommand(Identification id) {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(id);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Executes the command to unmark a reservation as paid.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param model The model containing the reservation data.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return A {@code CommandResult} indicating the success message.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws CommandException If the reservation cannot be found.","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Reservation reservationToUnmark \u003d Identification.getReservationUsingId(id, model);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!reservationToUnmark.getIsPaid()) {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_UNMARK);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Reservation unmarkedReservation \u003d reservationToUnmark.toUnpaid();","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        model.setReservation(reservationToUnmark, unmarkedReservation);","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_RESERVATION_SUCCESS,","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"                Messages.format(reservationToUnmark)));","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof UnmarkCommand)) {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this.id.equals(((UnmarkCommand) other).id);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-19","isFullCredit":false}],"authorContributionMap":{"geeliette":6,"-":61}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAX;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-19","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_DATE, PREFIX_TIME, PREFIX_DURATION,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"                        PREFIX_PAX, PREFIX_TABLE, PREFIX_TAG);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_DATE, PREFIX_TIME, PREFIX_DURATION,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                PREFIX_PAX, PREFIX_TABLE)","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_DATE, PREFIX_TIME, PREFIX_DURATION,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"                PREFIX_PAX, PREFIX_TABLE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StartDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        StartTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Duration duration \u003d ParserUtil.parseDuration(argMultimap.getValue(PREFIX_DURATION).get());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Pax pax \u003d ParserUtil.parsePax(argMultimap.getValue(PREFIX_PAX).get());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Table table \u003d ParserUtil.parseTable(argMultimap.getValue(PREFIX_TABLE).get());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Make use of current date ddMMyyyy and last 4 digits of phone and current reservation count","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // to form a unique key id","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(date, phone, time);","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Reservation reservation \u003d new Reservation(name, phone, date, time, duration, pax,","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"                table, remark, tagList, id, false);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new AddCommand(reservation);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns the value associated with the specified {@code prefix} in the given {@code argumentMultimap},","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * or an empty string if no value is present.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param argumentMultimap The map containing prefix-value mappings.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param prefix The prefix whose associated value is to be returned.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @return The last value associated with the prefix, or an empty string if not present.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private String getValueOrEmpty(ArgumentMultimap argumentMultimap, Prefix prefix) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Optional\u003cString\u003e optionalValue \u003d argumentMultimap.getValue(prefix);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return optionalValue.orElse(\"\");","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05","isFullCredit":false}],"authorContributionMap":{"-":91,"Frozennfishh":3}},{"path":"src/main/java/seedu/address/logic/parser/FindByTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindByTimeCommand;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.TimeMatchesPredicate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input argument and creates a new FindByTimeCommand object","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindByTimeCommandParser implements Parser\u003cFindByTimeCommand\u003e {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given argument in the context of the FindByTimeCommand","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a FindByTimeCommand object for execution.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindByTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindByTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String[] timeKeyword \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (timeKeyword.length !\u003d 1) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindByTimeCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"geeliette"},"content":"        if (!StartTime.isValidTime(timeKeyword[0])) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"geeliette"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"geeliette"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"geeliette"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        LocalTime searchTime \u003d LocalTime.parse(timeKeyword[0], TIME_FORMATTER);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new FindByTimeCommand(new TimeMatchesPredicate(searchTime));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"geeliette":5,"-":40}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"      * Parses {@code IDstr} into an {@code Identification} and returns it.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"      * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"      * @throws ParseException if the specified id is invalid (not correctly formatted).","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"      */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Identification parseID(String idString) throws ParseException {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedID \u003d idString.trim();","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!Identification.isValidId(trimmedID)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(Identification.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Identification(trimmedID);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String date} into an {@code StartDate}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static StartDate parseDate(String date) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!StartDate.isValidDate(trimmedDate) || !StartDate.isValidDateRange(trimmedDate)) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new StartDate(trimmedDate);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String time} into an {@code StartTime}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static StartTime parseTime(String time) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(time);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!StartTime.isValidTime(trimmedTime)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new StartTime(trimmedTime);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String duration} into an {@code Duration}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code duration} is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Duration parseDuration(String duration) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(duration);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Duration.isValidDuration(trimmedDuration)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Duration(trimmedDuration);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String pax} into an {@code Pax}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code pax} is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Pax parsePax(String pax) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(pax);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedPax \u003d pax.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Pax.isValidPax(trimmedPax)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Pax.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Pax(trimmedPax);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String table} into an {@code Table}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code table} is invalid.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static Table parseTable(String table) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(table);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String trimmedTable \u003d table.trim();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!Table.isValidTable(trimmedTable)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new ParseException(Table.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return new Table(trimmedTable);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Parses a {@code String Remark} into an {@code Remark}.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Frozennfishh"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"Frozennfishh"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Frozennfishh"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11","isFullCredit":false}],"authorContributionMap":{"-":182,"Frozennfishh":4}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments and returns a {@code RemarkCommand} object","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * for execution.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param args The input arguments.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return A {@code RemarkCommand} object.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If the user input does not conform to the expected format.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                PREFIX_REMARK);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Identification id;","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            id \u003d ParserUtil.parseID(argMultimap.getPreamble());","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REMARK)) {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"        }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_REMARK);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"        return new RemarkCommand(id, remark);","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"-":42,"Frozennfishh":19}},{"path":"src/main/java/seedu/address/model/GastroBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.UniqueReservationList;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class GastroBook implements ReadOnlyGastroBook {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniqueReservationList reservations;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        reservations \u003d new UniqueReservationList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GastroBook() {}","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public GastroBook(ReadOnlyGastroBook toBeCopied) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the reservation list with {@code reservation}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code reservations} must not contain duplicate reservations.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setReservations(List\u003cReservation\u003e reservations) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.reservations.setReservations(reservations);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyGastroBook newData) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setReservations(newData.getReservationList());","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasReservation(Reservation reservation) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(reservation);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return reservations.contains(reservation);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a reservation to the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The reservation must not already exist in the address book.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addReservation(Reservation p) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        reservations.add(p);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given reservation {@code target} in the list with {@code editedReservation}.","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The reservation identity of {@code editedReservation} must not be the same as another","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * existing reservation in the address book.","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setReservation(Reservation target, Reservation editedReservation) {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(editedReservation);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        reservations.setReservation(target, editedReservation);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void removeReservation(Reservation key) {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        reservations.remove(key);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .add(\"persons\", reservations)","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ObservableList\u003cReservation\u003e getReservationList() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return reservations.asUnmodifiableObservableList();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof GastroBook)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        GastroBook otherGastroBook \u003d (GastroBook) other;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return reservations.equals(otherGastroBook.reservations);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return reservations.hashCode();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"-":130,"Jasonzhou97":1}},{"path":"src/main/java/seedu/address/model/reservation/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a reservation duration in the system.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Ensures that the duration follows the specified constraints.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Duration must be a positive number in half-hour intervals (e.g., 0.5, 1, 1.5, 2, etc.).","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duration {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"            \"Duration must be a floating-point value and in the form of an hour or half an hour interval, \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"                    + \"at least 0.5 and at most 12\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0\\\\.5|1|1\\\\.5|2|2\\\\.5|3|3\\\\.5|4|4\\\\.5|5|5\\\\.5|6|6\\\\.5|7|7\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\\.5|8|8\\\\.5|9|9\\\\.5|10|10\\\\.5|11|11\\\\.5|12)$\";","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Duration}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param duration A valid Duration.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Duration(String duration) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(duration);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidDuration(duration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        value \u003d duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid duration.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidDuration(String test) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns this Duration\u0027s value (in hours) as minutes.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public int toMinutes() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return (int) (Double.parseDouble(value) * 60);","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Duration)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Duration otherDuration \u003d (Duration) other;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.equals(otherDuration.value);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"-":66,"Frozennfishh":3}},{"path":"src/main/java/seedu/address/model/reservation/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"            \"Names should only contain printable Unicode-Characters between 1 - 30 characters,\"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"                    + \" and it should not be blank\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[\\\\P{Cntrl}]{1,30}$\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private String fullName;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Construct a default fullName for UI booting up.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        fullName \u003d \"\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getFullName() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this.fullName;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toLowerCase() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.toLowerCase();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":81,"Frozennfishh":3}},{"path":"src/main/java/seedu/address/model/reservation/Pax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the number of people (pax) in a reservation.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Ensures that the value is a valid positive integer greater than zero.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Pax {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"            \"Pax number must be of numeric values only, at least 1 and at most 9999\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-9]\\\\d{0,3}$\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Pax}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param pax A valid number of people.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Pax(String pax) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(pax);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPax(pax), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid number of people.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPax(String test) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Pax)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Pax otherPax \u003d (Pax) other;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPax.value);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"-":58,"Frozennfishh":2}},{"path":"src/main/java/seedu/address/model/reservation/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"            \"Phone must be of numeric only and length must be at least 4 and at most 20\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4,20}\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Construct a default Phone for UI booting up.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Phone() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        value \u003d \"\";","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String getLastFourDigitsString() {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this.value.substring(value.length() - 4);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":71,"Frozennfishh":2}},{"path":"src/main/java/seedu/address/model/reservation/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Remark {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}\\\\s]{0,30}\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark must be of alphanumeric only and \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"            + \"length must be at least 1 and at most 30\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code Remark} object with the specified remark text.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param remark The remark text. Must not be null.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Remark(String remark) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(remark);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        value \u003d remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"     * Returns true if a given string is a valid remark.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"     */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"-":38,"Frozennfishh":10}},{"path":"src/main/java/seedu/address/model/reservation/StartDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a start date in a reservation.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Ensures that the date follows the valid format: DD/MM/YYYY with leading zeros for single digits.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StartDate {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"            \"Date must be of today or tomorrow only in the format of dd/MM/yyyy, with leading 0 for single digits\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:(?:31/(?:0[13578]|1[02]))|\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"(?:(?:29|30)/(?:0[13-9]|1[0-2]))|\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"(?:29/02/(?:(?:(?:1[6-9]|[2-9]\\\\d)\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"(?:0[48]|[2468][048]|[13579][26]))\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"|(?:(?:16|[2468][048]|[3579][26])00)))|\"","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"(?:0[1-9]|1\\\\d|2[0-8])/(?:0[1-9]|1[0-2]))/(?:1\\\\d{3}|[2-9]\\\\d{3})$\";","lastModifiedDate":"2025-03-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonzhou97"},"content":"    // Flag to bypass date range validation during sample data initialization","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonzhou97"},"content":"    private static boolean bypassDateRangeValidation \u003d false;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param date A valid Date.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public StartDate(String date) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(date);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonzhou97"},"content":"        // Always check format validity","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonzhou97"},"content":"        // Check date range only if bypass is not enabled to","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonzhou97"},"content":"        if (!bypassDateRangeValidation) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonzhou97"},"content":"            checkArgument(isValidDateRange(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonzhou97"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d date;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonzhou97"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonzhou97"},"content":"     * Enables bypass for date range validation (for sample data initialization).","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonzhou97"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonzhou97"},"content":"    public static void enableBypassForSampleData() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonzhou97"},"content":"        bypassDateRangeValidation \u003d true;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonzhou97"},"content":"    /**","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonzhou97"},"content":"     * Disables bypass for date range validation for sample data injection.","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonzhou97"},"content":"     */","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonzhou97"},"content":"    public static void disableBypassForSampleData() {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonzhou97"},"content":"        bypassDateRangeValidation \u003d false;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns this StartDate\u0027s value (in \"dd/MM/yyyy\" format) as a LocalDate object.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public LocalDate toLocalDate() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return LocalDate.parse(value, dateFormatter);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toWithoutSlashString() {","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return value.replace(\"/\", \"\");","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-15","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof StartDate)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        StartDate otherDate \u003d (StartDate) other;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return value.equals(otherDate.value);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Validates whether the given date string corresponds to today\u0027s or tomorrow\u0027s date.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param userInputDate The date string to validate, expected in the format \"dd/MM/yyyy\".","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return {@code true} if the date matches today\u0027s or tomorrow\u0027s date, otherwise {@code false}.","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static boolean isValidDateRange(String userInputDate) {","lastModifiedDate":"2025-03-18","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String dateToday \u003d date.format(formatter);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String dateTomorrow \u003d date.plusDays(1).format(formatter);","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Objects.equals(userInputDate, dateToday) \u0026\u0026 !Objects.equals(userInputDate, dateTomorrow)) {","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"-":96,"Jasonzhou97":25,"Frozennfishh":1}},{"path":"src/main/java/seedu/address/model/reservation/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a start time in a reservation.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Ensures that the time follows the valid 24-hour format: HHMM.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StartTime {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"            \"Time must be of 24 hour format in the form of HHMM\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:[01]\\\\d|2[0-3])[0-5]\\\\d$\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param time A valid Time.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public StartTime(String time) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(time);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d time;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a time.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns this StartTime\u0027s value (in \"HHmm\" format) as a LocalTime object.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LocalTime toLocalTime() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return LocalTime.parse(value, timeFormatter);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof StartTime)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StartTime otherTime \u003d (StartTime) other;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.equals(otherTime.value);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"-":68,"Frozennfishh":1}},{"path":"src/main/java/seedu/address/model/reservation/Table.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a table in a reservation system.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Ensures that the table number follows the valid format:","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * a capital letter followed by 1 to 3 digits.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Table {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"            \"Table number must be in the form of 1 uppercase English letter followed by 1-3 digits\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Z]\\\\d{1,3}$\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Table}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param table A valid Table.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Table(String table) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(table);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTable(table), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a table.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTable(String test) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Table)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Table otherTable \u003d (Table) other;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.equals(otherTable.value);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"-":60,"Frozennfishh":1}},{"path":"src/main/java/seedu/address/model/reservation/TimeMatchesPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests whether a reservation is ongoing at a specified time.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A reservation is considered ongoing if its start time is at or before the search time,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":" * and its end time (start time + duration) is after the search time.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class TimeMatchesPredicate implements Predicate\u003cReservation\u003e {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final LocalTime searchTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TimeMatchesPredicate(LocalTime searchTime) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.searchTime \u003d searchTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public boolean test(Reservation reservation) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        LocalTime startTime \u003d reservation.getTime().toLocalTime();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"        int durationMinutes \u003d reservation.getDuration().toMinutes();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        LocalTime endTime \u003d startTime.plusMinutes(durationMinutes);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"geeliette"},"content":"        // If reservation spans overnight, clip endTime to 11:59","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"geeliette"},"content":"        if (endTime.isBefore(startTime)) {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"geeliette"},"content":"            endTime \u003d LocalTime.of(23, 59, 59);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"geeliette"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"geeliette"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // The reservation is ongoing at searchTime if startTime \u003c\u003d searchTime \u003c endTime.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return !startTime.isAfter(searchTime) \u0026\u0026 searchTime.isBefore(endTime);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!(other instanceof TimeMatchesPredicate)) {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        TimeMatchesPredicate otherPredicate \u003d (TimeMatchesPredicate) other;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return searchTime.equals(otherPredicate.searchTime);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"searchTime\", searchTime).toString();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"geeliette":5,"-":47}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag must be of alphanumeric only and \"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"            + \"length must be at least 1 and at most 15\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}{1,15}\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24","isFullCredit":false}],"authorContributionMap":{"-":60,"Frozennfishh":3}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Duration;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Pax;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Table;","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Reservation[] getSampleReservations() {","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Reservation[] {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonzhou97"},"content":"            new Reservation(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonzhou97"},"content":"                        new Name(\"Vincent Oh\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonzhou97"},"content":"                        new Phone(\"87438807\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonzhou97"},"content":"                        new StartDate(\"01/04/2025\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonzhou97"},"content":"                        new StartTime(\"1830\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonzhou97"},"content":"                        new Duration(\"2\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonzhou97"},"content":"                        new Pax(\"4\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonzhou97"},"content":"                        new Table(\"A1\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonzhou97"},"content":"                        new Remark(\"Anniversary dinner\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonzhou97"},"content":"                        getTagSet(\"VIP\", \"Window\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonzhou97"},"content":"                        new Identification(\"1004202588071830\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonzhou97"},"content":"                        false","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonzhou97"},"content":"                ),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonzhou97"},"content":"            new Reservation(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonzhou97"},"content":"                        new Name(\"Damith the Legend\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonzhou97"},"content":"                        new Phone(\"99272758\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonzhou97"},"content":"                        new StartDate(\"01/04/2025\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonzhou97"},"content":"                        new StartTime(\"1900\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonzhou97"},"content":"                        new Duration(\"2\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonzhou97"},"content":"                        new Pax(\"2\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonzhou97"},"content":"                        new Table(\"B3\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonzhou97"},"content":"                        new Remark(\"No nuts - allergy\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonzhou97"},"content":"                        getTagSet(\"VIP\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Jasonzhou97"},"content":"                        new Identification(\"0104202527581900\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonzhou97"},"content":"                        true","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonzhou97"},"content":"                ),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonzhou97"},"content":"            new Reservation(","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonzhou97"},"content":"                        new Name(\"Ronaldo\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonzhou97"},"content":"                        new Phone(\"77777777\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonzhou97"},"content":"                        new StartDate(\"25/03/2025\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonzhou97"},"content":"                        new StartTime(\"1230\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonzhou97"},"content":"                        new Duration(\"2\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonzhou97"},"content":"                        new Pax(\"6\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonzhou97"},"content":"                        new Table(\"C2\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonzhou97"},"content":"                        new Remark(\"Birthday celebration\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonzhou97"},"content":"                        getTagSet(\"Birthday\", \"Large\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonzhou97"},"content":"                        new Identification(\"2503202577771215\"),","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonzhou97"},"content":"                        false","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonzhou97"},"content":"                )","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static ReadOnlyGastroBook getSampleAddressBook() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonzhou97"},"content":"        try {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Jasonzhou97"},"content":"            // Enable bypass for sample data","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Jasonzhou97"},"content":"            StartDate.enableBypassForSampleData();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"            GastroBook sampleAb \u003d new GastroBook();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"            for (Reservation sampleReservation : getSampleReservations()) {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"                sampleAb.addReservation(sampleReservation);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return sampleAb;","lastModifiedDate":"2017-04-07","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Jasonzhou97"},"content":"        } finally {","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonzhou97"},"content":"            // Always disable bypass after creating sample data","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonzhou97"},"content":"            StartDate.disableBypassForSampleData();","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20","isFullCredit":false}],"authorContributionMap":{"-":42,"Jasonzhou97":54}},{"path":"src/main/java/seedu/address/storage/GastroBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link GastroBook}.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface GastroBookStorage {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"    Path getGastroBookFilePath();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"     * Returns GastroBook data as a {@link ReadOnlyGastroBook}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    Optional\u003cReadOnlyGastroBook\u003e readGastroBook() throws DataLoadingException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"     * @see #getGastroBookFilePath()","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"CVincent0907"},"content":"    Optional\u003cReadOnlyGastroBook\u003e readGastroBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyGastroBook} to the storage.","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"     * @param gastroBook cannot be null.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"CVincent0907"},"content":"    void saveGastroBook(ReadOnlyGastroBook gastroBook) throws IOException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"CVincent0907"},"content":"     * @see #saveGastroBook(ReadOnlyGastroBook)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"CVincent0907"},"content":"    void saveGastroBook(ReadOnlyGastroBook gastroBook, Path filePath) throws IOException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24","isFullCredit":false}],"authorContributionMap":{"CVincent0907":9,"-":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedReservation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Reservation}.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedReservation {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Reservation\u0027s %s field is missing!\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String date;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String time;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String id;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final boolean isPaid;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"     * Constructs a {@code JsonAdaptedReservation} with the given reservation details.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedReservation(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                                  @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                                  @JsonProperty(\"duration\") String duration, @JsonProperty(\"pax\") String pax,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                                  @JsonProperty(\"table\") String table, @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                                  @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"id\") String id,","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                                  @JsonProperty(\"isPaid\") Boolean isPaid) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.time \u003d time;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.pax \u003d pax;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.table \u003d table;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.id \u003d id;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.isPaid \u003d isPaid;","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"CVincent0907"},"content":"     * Converts a given {@code Reservation} into this class for Jackson use.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public JsonAdaptedReservation(Reservation source) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().getFullName();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        time \u003d source.getTime().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        duration \u003d source.getDuration().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        pax \u003d source.getPax().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        table \u003d source.getTable().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        isPaid \u003d source.getIsPaid();","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"CVincent0907"},"content":"     * Converts this Jackson-friendly adapted reservation object into the model\u0027s {@code Reservation} object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"CVincent0907"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted reservation.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Reservation toModelType() throws IllegalValueException {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                    StartDate.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!StartDate.isValidDate(date)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(StartDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jasonzhou97"},"content":"        // Enable bypass for date range validation to inject sample past data","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jasonzhou97"},"content":"        StartDate.enableBypassForSampleData();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonzhou97"},"content":"        final StartDate modelDate;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jasonzhou97"},"content":"        try {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jasonzhou97"},"content":"            modelDate \u003d new StartDate(date);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jasonzhou97"},"content":"        } finally {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jasonzhou97"},"content":"            // disable bypass after injecting the sample","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonzhou97"},"content":"            StartDate.disableBypassForSampleData();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonzhou97"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    StartTime.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!StartTime.isValidTime(time)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(StartTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final StartTime modelTime \u003d new StartTime(time);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    Duration.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!Duration.isValidDuration(duration)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Duration modelDuration \u003d new Duration(duration);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (pax \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Pax.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!Pax.isValidPax(pax)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Pax.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final Pax modelPax \u003d new Pax(pax);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (table \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Table.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!Table.isValidTable(table)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Table.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final Table modelTable \u003d new Table(table);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    Identification.class.getSimpleName()));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!Identification.isValidId(id)) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Identification.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"Jasonzhou97"},"content":"        // Use the existing modelDate, modelPhone, modelTime instead of creating new ones","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"Jasonzhou97"},"content":"        final Identification modelId \u003d new Identification(modelDate, modelPhone, modelTime);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return new Reservation(modelName, modelPhone, modelDate, modelTime, modelDuration, modelPax, modelTable,","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"-"},"content":"                modelRemark, modelTags, modelId, this.isPaid);","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"CVincent0907":4,"-":173,"Jasonzhou97":12}},{"path":"src/main/java/seedu/address/storage/JsonGastroBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"CVincent0907"},"content":" * A class to access GastroBook data stored as a json file on the hard disk.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonGastroBookStorage implements GastroBookStorage {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonGastroBookStorage.class);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonGastroBookStorage(Path filePath) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"    public Path getGastroBookFilePath() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"    public Optional\u003cReadOnlyGastroBook\u003e readGastroBook() throws DataLoadingException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"CVincent0907"},"content":"        return readGastroBook(filePath);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"CVincent0907"},"content":"     * Similar to {@link #readGastroBook()}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"    public Optional\u003cReadOnlyGastroBook\u003e readGastroBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"CVincent0907"},"content":"        Optional\u003cJsonSerializableGastroBook\u003e jsonGastroBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableGastroBook.class);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"CVincent0907"},"content":"        if (!jsonGastroBook.isPresent()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"CVincent0907"},"content":"            return Optional.of(jsonGastroBook.get().toModelType());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"CVincent0907"},"content":"    public void saveGastroBook(ReadOnlyGastroBook gastroBook) throws IOException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"        saveGastroBook(gastroBook, filePath);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"     * Similar to {@link #saveGastroBook(ReadOnlyGastroBook)}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"CVincent0907"},"content":"    public void saveGastroBook(ReadOnlyGastroBook gastroBook, Path filePath) throws IOException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"        requireNonNull(gastroBook);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"CVincent0907"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableGastroBook(gastroBook), filePath);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"CVincent0907":15,"-":65}},{"path":"src/main/java/seedu/address/storage/JsonSerializableGastroBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"CVincent0907"},"content":" * An Immutable GastroBook that is serializable to JSON format.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"CVincent0907"},"content":"@JsonRootName(value \u003d \"gastrobook\")","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableGastroBook {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"CVincent0907"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Reservation list contains duplicate reservation(s).\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedReservation\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"     * Constructs a {@code JsonSerializableGastroBook} with the given persons.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableGastroBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedReservation\u003e persons) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"CVincent0907"},"content":"     * Converts a given {@code ReadOnlyGastroBook} into this class for Jackson use.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"CVincent0907"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableGastroBook}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableGastroBook(ReadOnlyGastroBook source) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getReservationList()","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .stream().map(JsonAdaptedReservation::new).collect(Collectors.toList()));","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"CVincent0907"},"content":"     * Converts this gastro book into the model\u0027s {@code GastroBook} object.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public GastroBook toModelType() throws IllegalValueException {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        GastroBook gastroBook \u003d new GastroBook();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (JsonAdaptedReservation jsonAdaptedReservation : persons) {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Reservation reservation \u003d jsonAdaptedReservation.toModelType();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            if (gastroBook.hasReservation(reservation)) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            gastroBook.addReservation(reservation);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return gastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"CVincent0907":7,"-":54}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends GastroBookStorage, UserPrefsStorage {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"CVincent0907"},"content":"    Path getGastroBookFilePath();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"CVincent0907"},"content":"    Optional\u003cReadOnlyGastroBook\u003e readGastroBook() throws DataLoadingException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"CVincent0907"},"content":"    void saveGastroBook(ReadOnlyGastroBook gastroBook) throws IOException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25","isFullCredit":false}],"authorContributionMap":{"CVincent0907":3,"-":29}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyGastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"CVincent0907"},"content":" * Manages storage of GastroBook data in local storage.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private GastroBookStorage gastroBookStorage;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(GastroBookStorage gastroBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.gastroBookStorage \u003d gastroBookStorage;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"CVincent0907"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d GatroBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"CVincent0907"},"content":"    public Path getGastroBookFilePath() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"CVincent0907"},"content":"        return gastroBookStorage.getGastroBookFilePath();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"CVincent0907"},"content":"    public Optional\u003cReadOnlyGastroBook\u003e readGastroBook() throws DataLoadingException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"CVincent0907"},"content":"        return readGastroBook(gastroBookStorage.getGastroBookFilePath());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"CVincent0907"},"content":"    public Optional\u003cReadOnlyGastroBook\u003e readGastroBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"CVincent0907"},"content":"        return gastroBookStorage.readGastroBook(filePath);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"CVincent0907"},"content":"    public void saveGastroBook(ReadOnlyGastroBook gastroBook) throws IOException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"CVincent0907"},"content":"        saveGastroBook(gastroBook, gastroBookStorage.getGastroBookFilePath());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"CVincent0907"},"content":"    public void saveGastroBook(ReadOnlyGastroBook gastroBook, Path filePath) throws IOException {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"CVincent0907"},"content":"        gastroBookStorage.saveGastroBook(gastroBook, filePath);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08","isFullCredit":false}],"authorContributionMap":{"CVincent0907":12,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.testutil.TypicalReservations.ALICE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonzhou97"},"content":"/**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonzhou97"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonzhou97"},"content":" */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonzhou97"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonzhou97"},"content":"    public void constructor_nullReservation_throwsNullPointerException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonzhou97"},"content":"    public void execute_reservationAcceptedByModel_addSuccessful() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Reservation validReservation \u003d new ReservationBuilder().build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonzhou97"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Jasonzhou97"},"content":"        expectedModel.addReservation(validReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonzhou97"},"content":"        assertCommandSuccess(new AddCommand(validReservation), model,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonzhou97"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validReservation)),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonzhou97"},"content":"                expectedModel);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonzhou97"},"content":"    public void execute_duplicateReservation_throwsCommandException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonzhou97"},"content":"        Reservation validReservation \u003d new ReservationBuilder().build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonzhou97"},"content":"        model.addReservation(validReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonzhou97"},"content":"        assertCommandFailure(new AddCommand(validReservation), model,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonzhou97"},"content":"                AddCommand.MESSAGE_DUPLICATE_RESERVATION);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonzhou97"},"content":"    public void execute_addingPersonToPersonsList() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Reservation validReservation \u003d new ReservationBuilder().build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validReservation);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonzhou97"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Jasonzhou97"},"content":"        expectedModel.addReservation(validReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Jasonzhou97"},"content":"        // Verify person is added to persons list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(expectedModel.hasPerson(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonzhou97"},"content":"                new seedu.address.model.reservation.Person(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonzhou97"},"content":"                        validReservation.getName(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonzhou97"},"content":"                        validReservation.getPhone())));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonzhou97"},"content":"        Reservation alice \u003d new ReservationBuilder(ALICE).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Reservation bob \u003d new ReservationBuilder().withName(\"Bob\").build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonzhou97"},"content":"        // different reservation -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12","isFullCredit":false}],"authorContributionMap":{"-":47,"Jasonzhou97":41}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonzhou97"},"content":"/**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonzhou97"},"content":" * Contains integration tests (interaction with the Model) for {@code ClearCommand}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonzhou97"},"content":" */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonzhou97"},"content":"    public void execute_emptyGastroBook_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08","isFullCredit":false}],"authorContributionMap":{"-":14,"Jasonzhou97":9}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DURATION;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PAX;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TABLE;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.NameContainsKeywordsPredicate;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditReservationDescriptorBuilder;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_DATE_AMY \u003d LocalDate.now().plusDays(1)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_DATE_BOB \u003d LocalDate.now().format(DateTimeFormatter","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .ofPattern(\"dd/MM/yyyy\"));;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TIME_AMY \u003d \"1800\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TIME_BOB \u003d \"2000\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_DURATION_AMY \u003d \"2\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_DURATION_BOB \u003d \"3\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_PAX_AMY \u003d \"2\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_PAX_BOB \u003d \"4\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TABLE_AMY \u003d \"A1\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TABLE_BOB \u003d \"B1\";","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"geeliette"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Likes cheese.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"geeliette"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite meat: chicken\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_ID_AMY \u003d VALID_DATE_AMY.replace(\"/\", \"\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + VALID_PHONE_AMY.substring(VALID_PHONE_AMY.length() - 4)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + VALID_TIME_AMY;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_ID_BOB \u003d VALID_DATE_BOB.replace(\"/\", \"\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + VALID_PHONE_BOB.substring(VALID_PHONE_BOB.length() - 4)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + VALID_TIME_BOB;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TIME_DESC_AMY \u003d \" \" + PREFIX_TIME + VALID_TIME_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TIME_DESC_BOB \u003d \" \" + PREFIX_TIME + VALID_TIME_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String DURATION_DESC_AMY \u003d \" \" + PREFIX_DURATION + VALID_DURATION_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String DURATION_DESC_BOB \u003d \" \" + PREFIX_DURATION + VALID_DURATION_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PAX_DESC_AMY \u003d \" \" + PREFIX_PAX + VALID_PAX_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PAX_DESC_BOB \u003d \" \" + PREFIX_PAX + VALID_PAX_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TABLE_DESC_AMY \u003d \" \" + PREFIX_TABLE + VALID_TABLE_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String TABLE_DESC_BOB \u003d \" \" + PREFIX_TABLE + VALID_TABLE_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"            + \"James\u0026James\u0026James\u0026James\u0026James\u0026James\u0026James\u0026James\u0026James\u0026James\u0026\"; // name length exceeded","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_PAX_DESC \u003d \" \" + PREFIX_PAX + \"s\"; // \u0027s\u0027 not allowed in pax","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_TIME_DESC \u003d \" \" + PREFIX_TIME","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"            + \"2500\"; // \u0027invalid 24 hr format\u0027 not allowed in tags","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditReservationDescriptor DESC_AMY;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditReservationDescriptor DESC_BOB;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditReservationDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withDate(VALID_DATE_AMY).withTime(VALID_TIME_AMY)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withDuration(VALID_DURATION_AMY).withPax(VALID_PAX_AMY).withTable(VALID_TABLE_AMY)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).withId(VALID_DATE_AMY, VALID_PHONE_AMY, VALID_TIME_AMY).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditReservationDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withDate(VALID_DATE_BOB).withTime(VALID_TIME_BOB)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withDuration(VALID_DURATION_BOB).withPax(VALID_PAX_BOB).withTable(VALID_TABLE_BOB)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).withId(VALID_DATE_BOB, VALID_PHONE_BOB, VALID_TIME_BOB).build();","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        GastroBook expectedGastroBook \u003d new GastroBook(actualModel.getAddressBook());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"        List\u003cReservation\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredReservationList());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedGastroBook, actualModel.getAddressBook());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredReservationList());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredReservationList().size());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Reservation reservation \u003d model.getFilteredReservationList().get(targetIndex.getZeroBased());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d reservation.getName().getFullName().split(\"\\\\s+\");","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredReservationList().size());","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"geeliette":2,"-":159,"Frozennfishh":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonzhou97"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonzhou97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.PersonsList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Person;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonzhou97"},"content":" * Contains integration tests (interaction with the Model) for {@code DeleteCommand}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Jasonzhou97"},"content":"    private Model model;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonzhou97"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonzhou97"},"content":"    private Reservation testReservation;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonzhou97"},"content":"    private Identification testId;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonzhou97"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonzhou97"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonzhou97"},"content":"        // Create model and add a test reservation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Jasonzhou97"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Jasonzhou97"},"content":"        expectedModel \u003d new ModelManager();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonzhou97"},"content":"        // Create a test reservation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonzhou97"},"content":"        testReservation \u003d new ReservationBuilder().build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonzhou97"},"content":"        testId \u003d testReservation.getId();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonzhou97"},"content":"        // Add the reservation to the model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonzhou97"},"content":"        model.addReservation(testReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonzhou97"},"content":"        expectedModel.addReservation(testReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonzhou97"},"content":"    public void execute_validId_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Jasonzhou97"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(testId);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Jasonzhou97"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_RESERVATION_SUCCESS,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Jasonzhou97"},"content":"                Messages.format(testReservation));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonzhou97"},"content":"        // Delete from expected model","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Jasonzhou97"},"content":"        expectedModel.deleteReservation(testReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Jasonzhou97"},"content":"        expectedModel.updatePersonsListAfterDelete(testReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonzhou97"},"content":"     * Helper method to get a person\u0027s booking count from the model\u0027s persons list","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonzhou97"},"content":"    private int getBookingCount(Model model, Name name, Phone phone) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Jasonzhou97"},"content":"        PersonsList personsList \u003d model.getPersonsList();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Jasonzhou97"},"content":"        for (Person person : personsList.getRegularCustomers()) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Jasonzhou97"},"content":"            if (person.getName().equals(name) \u0026\u0026 person.getPhone().equals(phone)) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonzhou97"},"content":"                return person.getCounter();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonzhou97"},"content":"            }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonzhou97"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonzhou97"},"content":"        return 0;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05","isFullCredit":false}],"authorContributionMap":{"-":25,"Jasonzhou97":45}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DURATION_BOB;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalReservations.ALICE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"geeliette"},"content":"import static seedu.address.testutil.TypicalReservations.getTypicalGastroBook;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditReservationDescriptorBuilder;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"geeliette"},"content":"    private Model model \u003d new ModelManager(getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Reservation editedReservation \u003d ALICE;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        EditCommand.EditReservationDescriptor descriptor \u003d new EditReservationDescriptorBuilder(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"            editedReservation).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(editedReservation.getId(), descriptor);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"            EditCommand.MESSAGE_EDIT_RESERVATION_SUCCESS,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"            Messages.format(editedReservation));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new GastroBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.setReservation(model.getFilteredReservationList().get(0), editedReservation);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Reservation lastReservation \u003d model.getFilteredReservationList().get(1); // BENSON","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ReservationBuilder personInList \u003d new ReservationBuilder(lastReservation);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Reservation editedReservation \u003d personInList.withName(VALID_NAME_BOB).withDuration(VALID_DURATION_BOB)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditCommand.EditReservationDescriptor descriptor \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new EditReservationDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withDuration(VALID_DURATION_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(lastReservation.getId(), descriptor);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESERVATION_SUCCESS,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Messages.format(editedReservation));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new GastroBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.setReservation(lastReservation, editedReservation);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Reservation editedReservation \u003d model.getFilteredReservationList().get(1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(editedReservation.getId(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new EditCommand.EditReservationDescriptor());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESERVATION_SUCCESS,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.format(editedReservation));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new GastroBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        //  showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Reservation reservationInFilteredList \u003d model.getFilteredReservationList()","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .get(1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Reservation editedReservation \u003d new ReservationBuilder(reservationInFilteredList)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(reservationInFilteredList.getId(),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditReservationDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_RESERVATION_SUCCESS,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.format(editedReservation));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new GastroBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setReservation(model.getFilteredReservationList().get(1), editedReservation);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08","isFullCredit":false}],"authorContributionMap":{"geeliette":2,"-":99}},{"path":"src/test/java/seedu/address/logic/commands/EditReservationDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class EditReservationDescriptorTest {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05","isFullCredit":false}],"authorContributionMap":{"-":15,"Jasonzhou97":1}},{"path":"src/test/java/seedu/address/logic/commands/FindByNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_RESERVATIONS_LISTED;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_RESERVATIONS_LISTED_OVERVIEW;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"geeliette"},"content":"import static seedu.address.testutil.TypicalReservations.getTypicalGastroBook;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.NameContainsKeywordsPredicate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindByNameCommandTest {","lastModifiedDate":"2025-03-24","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"geeliette"},"content":"        model \u003d new ModelManager(getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"geeliette"},"content":"        expectedModel \u003d new ModelManager(getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_singleKeyword_matchesOneOrMore() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        FindByNameCommand command \u003d new FindByNameCommand(predicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredReservationList(reservation -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                predicate.test(reservation)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u0026\u0026 StartDate.isValidDateRange(reservation.getDate().value));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(MESSAGE_RESERVATIONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"                model.getFilteredReservationList().size()), result.getFeedbackToUser());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_caseInsensitive() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"benson\", \"daniel\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        FindByNameCommand command \u003d new FindByNameCommand(predicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredReservationList(reservation -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"                predicate.test(reservation)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"                        \u0026\u0026 StartDate.isValidDateRange(reservation.getDate().value));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(String.format(MESSAGE_RESERVATIONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                model.getFilteredReservationList().size()), result.getFeedbackToUser());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_noMatchingNames_returnsEmptyList() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Zelda\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        FindByNameCommand command \u003d new FindByNameCommand(predicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredReservationList(reservation -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"                predicate.test(reservation)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"                        \u0026\u0026 StartDate.isValidDateRange(reservation.getDate().value));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(MESSAGE_NO_RESERVATIONS_LISTED, result.getFeedbackToUser());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_partialNameKeyword_doesNotMatch() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // \"Ali\" should NOT match \"Alice\"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Ali\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindByNameCommand command \u003d new FindByNameCommand(predicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredReservationList(reservation -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"                predicate.test(reservation)","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"                        \u0026\u0026 StartDate.isValidDateRange(reservation.getDate().value));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(MESSAGE_NO_RESERVATIONS_LISTED, result.getFeedbackToUser());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate1 \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate2 \u003d","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Bob\"));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"        FindByNameCommand command1 \u003d new FindByNameCommand(predicate1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"        FindByNameCommand command2 \u003d new FindByNameCommand(predicate1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"        FindByNameCommand command3 \u003d new FindByNameCommand(predicate2);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(command1, command1); // same object","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(command1, command2); // same predicate","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(command1.equals(null), false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(command1.equals(\"not a command\"), false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(command1.equals(command3), false); // different predicate","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"geeliette":3,"-":111}},{"path":"src/test/java/seedu/address/logic/commands/FindByTimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_RESERVATIONS_LISTED;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_RESERVATIONS_LISTED_OVERVIEW;","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"geeliette"},"content":"import static seedu.address.testutil.TypicalReservations.getTypicalGastroBook;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.LocalTime;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.TimeMatchesPredicate;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindByTimeCommandTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"geeliette"},"content":"    private Model model \u003d new ModelManager(getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"geeliette"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_matchingTimeToday_reservationsFound() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        LocalTime queryTime \u003d LocalTime.of(14, 30);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        //Should match BENSON","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        TimeMatchesPredicate predicate \u003d new TimeMatchesPredicate(queryTime);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindByTimeCommand command \u003d new FindByTimeCommand(predicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredReservationList(reservation -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"                reservation.getDate().toLocalDate().equals(LocalDate.now())","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u0026\u0026 predicate.test(reservation));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_RESERVATIONS_LISTED_OVERVIEW,","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        model.getFilteredReservationList().size()),","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"                result.getFeedbackToUser());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_timeWithNoOngoingReservations_noResults() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        LocalTime queryTime \u003d LocalTime.of(22, 0);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        //No Reservation should match","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        TimeMatchesPredicate predicate \u003d new TimeMatchesPredicate(queryTime);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindByTimeCommand command \u003d new FindByTimeCommand(predicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredReservationList(reservation -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"                reservation.getDate().toLocalDate().equals(LocalDate.now())","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u0026\u0026 predicate.test(reservation));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(MESSAGE_NO_RESERVATIONS_LISTED, result.getFeedbackToUser());","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_matchingTimeToday_multipleReservationsFound() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        LocalTime queryTime \u003d LocalTime.of(12, 30);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        //Should match DANIEL and FIONA","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        TimeMatchesPredicate predicate \u003d new TimeMatchesPredicate(queryTime);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindByTimeCommand command \u003d new FindByTimeCommand(predicate);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredReservationList(reservation -\u003e","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"                reservation.getDate().toLocalDate().equals(LocalDate.now())","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        \u0026\u0026 predicate.test(reservation));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(2, model.getFilteredReservationList().size());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_RESERVATIONS_LISTED_OVERVIEW, 2),","lastModifiedDate":"2025-04-02","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"                result.getFeedbackToUser());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"        TimeMatchesPredicate predicate1 \u003d new TimeMatchesPredicate(LocalTime.of(12, 0));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"        TimeMatchesPredicate predicate2 \u003d new TimeMatchesPredicate(LocalTime.of(13, 0));","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindByTimeCommand command1 \u003d new FindByTimeCommand(predicate1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindByTimeCommand command2 \u003d new FindByTimeCommand(predicate1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindByTimeCommand command3 \u003d new FindByTimeCommand(predicate2);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(command1, command2);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(command1, command1);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(command1.equals(null), false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(command1.equals(\"not a command\"), false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(command1.equals(command3), false);","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-04-01","isFullCredit":false}],"authorContributionMap":{"geeliette":3,"-":90}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalReservations;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"geeliette"},"content":"        model \u003d new ModelManager(TypicalReservations.getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // When list is not filtered, executing list command should show the same list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(ListCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Check that the model\u0027s filtered list matches the expected model\u0027s filtered list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Check that the predicate is set to show all reservations","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredReservationList().size() \u003e 0);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsAllReservations() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // First filter the list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(reservation -\u003e false);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Execute list command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(ListCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Check that all reservations are shown after executing list command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Check that the predicate is set to show all reservations","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredReservationList().size() \u003d\u003d expectedModel.getFilteredReservationList().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_showsEmptyList() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Create models with empty address book","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(new GastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(new GastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Execute list command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(ListCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Check that the filtered list is empty","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e listCommand.execute(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12","isFullCredit":false}],"authorContributionMap":{"geeliette":1,"-":85}},{"path":"src/test/java/seedu/address/logic/commands/ListRnCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESERVATIONS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.PersonsList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalReservations;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListRnCommand.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListRnCommandTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"geeliette"},"content":"        model \u003d new ModelManager(TypicalReservations.getTypicalGastroBook(), new PersonsList(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getPersonsList(), new UserPrefs());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Set up expected model to filter for tomorrow\u0027s reservations","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel.filterReservationsForTomorrow(PREDICATE_SHOW_ALL_RESERVATIONS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_showsTomorrowReservations() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // Execute ListRn command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListRnCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(ListRnCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Check that the model\u0027s filtered list matches the expected model\u0027s filtered list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // (which has been filtered for tomorrow\u0027s reservations)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_afterOtherFilterIsApplied_stillShowsTomorrowReservations() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // First apply a different filter","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(reservation -\u003e false);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Verify the list is filtered (should be empty)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Execute ListRn command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListRnCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(ListRnCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Check that the model\u0027s filtered list now matches the expected model\u0027s list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_showsEmptyList() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Create models with empty address book","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(new GastroBook(), new PersonsList(), new UserPrefs());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(new GastroBook(), new PersonsList(), new UserPrefs());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Execute ListRn command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListRnCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(ListRnCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Check that the filtered list is empty","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ListRnCommand listRnCommand \u003d new ListRnCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e listRnCommand.execute(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"geeliette":1,"-":86}},{"path":"src/test/java/seedu/address/logic/commands/ListRtCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_RESERVATIONS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.PersonsList;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalReservations;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListRtCommand.","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListRtCommandTest {","lastModifiedDate":"2025-03-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"geeliette"},"content":"        model \u003d new ModelManager(TypicalReservations.getTypicalGastroBook(), new PersonsList(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getPersonsList(), new UserPrefs());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Set up expected model to filter for today\u0027s reservations","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel.filterReservationsForToday(PREDICATE_SHOW_ALL_RESERVATIONS);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_showsTodayReservations() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // Execute ListRt command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListRtCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(ListRtCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Check that the model\u0027s filtered list matches the expected model\u0027s filtered list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // (which has been filtered for today\u0027s reservations)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_afterOtherFilterIsApplied_stillShowsTodayReservations() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Apply a different filter","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        model.updateFilteredReservationList(reservation -\u003e false);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Verify the list is filtered (should be empty)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Execute ListRt command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListRtCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(ListRtCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Check that the model\u0027s filtered list now matches the expected model\u0027s list","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_showsEmptyList() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Create models with empty address book","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(new GastroBook(), new PersonsList(), new UserPrefs());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(new GastroBook(), new PersonsList(), new UserPrefs());","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Execute ListRt command","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"        CommandResult result \u003d new ListRtCommand().execute(model);","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Check that the command result contains the correct message","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(ListRtCommand.MESSAGE_SUCCESS, result.getFeedbackToUser());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Check that the filtered list is empty","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(0, model.getFilteredReservationList().size());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel.getFilteredReservationList(), model.getFilteredReservationList());","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ListRtCommand listRtCommand \u003d new ListRtCommand();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e listRtCommand.execute(null));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-13","isFullCredit":false}],"authorContributionMap":{"geeliette":1,"-":86}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.MarkCommand.MESSAGE_DUPLICATE_MARK;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.MarkCommand.MESSAGE_MARK_RESERVATION_SUCCESS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"geeliette"},"content":"import static seedu.address.testutil.TypicalReservations.getTypicalGastroBook;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class MarkCommandTest {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"    private Model model \u003d new ModelManager(getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    //partition: id that exist and id that does not exist","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_validCommandAndId_success() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Reservation reservationToMark \u003d model.getFilteredReservationList().get(1);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(reservationToMark.getDate(), reservationToMark.getPhone(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"                reservationToMark.getTime());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        MarkCommand markCommand \u003d new MarkCommand(id);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MARK_RESERVATION_SUCCESS,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Messages.format(reservationToMark));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Reservation reservationMarked \u003d new ReservationBuilder(reservationToMark)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withPaymentStatus(true).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.setReservation(reservationToMark, reservationMarked);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_markPaidReservation_fail() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        //the reservation at index 5 is paid at the start","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Reservation reservationTomark \u003d model.getFilteredReservationList().get(5);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(reservationTomark.getDate(), reservationTomark.getPhone(),","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"                reservationTomark.getTime());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        MarkCommand markCommand \u003d new MarkCommand(id);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DUPLICATE_MARK,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                Messages.format(reservationTomark));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandFailure(markCommand, model, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_validCommandAndNotExistId_fail() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Reservation reservationToMark \u003d model.getFilteredReservationList().get(0);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(reservationToMark.getDate(), reservationToMark.getPhone(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"                new StartTime(\"2359\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"        MarkCommand markCommand \u003d new MarkCommand(id);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Input reservation id does not exist.\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandFailure(markCommand, model, expectedMessage);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"geeliette":2,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"geeliette"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"geeliette"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"geeliette"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"geeliette"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"geeliette"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"geeliette"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"geeliette"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"geeliette"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"geeliette"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"geeliette"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"geeliette"},"content":"import seedu.address.testutil.TypicalReservations;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonzhou97"},"content":" * Contains integration tests (interaction with the Model) for {@code RemarkCommand}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"geeliette"},"content":"    // Create a model using typical reservations.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"geeliette"},"content":"    private Model model \u003d new ModelManager(new GastroBook(TypicalReservations.getTypicalGastroBook()), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"geeliette"},"content":"    public void execute_addRemark_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"geeliette"},"content":"        Reservation originalReservation \u003d model.getFilteredReservationList().get(0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"geeliette"},"content":"        Identification id \u003d originalReservation.getId();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"geeliette"},"content":"        Remark newRemark \u003d new Remark(CommandTestUtil.VALID_REMARK_AMY);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"geeliette"},"content":"        // Create an edited reservation with the updated remark","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"geeliette"},"content":"        Reservation editedReservation \u003d new ReservationBuilder(originalReservation).withRemark(newRemark.value).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"geeliette"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(id, newRemark);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"geeliette"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"geeliette"},"content":"                Messages.format(editedReservation));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"geeliette"},"content":"        Model expectedModel \u003d new ModelManager(new GastroBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"geeliette"},"content":"        expectedModel.setReservation(originalReservation, editedReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"geeliette"},"content":"    public void execute_deleteRemark_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"geeliette"},"content":"        Reservation originalReservation \u003d model.getFilteredReservationList().get(0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"geeliette"},"content":"        Identification id \u003d originalReservation.getId();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"geeliette"},"content":"        // Created an edited reservation with an empty remark (ie delete remark)","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"geeliette"},"content":"        Remark newRemark \u003d new Remark(\"\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"geeliette"},"content":"        Reservation editedReservation \u003d new ReservationBuilder(originalReservation).withRemark(\"\").build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"geeliette"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(id, newRemark);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"geeliette"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS,","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"geeliette"},"content":"                Messages.format(editedReservation));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"geeliette"},"content":"        Model expectedModel \u003d new ModelManager(new GastroBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"geeliette"},"content":"        expectedModel.setReservation(originalReservation, editedReservation);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"geeliette"},"content":"    public void execute_invalidId_throwsCommandException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"geeliette"},"content":"        Reservation originalReservation \u003d model.getFilteredReservationList().get(0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"geeliette"},"content":"        Identification invalidId \u003d new Identification(originalReservation.getDate(), originalReservation.getPhone(),","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"geeliette"},"content":"                new StartTime(\"2359\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"geeliette"},"content":"        Remark newRemark \u003d new Remark(\"Dummy remark\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"geeliette"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(invalidId, newRemark);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"geeliette"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"geeliette"},"content":"        String expectedMessage \u003d \"Input reservation id does not exist.\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"geeliette"},"content":"        assertCommandFailure(remarkCommand, model, expectedMessage);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"geeliette"},"content":"        Reservation originalReservation \u003d model.getFilteredReservationList().get(0);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"geeliette"},"content":"        Identification id \u003d originalReservation.getId();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"geeliette"},"content":"        Remark remarkAmy \u003d new Remark(\"Amy\u0027s remark\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"geeliette"},"content":"        Remark remarkBob \u003d new Remark(\"Bob\u0027s remark\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"geeliette"},"content":"        RemarkCommand command1 \u003d new RemarkCommand(id, remarkAmy);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"geeliette"},"content":"        RemarkCommand command2 \u003d new RemarkCommand(id, remarkAmy);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"geeliette"},"content":"        RemarkCommand command3 \u003d new RemarkCommand(id, remarkBob);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"geeliette"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"geeliette"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"geeliette"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"geeliette"},"content":"        assertFalse(command1.equals(null));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"geeliette"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"geeliette"},"content":"        assertFalse(command1.equals(new ClearCommand()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"geeliette"},"content":"        assertFalse(command1.equals(command3));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"geeliette":66,"-":35,"Jasonzhou97":1}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.UnmarkCommand.MESSAGE_DUPLICATE_UNMARK;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.UnmarkCommand.MESSAGE_UNMARK_RESERVATION_SUCCESS;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"geeliette"},"content":"import static seedu.address.testutil.TypicalReservations.getTypicalGastroBook;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Identification;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"geeliette"},"content":"    private Model model \u003d new ModelManager(getTypicalGastroBook(), new UserPrefs());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_unmarkPaidReservation_success() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        //the reservation at index 2 is paid at the start","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Reservation reservationToUnmark \u003d model.getFilteredReservationList().get(2);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(reservationToUnmark.getDate(), reservationToUnmark.getPhone(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"                reservationToUnmark.getTime());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(id);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNMARK_RESERVATION_SUCCESS,","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Messages.format(reservationToUnmark));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Reservation reservationUnmarked \u003d new ReservationBuilder(reservationToUnmark).withPaymentStatus(false)","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.setReservation(reservationToUnmark, reservationUnmarked);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_unmarkUnpaidReservation_fail() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        //the reservation at index 3 is unpaid at the start","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Reservation reservationToUnmark \u003d model.getFilteredReservationList().get(3);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(reservationToUnmark.getDate(), reservationToUnmark.getPhone(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"                reservationToUnmark.getTime());","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(id);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DUPLICATE_UNMARK,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                Messages.format(reservationToUnmark));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandFailure(unmarkCommand, model, expectedMessage);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validCommandAndNotExistId_fail() {","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Reservation reservationToUnmark \u003d model.getFilteredReservationList().get(0);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Identification id \u003d new Identification(reservationToUnmark.getDate(), reservationToUnmark.getPhone(),","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new StartTime(\"2359\"));","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(id);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Input reservation id does not exist.\";","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandFailure(unmarkCommand, model, expectedMessage);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-26","isFullCredit":false}],"authorContributionMap":{"geeliette":2,"-":69}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Jasonzhou97":1}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.model.reservation.Duration;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.model.reservation.Pax;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.model.reservation.Table;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"public class ParserUtilTest {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    public void parseName_validValue_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"John Doe\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"        Name expected \u003d new Name(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(expected, ParserUtil.parseName(input));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(\"\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"Frozennfishh"},"content":"    public void parsePhone_validValue_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"98765432\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Frozennfishh"},"content":"        Phone expected \u003d new Phone(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(expected, ParserUtil.parsePhone(input));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Frozennfishh"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(\"123\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(\"01/05/2000\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Frozennfishh"},"content":"    public void parseTime_validValue_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"1400\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"Frozennfishh"},"content":"        StartTime expected \u003d new StartTime(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(expected, ParserUtil.parseTime(input));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"Frozennfishh"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(\"25:99\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDuration_validValue_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"1.5\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"Frozennfishh"},"content":"        Duration expected \u003d new Duration(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(expected, ParserUtil.parseDuration(input));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"Frozennfishh"},"content":"    public void parseDuration_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDuration(\"13\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"Frozennfishh"},"content":"    public void parsePax_validValue_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"5\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"Frozennfishh"},"content":"        Pax expected \u003d new Pax(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(expected, ParserUtil.parsePax(input));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"Frozennfishh"},"content":"    public void parsePax_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePax(\"10000\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Frozennfishh"},"content":"    public void parseTable_validValue_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"A1\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"Frozennfishh"},"content":"        Table expected \u003d new Table(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(expected, ParserUtil.parseTable(input));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"Frozennfishh"},"content":"    public void parseTable_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTable(\"-1\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Frozennfishh"},"content":"    public void parseRemark_invalidValue_throwsParseException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Frozennfishh"},"content":"                ParserUtil.parseRemark(\"123451234512345123451234512345123451234512345123451234512345123451234512345\"));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Frozennfishh"},"content":"    public void parseTag_validValue_success() throws Exception {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"Vegan\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Frozennfishh"},"content":"        Tag expected \u003d new Tag(input);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Frozennfishh"},"content":"        assertEquals(expected, ParserUtil.parseTag(input));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-04-06","isFullCredit":false}],"authorContributionMap":{"Jasonzhou97":1,"Frozennfishh":108}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"Frozennfishh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Frozennfishh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Frozennfishh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Frozennfishh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Frozennfishh"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Frozennfishh"},"content":"    private final RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Frozennfishh"},"content":"    public void parse_missingRemarkPrefix_throwsParseException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"S1234567A This is a remark without a prefix\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Frozennfishh"},"content":"    public void parse_invalidID_throwsParseException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"INVALID_ID r/This is a remark\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Frozennfishh"},"content":"    @Test","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Frozennfishh"},"content":"    public void parse_duplicateRemarkPrefixes_throwsParseException() {","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Frozennfishh"},"content":"        String input \u003d \"S1234567A r/First r/Second\";","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(input));","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Frozennfishh"},"content":"    }","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Frozennfishh"},"content":"}","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"Frozennfishh"},"content":"","lastModifiedDate":"2025-04-07","isFullCredit":false}],"authorContributionMap":{"Jasonzhou97":1,"Frozennfishh":31}},{"path":"src/test/java/seedu/address/model/GastroBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.testutil.TypicalReservations.ALICE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.testutil.TypicalReservations.BENSON;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonzhou97"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonzhou97"},"content":"import java.util.Collection;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonzhou97"},"content":"import java.util.Collections;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonzhou97"},"content":"import java.util.List;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonzhou97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonzhou97"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonzhou97"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.exceptions.DuplicateReservationException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.exceptions.ReservationNotFoundException;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.testutil.ReservationBuilder;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class GastroBookTest {","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonzhou97"},"content":"    private final GastroBook gastroBook \u003d new GastroBook();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(Collections.emptyList(), gastroBook.getReservationList());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(NullPointerException.class, () -\u003e gastroBook.resetData(null));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Jasonzhou97"},"content":"    public void resetData_withDuplicateReservations_throwsDuplicateReservationException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonzhou97"},"content":"        // Two reservations with the same identity fields","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"Jasonzhou97"},"content":"        Reservation editedAlice \u003d new ReservationBuilder(ALICE).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"Jasonzhou97"},"content":"        List\u003cReservation\u003e newReservations \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"Jasonzhou97"},"content":"        GastroBookStub newData \u003d new GastroBookStub(newReservations);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(DuplicateReservationException.class, () -\u003e gastroBook.resetData(newData));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"Jasonzhou97"},"content":"    public void hasReservation_nullReservation_throwsNullPointerException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(NullPointerException.class, () -\u003e gastroBook.hasReservation(null));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonzhou97"},"content":"    public void hasReservation_reservationNotInGastroBook_returnsFalse() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"Jasonzhou97"},"content":"        assertFalse(gastroBook.hasReservation(ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"Jasonzhou97"},"content":"    public void hasReservation_reservationInGastroBook_returnsTrue() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(gastroBook.hasReservation(ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"Jasonzhou97"},"content":"    public void hasReservation_reservationWithSameIdentityFieldsInGastroBook_returnsTrue() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"Jasonzhou97"},"content":"        Reservation editedAlice \u003d new ReservationBuilder(ALICE).build();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(gastroBook.hasReservation(editedAlice));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"Jasonzhou97"},"content":"    public void getReservationList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e gastroBook.getReservationList().remove(0));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"Jasonzhou97"},"content":"    public void addReservation_validReservation_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(gastroBook.hasReservation(ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(1, gastroBook.getReservationList().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"Jasonzhou97"},"content":"    public void addReservation_duplicateReservation_throwsDuplicateReservationException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(DuplicateReservationException.class, () -\u003e gastroBook.addReservation(ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonzhou97"},"content":"    public void setReservation_targetNotInGastroBook_throwsReservationNotFoundException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(ReservationNotFoundException.class, () -\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"Jasonzhou97"},"content":"                gastroBook.setReservation(ALICE, ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonzhou97"},"content":"    public void setReservation_validTargetAndEditedReservation_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.setReservation(ALICE, BENSON);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"Jasonzhou97"},"content":"        assertFalse(gastroBook.hasReservation(ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(gastroBook.hasReservation(BENSON));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonzhou97"},"content":"    public void setReservation_editedReservationIsDuplicate_throwsDuplicateReservationException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(BENSON);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(DuplicateReservationException.class, () -\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonzhou97"},"content":"                gastroBook.setReservation(ALICE, BENSON));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonzhou97"},"content":"    public void removeReservation_reservationInGastroBook_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.removeReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonzhou97"},"content":"        assertFalse(gastroBook.hasReservation(ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(0, gastroBook.getReservationList().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"Jasonzhou97"},"content":"    public void removeReservation_reservationNotInGastroBook_throwsReservationNotFoundException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(ReservationNotFoundException.class, () -\u003e gastroBook.removeReservation(ALICE));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"Jasonzhou97"},"content":"    public void toString_nonEmptyGastroBook_returnsStringRepresentation() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonzhou97"},"content":"        String result \u003d gastroBook.toString();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(result.contains(\"persons\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"Jasonzhou97"},"content":"    public void equals_sameGastroBook_returnsTrue() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"Jasonzhou97"},"content":"        GastroBook copy \u003d new GastroBook();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"Jasonzhou97"},"content":"        copy.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(gastroBook.equals(copy));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"Jasonzhou97"},"content":"    public void equals_differentGastroBook_returnsFalse() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"Jasonzhou97"},"content":"        GastroBook other \u003d new GastroBook();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"Jasonzhou97"},"content":"        other.addReservation(BENSON);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"Jasonzhou97"},"content":"        assertFalse(gastroBook.equals(other));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"Jasonzhou97"},"content":"    public void hashCode_sameContent_sameHashCode() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"Jasonzhou97"},"content":"        GastroBook copy \u003d new GastroBook();","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"Jasonzhou97"},"content":"        copy.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"Jasonzhou97"},"content":"        gastroBook.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(gastroBook.hashCode(), copy.hashCode());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"Jasonzhou97"},"content":"    /**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"Jasonzhou97"},"content":"     * A stub ReadOnlyGastroBook whose reservations list can violate interface constraints.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"Jasonzhou97"},"content":"    private static class GastroBookStub implements ReadOnlyGastroBook {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"Jasonzhou97"},"content":"        private final ObservableList\u003cReservation\u003e reservations;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"Jasonzhou97"},"content":"        GastroBookStub(Collection\u003cReservation\u003e reservations) {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"Jasonzhou97"},"content":"            this.reservations \u003d FXCollections.observableArrayList(reservations);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public ObservableList\u003cReservation\u003e getReservationList() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return reservations;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24","isFullCredit":false}],"authorContributionMap":{"-":65,"Jasonzhou97":112}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"Jasonzhou97"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"Jasonzhou97"},"content":"import static seedu.address.testutil.TypicalReservations.ALICE;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"Jasonzhou97"},"content":"import java.nio.file.Path;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"Jasonzhou97"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"Jasonzhou97"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Person;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"Jasonzhou97"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Jasonzhou97"},"content":"/**","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"Jasonzhou97"},"content":" * Unit tests for {@link ModelManager}.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"Jasonzhou97"},"content":" */","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(new GastroBook(), new GastroBook(modelManager.getAddressBook()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(new PersonsList(), modelManager.getPersonsList());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"Jasonzhou97"},"content":"    public void setUserPrefs_validUserPrefs_userPrefsSet() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"Jasonzhou97"},"content":"    public void setGuiSettings_validGuiSettings_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"Jasonzhou97"},"content":"    public void setAddressBookFilePath_validPath_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"Jasonzhou97"},"content":"    public void hasReservation_nullReservation_throwsNullPointerException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasReservation(null));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"Jasonzhou97"},"content":"    public void hasReservation_reservationNotInGastroBook_returnsFalse() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasReservation(ALICE));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"Jasonzhou97"},"content":"    public void hasReservation_reservationInGastroBook_returnsTrue() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"        modelManager.addReservation(ALICE);","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasReservation(ALICE));","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"Jasonzhou97"},"content":"    public void getFilteredReservationList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"Jasonzhou97"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"Jasonzhou97"},"content":"                modelManager.getFilteredReservationList().remove(0));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"Jasonzhou97"},"content":"    public void getOverallReservationList_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"Jasonzhou97"},"content":"        modelManager.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"Jasonzhou97"},"content":"        // Apply a filter first","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"Jasonzhou97"},"content":"        modelManager.updateFilteredReservationList(r -\u003e r.getName().equals(ALICE.getName()));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(1, modelManager.getFilteredReservationList().size());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"Jasonzhou97"},"content":"    public void addPerson_personAdded_success() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"Jasonzhou97"},"content":"        Person person \u003d new Person(new Name(\"Test Person\"), new Phone(\"12345678\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"Jasonzhou97"},"content":"        modelManager.addPerson(person);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(modelManager.hasPerson(person));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"Jasonzhou97"},"content":"    public void recordBooking_personExists_updatesCounter() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"Jasonzhou97"},"content":"        // Add a person first","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"Jasonzhou97"},"content":"        Name name \u003d new Name(\"Test Person\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"Jasonzhou97"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"Jasonzhou97"},"content":"        Person person \u003d new Person(name, phone);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"Jasonzhou97"},"content":"        modelManager.addPerson(person);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"Jasonzhou97"},"content":"        // Record booking for the same person","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"Jasonzhou97"},"content":"        Person updatedPerson \u003d modelManager.recordBooking(name, phone);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"Jasonzhou97"},"content":"        // Counter should be incremented","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"Jasonzhou97"},"content":"        assertEquals(1, updatedPerson.getCounter());","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"Jasonzhou97"},"content":"    public void addReservation_updatesPersonsList() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"Jasonzhou97"},"content":"        // Add a reservation","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"Jasonzhou97"},"content":"        modelManager.addReservation(ALICE);","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"Jasonzhou97"},"content":"        // PersonsList should be updated with the customer info","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(modelManager.hasPerson(","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"Jasonzhou97"},"content":"                new Person(ALICE.getName(), ALICE.getPhone())));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31","isFullCredit":false}],"authorContributionMap":{"-":71,"Jasonzhou97":63}},{"path":"src/test/java/seedu/address/model/reservation/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Frozennfishh"},"content":"        assertFalse(Name.isValidName(\"asdlkfjhaslkdjhflkasjdhflkasjdhflkasjdhflkasjdhflksadjhflkasdjhf\")); //length","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"Frozennfishh"},"content":"        assertTrue(Name.isValidName(\"1234512345123451234512345\")); // long names","lastModifiedDate":"2025-04-07","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"Frozennfishh"},"content":"        assertTrue(Name.isValidName(\"D@niel\")); // special characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"Frozennfishh"},"content":"        assertTrue(Name.isValidName(\"A S/O B\")); // special characters","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"Frozennfishh"},"content":"        assertTrue(Name.isValidName(\"?????\")); // symbols only","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16","isFullCredit":false}],"authorContributionMap":{"-":56,"Frozennfishh":5}},{"path":"src/test/java/seedu/address/model/reservation/StartDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.reservation;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StartDateTest {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void isValidDate_invalidDates_returnFalse() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"32/01/2024\")); // Day out of range","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"31/04/2024\")); // April has no 31st","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"29/02/2023\")); // Not a leap year","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"00/12/2024\")); // Day cannot be 00","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"12/00/2024\")); // Month cannot be 00","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"31/13/2024\")); // No month 13","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"\")); // Empty string","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"Jasonzhou97"},"content":"    @Test","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"Jasonzhou97"},"content":"    public void isValidDate_validDates_retrunTrue() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(StartDate.isValidDate(\"11/04/2025\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"Jasonzhou97"},"content":"        assertTrue(StartDate.isValidDate(\"12/04/2025\"));","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"Jasonzhou97"},"content":"    }","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"Jasonzhou97"},"content":"","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isValidDateRange_validDates_returnTrue() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"        LocalDate tomorrow \u003d today.plusDays(1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Ensure today\u0027s and tomorrow\u0027s date are considered valid","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(StartDate.isValidDate(today.format(FORMATTER)), \"Today\u0027s date should be valid\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(StartDate.isValidDate(tomorrow.format(FORMATTER)), \"Tomorrow\u0027s date should be valid\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void isValidDateRange_invalidDates_returnFalse() {","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"        LocalDate yesterday \u003d today.minusDays(1);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        LocalDate nextWeek \u003d today.plusDays(7);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Past date should be invalid","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // assertFalse(StartDate.isValidDate(yesterday.format(FORMATTER)), \"Yesterday\u0027s date should be invalid\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Future dates beyond tomorrow should be invalid","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        //assertFalse(StartDate.isValidDate(nextWeek.format(FORMATTER)), \"A date after tomorrow should be invalid\");","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Invalid date formats","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"32/01/2024\"), \"Invalid day should be rejected\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"2024-03-10\"), \"Incorrect format should be rejected\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(StartDate.isValidDate(\"10-03-2024\"), \"Dash format should be rejected\");","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-12","isFullCredit":false}],"authorContributionMap":{"-":54,"Jasonzhou97":6}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedReservationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalReservations;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonAdaptedReservationTest {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Reservation BENSON \u003d TypicalReservations.BENSON;","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"Frozennfishh"},"content":"    private static final String INVALID_NAME \u003d \"R@chelR@chelR@chelR@chelR@chelR@chelR@chelR@chelR@chelR@chel\";","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_DATE \u003d \"32-12-2024\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TIME \u003d \"25:61\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_DURATION \u003d \"5h\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PAX \u003d \"-2\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TABLE \u003d \"T@ble9\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ID \u003d \"\";","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TIME \u003d BENSON.getTime().toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_DURATION \u003d BENSON.getDuration().toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PAX \u003d BENSON.getPax().toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TABLE \u003d BENSON.getTable().toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Boolean VALID_IS_PAID \u003d BENSON.getIsPaid();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validReservationDetails_returnsReservation() throws Exception {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(BENSON);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, reservation.toModelType());","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"                INVALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"                null, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"                VALID_NAME, INVALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"                VALID_NAME, null, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, INVALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, null, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, INVALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, null, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidDuration_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, INVALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void toModelType_nullDuration_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, null,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPax_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"-"},"content":"                INVALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void toModelType_nullPax_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"-"},"content":"                null, VALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTable_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"-"},"content":"                VALID_PAX, INVALID_TABLE, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void toModelType_nullTable_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"-"},"content":"                VALID_PAX, null, VALID_REMARK, VALID_TAGS, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d List.of(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, invalidTags, VALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, INVALID_ID, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"-"},"content":"        JsonAdaptedReservation reservation \u003d new JsonAdaptedReservation(","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"-"},"content":"                VALID_NAME, VALID_PHONE, VALID_DATE, VALID_TIME, VALID_DURATION,","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"-"},"content":"                VALID_PAX, VALID_TABLE, VALID_REMARK, VALID_TAGS, null, VALID_IS_PAID);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, reservation::toModelType);","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13","isFullCredit":false}],"authorContributionMap":{"-":184,"Frozennfishh":1}},{"path":"src/test/java/seedu/address/testutil/TypicalReservations.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.GastroBook;","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Duration;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Name;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Pax;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Phone;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Remark;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Reservation;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartDate;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.StartTime;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.reservation.Table;","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalReservations {","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static LocalDate tomorrow \u003d today.plusDays(1);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // TODO work on the ReservationBuilder() constructor","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"-"},"content":"    //    public static final Reservation AMY \u003d new ReservationBuilder()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"-"},"content":"    //    .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"-"},"content":"    //            .withTags(VALID_TAG_FRIEND).build1();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //    public static final Reservation BOB \u003d new ReservationBuilder()","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"-"},"content":"    //    .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"-"},"content":"    //            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withTime(VALID_TIME_BOB)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"-"},"content":"    //            .build2();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static String todayDate \u003d today.format(formatter);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static String tomorrowDate \u003d tomorrow.format(formatter);","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Reservation ALICE \u003d new ReservationBuilder(new Name(\"Alice Pauline\"), new Phone(\"94351253\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new StartDate(todayDate), new StartTime(\"1800\"), new Duration(\"2\"), new Pax(\"2\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Table(\"A1\"), new Remark(\"She likes aardvarks.\"), new HashSet\u003c\u003e()).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Reservation BENSON \u003d new ReservationBuilder(new Name(\"Benson Meier\"), new Phone(\"93321423\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"-"},"content":"            new StartDate(todayDate), new StartTime(\"1400\"), new Duration(\"3\"), new Pax(\"2\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"-"},"content":"            new Table(\"A2\"), new Remark(\"He can\u0027t take beer!\"), new HashSet\u003c\u003e()).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //the payment status of this reservation is set to true.","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Reservation CARL \u003d new ReservationBuilder(new Name(\"Carl Kurz\"), new Phone(\"95352563\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"-"},"content":"            new StartDate(tomorrowDate), new StartTime(\"1200\"), new Duration(\"3\"), new Pax(\"3\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"-"},"content":"            new Table(\"A2\"), new Remark(\"She can\u0027t take beer!\"), new HashSet\u003c\u003e()).withPaymentStatus(true).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Reservation DANIEL \u003d new ReservationBuilder(new Name(\"Daniel Meier\"), new Phone(\"87652533\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"-"},"content":"            new StartDate(todayDate), new StartTime(\"1200\"), new Duration(\"1\"), new Pax(\"3\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"-"},"content":"            new Table(\"A2\"), new Remark(\"She can\u0027t take beer!\"), new HashSet\u003c\u003e()).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Reservation ELLE \u003d new ReservationBuilder(new Name(\"Elle Meyer\"), new Phone(\"9482224\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"-"},"content":"            new StartDate(tomorrowDate), new StartTime(\"1200\"), new Duration(\"1\"), new Pax(\"3\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"-"},"content":"            new Table(\"A2\"), new Remark(\"She can\u0027t take beer!\"), new HashSet\u003c\u003e()).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Reservation FIONA \u003d new ReservationBuilder(new Name(\"Fiona Kunz\"), new Phone(\"9482427\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"-"},"content":"            new StartDate(todayDate), new StartTime(\"1200\"), new Duration(\"1\"), new Pax(\"3\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"-"},"content":"            new Table(\"A2\"), new Remark(\"She can\u0027t take beer!\"), new HashSet\u003c\u003e())","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .withPaymentStatus(true).build();","lastModifiedDate":"2025-04-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Reservation GEORGE \u003d new ReservationBuilder(new Name(\"George Best\"), new Phone(\"9482442\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"-"},"content":"            new StartDate(tomorrowDate), new StartTime(\"1200\"), new Duration(\"1\"), new Pax(\"3\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"-"},"content":"            new Table(\"A2\"), new Remark(\"She can\u0027t take beer!\"), new HashSet\u003c\u003e()).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Reservation HOON \u003d new ReservationBuilder(new Name(\"Hoon Meier\"), new Phone(\"8482424\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"-"},"content":"            new StartDate(tomorrowDate), new StartTime(\"1200\"), new Duration(\"1\"), new Pax(\"3\"),","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"-"},"content":"            new Table(\"A2\"), new Remark(\"She can\u0027t take beer!\"), new HashSet\u003c\u003e()).build();","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final Reservation BENSON \u003d new ReservationBuilder( ).withName(\"Benson Meier\")","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"            .withRemark(\"He can\u0027t take beer!\")","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final Reservation CARL \u003d new ReservationBuilder( ).withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"-"},"content":"    .build();","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final Reservation DANIEL \u003d new ReservationBuilder( ).withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final Reservation ELLE \u003d new ReservationBuilder(, , , , , , , , , ).withName(\"Elle Meyer\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"-"},"content":"    .withPhone(\"9482224\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final Reservation FIONA \u003d new ReservationBuilder(, , , , , , , , , ).withName(\"Fiona Kunz\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"-"},"content":"    .withPhone(\"9482427\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final Reservation GEORGE \u003d new ReservationBuilder(, , , , , , , , , ).withName(\"George Best\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"-"},"content":"    .withPhone(\"9482442\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final Reservation HOON \u003d new ReservationBuilder(, , , , , , , , , ).withName(\"Hoon Meier\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .withPhone(\"8482424\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final Reservation IDA \u003d new ReservationBuilder(, , , , , , , , , ).withName(\"Ida Mueller\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"-"},"content":"    .withPhone(\"8482131\")","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final Reservation AMY \u003d new ReservationBuilder(, , , , , , , , , ).withName(VALID_NAME_AMY)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final Reservation BOB \u003d new ReservationBuilder(, , , , , , , , , ).withName(VALID_NAME_BOB)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"-"},"content":"    .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2025-03-26","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"-"},"content":"    // public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private TypicalReservations() {} // prevents instantiation","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"geeliette"},"content":"     * Returns a {@code GastroBook} with all the typical persons.","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"geeliette"},"content":"    public static GastroBook getTypicalGastroBook() {","lastModifiedDate":"2025-04-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"-"},"content":"        GastroBook ab \u003d new GastroBook();","lastModifiedDate":"2025-04-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (Reservation reservation : getTypicalReservations()) {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"-"},"content":"            ab.addReservation(reservation);","lastModifiedDate":"2025-03-12","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static List\u003cReservation\u003e getTypicalReservations() {","lastModifiedDate":"2025-03-16","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HOON));","lastModifiedDate":"2025-03-27","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2025-03-10","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2025-03-10","isFullCredit":false}],"authorContributionMap":{"geeliette":2,"-":130}}]
